package br.com.original.bank.controller.api.crypto;

/* loaded from: classes2.dex */
public class RSAUtils {
    private static char $r8$backportedMethods$utility$Double$1$hashCode = 0;
    private static final java.lang.String TAG = null;

    /* renamed from: a */
    private static char f1463a = 0;

    /* renamed from: c */
    private static int f1464c = 0;

    /* renamed from: d */
    private static char f1465d = 0;

    /* renamed from: e */
    private static char f1466e = 0;
    private static br.com.original.bank.controller.api.crypto.RSAUtils rsaInstance = null;
    private static int value = 1;
    private java.lang.String serverPublicKey;

    static void $r8$backportedMethods$utility$Double$1$hashCode() {
            r0 = 30011(0x753b, float:4.2054E-41)
            br.com.original.bank.controller.api.crypto.RSAUtils.$r8$backportedMethods$utility$Double$1$hashCode = r0
            r0 = 59493(0xe865, float:8.3367E-41)
            br.com.original.bank.controller.api.crypto.RSAUtils.f1463a = r0
            r0 = 59826(0xe9b2, float:8.3834E-41)
            br.com.original.bank.controller.api.crypto.RSAUtils.f1465d = r0
            r0 = 2316(0x90c, float:3.245E-42)
            br.com.original.bank.controller.api.crypto.RSAUtils.f1466e = r0
            return
    }

    static {
            java.lang.Class<br.com.original.bank.controller.api.crypto.RSAUtils> r0 = br.com.original.bank.controller.api.crypto.RSAUtils.class
            $r8$backportedMethods$utility$Double$1$hashCode()     // Catch: java.lang.UnsupportedOperationException -> L6a
            br.com.original.bank.controller.api.crypto.RSAUtils r1 = new br.com.original.bank.controller.api.crypto.RSAUtils     // Catch: java.lang.UnsupportedOperationException -> L6a
            r1.<init>()     // Catch: java.lang.UnsupportedOperationException -> L6a
            br.com.original.bank.controller.api.crypto.RSAUtils.rsaInstance = r1     // Catch: java.lang.IllegalStateException -> L68 java.lang.UnsupportedOperationException -> L6a
            int r1 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            r2 = r1 & 103(0x67, float:1.44E-43)
            r1 = r1 ^ 103(0x67, float:1.44E-43)
            r1 = r1 | r2
            r3 = r2 & r1
            r1 = r1 | r2
            int r3 = r3 + r1
            int r1 = r3 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r1
            int r3 = r3 % 2
            r1 = 57
            if (r3 != 0) goto L24
            r2 = 57
            goto L26
        L24:
            r2 = 10
        L26:
            r3 = 0
            if (r2 == r1) goto L36
            java.lang.String r0 = r0.getSimpleName()     // Catch: java.lang.NumberFormatException -> L32 java.lang.ArrayStoreException -> L34
            br.com.original.bank.controller.api.crypto.RSAUtils.TAG = r0     // Catch: java.lang.Exception -> L30 java.lang.ArrayStoreException -> L34
            goto L3d
        L30:
            r0 = move-exception
            goto L69
        L32:
            r0 = move-exception
            goto L69
        L34:
            r0 = move-exception
            goto L69
        L36:
            java.lang.String r0 = r0.getSimpleName()     // Catch: java.lang.IndexOutOfBoundsException -> L64 java.lang.IllegalArgumentException -> L66
            br.com.original.bank.controller.api.crypto.RSAUtils.TAG = r0     // Catch: java.lang.IndexOutOfBoundsException -> L64 java.lang.IllegalArgumentException -> L66
            int r0 = r3.length     // Catch: java.lang.Throwable -> L62
        L3d:
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c     // Catch: java.lang.ClassCastException -> L60
            int r0 = r0 + 60
            r1 = r0 & (-1)
            r0 = r0 | (-1)
            int r1 = r1 + r0
            int r0 = r1 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r0     // Catch: java.lang.IndexOutOfBoundsException -> L5e java.lang.ClassCastException -> L60
            int r1 = r1 % 2
            r0 = 54
            if (r1 != 0) goto L53
            r1 = 99
            goto L55
        L53:
            r1 = 54
        L55:
            if (r1 == r0) goto L5d
            super.hashCode()     // Catch: java.lang.Throwable -> L5b
            return
        L5b:
            r0 = move-exception
            throw r0
        L5d:
            return
        L5e:
            r0 = move-exception
            goto L6b
        L60:
            r0 = move-exception
            goto L6b
        L62:
            r0 = move-exception
            throw r0
        L64:
            r0 = move-exception
            goto L69
        L66:
            r0 = move-exception
            goto L6b
        L68:
            r0 = move-exception
        L69:
            throw r0
        L6a:
            r0 = move-exception
        L6b:
            throw r0
    }

    public RSAUtils() {
            r1 = this;
            r1.<init>()
            java.lang.String r0 = ""
            r1.serverPublicKey = r0     // Catch: java.lang.ArrayStoreException -> L8
            return
        L8:
            r0 = move-exception
            throw r0
        La:
            r0 = move-exception
            throw r0
    }

    /* renamed from: d */
    private static java.lang.String m16640d(char[] r11) {
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.value
            int r0 = r0 + 91
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.f1464c = r1
            r1 = 2
            int r0 = r0 % r1
            int r0 = r11.length
            char[] r0 = new char[r0]
            char[] r2 = new char[r1]
            int r3 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            int r3 = r3 + 47
            int r4 = r3 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r4
            int r3 = r3 % r1
            r3 = 0
            r4 = 0
        L1a:
            int r5 = r11.length
            r6 = 1
            if (r4 >= r5) goto L20
            r5 = 1
            goto L21
        L20:
            r5 = 0
        L21:
            if (r5 == r6) goto L2b
            char r11 = r0[r3]
            java.lang.String r1 = new java.lang.String
            r1.<init>(r0, r6, r11)
            return r1
        L2b:
            int r5 = br.com.original.bank.controller.api.crypto.RSAUtils.value
            int r5 = r5 + 25
            int r7 = r5 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.f1464c = r7
            int r5 = r5 % r1
            char r5 = r11[r4]
            r2[r3] = r5
            int r5 = r4 + 1
            char r7 = r11[r5]
            r2[r6] = r7
            char r7 = br.com.original.bank.controller.api.crypto.RSAUtils.f1466e
            char r8 = br.com.original.bank.controller.api.crypto.RSAUtils.f1463a
            char r9 = br.com.original.bank.controller.api.crypto.RSAUtils.f1465d
            char r10 = br.com.original.bank.controller.api.crypto.RSAUtils.$r8$backportedMethods$utility$Double$1$hashCode
            OBank.setPlaybackToRemote.m16945d(r2, r7, r8, r9, r10)
            char r7 = r2[r3]
            r0[r4] = r7
            char r6 = r2[r6]
            r0[r5] = r6
            int r4 = r4 + 2
            goto L1a
    }

    public static java.lang.String decrypt(java.lang.String r20, java.lang.String r21) {
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            r1 = r0 | 80
            r2 = 1
            int r1 = r1 << r2
            r0 = r0 ^ 80
            int r1 = r1 - r0
            r0 = r1 ^ (-1)
            r1 = r1 & (-1)
            int r1 = r1 << r2
            int r0 = r0 + r1
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r1
            r1 = 2
            int r0 = r0 % r1
            r3 = 0
            if (r0 != 0) goto L1a
            r0 = 1
            goto L1b
        L1a:
            r0 = 0
        L1b:
            r4 = 30407(0x76c7, float:4.2609E-41)
            r5 = 8
            r6 = 34652(0x875c, float:4.8558E-41)
            r7 = 7
            r8 = 44318(0xad1e, float:6.2103E-41)
            r9 = 52651(0xcdab, float:7.378E-41)
            r10 = 17616(0x44d0, float:2.4685E-41)
            r11 = 53242(0xcffa, float:7.4608E-41)
            r13 = 62324(0xf374, float:8.7335E-41)
            r14 = 22
            r15 = 6
            r16 = 5
            r17 = 14061(0x36ed, float:1.9704E-41)
            r18 = 61577(0xf089, float:8.6288E-41)
            r12 = 4
            r19 = 3
            if (r0 == 0) goto Lc8
            char[] r0 = new char[r14]     // Catch: java.lang.Exception -> L1d5
            r0[r3] = r13     // Catch: java.lang.Exception -> L1d5
            r0[r2] = r11     // Catch: java.lang.Exception -> L1d5
            r0[r1] = r18     // Catch: java.lang.Exception -> L1d5
            r0[r19] = r17     // Catch: java.lang.Exception -> L1d5
            r0[r12] = r10     // Catch: java.lang.Exception -> L1d5
            r0[r16] = r9     // Catch: java.lang.Exception -> L1d5
            r0[r15] = r8     // Catch: java.lang.Exception -> L1d5
            r0[r7] = r6     // Catch: java.lang.Exception -> L1d5
            r0[r5] = r4     // Catch: java.lang.Exception -> L1d5
            r4 = 9
            r5 = 32431(0x7eaf, float:4.5446E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 10
            r5 = 29228(0x722c, float:4.0957E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 11
            r5 = 55177(0xd789, float:7.732E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 12
            r5 = 25169(0x6251, float:3.5269E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 13
            r5 = 13484(0x34ac, float:1.8895E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 14
            r5 = 57560(0xe0d8, float:8.0659E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 15
            r5 = 47532(0xb9ac, float:6.6607E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 16
            r5 = 16270(0x3f8e, float:2.2799E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 17
            r5 = 8485(0x2125, float:1.189E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 18
            r5 = 47640(0xba18, float:6.6758E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 19
            r5 = 8445(0x20fd, float:1.1834E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 20
            r5 = 15019(0x3aab, float:2.1046E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 21
            r5 = 17502(0x445e, float:2.4526E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            java.lang.String r0 = m16640d(r0)     // Catch: java.lang.Exception -> L1d5
            java.lang.String r0 = r0.intern()     // Catch: java.lang.Exception -> L1d5
            javax.crypto.Cipher r0 = javax.crypto.Cipher.getInstance(r0)     // Catch: java.lang.Exception -> L1d5
            char[] r4 = new char[r12]     // Catch: java.lang.Exception -> L1d5
            r5 = 11961(0x2eb9, float:1.6761E-41)
            r4[r3] = r5     // Catch: java.lang.Exception -> L1d5
            r5 = 33647(0x836f, float:4.715E-41)
            r4[r2] = r5     // Catch: java.lang.Exception -> L1d5
            r4[r1] = r18     // Catch: java.lang.Exception -> L1d5
            r4[r19] = r17     // Catch: java.lang.Exception -> L1d5
            r5 = 0
            int r6 = r5.length     // Catch: java.lang.Throwable -> Lc5 java.lang.Exception -> L1d5
            goto L149
        Lc5:
            r0 = move-exception
            r1 = r0
            throw r1
        Lc8:
            char[] r0 = new char[r14]     // Catch: java.lang.Exception -> L1d5
            r0[r3] = r13     // Catch: java.lang.Exception -> L1d5
            r0[r2] = r11     // Catch: java.lang.Exception -> L1d5
            r0[r1] = r18     // Catch: java.lang.Exception -> L1d5
            r0[r19] = r17     // Catch: java.lang.Exception -> L1d5
            r0[r12] = r10     // Catch: java.lang.Exception -> L1d5
            r0[r16] = r9     // Catch: java.lang.Exception -> L1d5
            r0[r15] = r8     // Catch: java.lang.Exception -> L1d5
            r0[r7] = r6     // Catch: java.lang.Exception -> L1d5
            r0[r5] = r4     // Catch: java.lang.Exception -> L1d5
            r4 = 9
            r5 = 32431(0x7eaf, float:4.5446E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 10
            r5 = 29228(0x722c, float:4.0957E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 11
            r5 = 55177(0xd789, float:7.732E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 12
            r5 = 25169(0x6251, float:3.5269E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 13
            r5 = 13484(0x34ac, float:1.8895E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 14
            r5 = 57560(0xe0d8, float:8.0659E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 15
            r5 = 47532(0xb9ac, float:6.6607E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 16
            r5 = 16270(0x3f8e, float:2.2799E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 17
            r5 = 8485(0x2125, float:1.189E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 18
            r5 = 47640(0xba18, float:6.6758E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 19
            r5 = 8445(0x20fd, float:1.1834E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 20
            r5 = 15019(0x3aab, float:2.1046E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            r4 = 21
            r5 = 17502(0x445e, float:2.4526E-41)
            r0[r4] = r5     // Catch: java.lang.Exception -> L1d5
            java.lang.String r0 = m16640d(r0)     // Catch: java.lang.Exception -> L1d5
            java.lang.String r0 = r0.intern()     // Catch: java.lang.Exception -> L1d5
            javax.crypto.Cipher r0 = javax.crypto.Cipher.getInstance(r0)     // Catch: java.lang.Exception -> L1d5
            char[] r4 = new char[r12]     // Catch: java.lang.Exception -> L1d5
            r5 = 11961(0x2eb9, float:1.6761E-41)
            r4[r3] = r5     // Catch: java.lang.Exception -> L1d5
            r5 = 33647(0x836f, float:4.715E-41)
            r4[r2] = r5     // Catch: java.lang.Exception -> L1d5
            r4[r1] = r18     // Catch: java.lang.Exception -> L1d5
            r4[r19] = r17     // Catch: java.lang.Exception -> L1d5
        L149:
            java.lang.String r4 = m16640d(r4)     // Catch: java.lang.Exception -> L1d5
            java.lang.String r4 = r4.intern()     // Catch: java.lang.Exception -> L1d5
            java.security.KeyFactory r4 = java.security.KeyFactory.getInstance(r4)     // Catch: java.lang.Exception -> L1d5
            java.security.spec.PKCS8EncodedKeySpec r5 = new java.security.spec.PKCS8EncodedKeySpec     // Catch: java.lang.Exception -> L1d5
            byte[] r6 = r20.getBytes()     // Catch: java.lang.Exception -> L1d5
            byte[] r6 = org.apache.commons.codec.binary.Base64.decodeBase64(r6)     // Catch: java.lang.Exception -> L1d5
            byte[] r6 = org.apache.commons.codec.binary.Base64.decodeBase64(r6)     // Catch: java.lang.Exception -> L1d5
            r5.<init>(r6)     // Catch: java.lang.Exception -> L1d5
            int r6 = br.com.original.bank.controller.api.crypto.RSAUtils.value
            int r6 = r6 + 55
            int r7 = r6 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.f1464c = r7
            int r6 = r6 % r1
            java.security.PrivateKey r4 = r4.generatePrivate(r5)     // Catch: java.lang.Exception -> L1d5
            r0.init(r1, r4)     // Catch: java.lang.Exception -> L1d5
            byte[] r4 = r21.getBytes()     // Catch: java.lang.Exception -> L1d5
            byte[] r4 = org.apache.commons.codec.binary.Base64.decodeBase64(r4)     // Catch: java.lang.Exception -> L1d5
            byte[] r0 = r0.doFinal(r4)     // Catch: java.lang.Exception -> L1d5
            java.lang.String r4 = new java.lang.String     // Catch: java.lang.Exception -> L1d5
            char[] r5 = new char[r15]     // Catch: java.lang.Exception -> L1d5
            r6 = 50759(0xc647, float:7.1129E-41)
            r5[r3] = r6     // Catch: java.lang.Exception -> L1d5
            r3 = 39463(0x9a27, float:5.53E-41)
            r5[r2] = r3     // Catch: java.lang.Exception -> L1d5
            r3 = 32704(0x7fc0, float:4.5828E-41)
            r5[r1] = r3     // Catch: java.lang.Exception -> L1d5
            r3 = 57509(0xe0a5, float:8.0587E-41)
            r5[r19] = r3     // Catch: java.lang.Exception -> L1d5
            r3 = 46011(0xb3bb, float:6.4475E-41)
            r5[r12] = r3     // Catch: java.lang.Exception -> L1d5
            r3 = 38507(0x966b, float:5.396E-41)
            r5[r16] = r3     // Catch: java.lang.Exception -> L1d5
            java.lang.String r3 = m16640d(r5)     // Catch: java.lang.Exception -> L1d5
            java.lang.String r3 = r3.intern()     // Catch: java.lang.Exception -> L1d5
            r4.<init>(r0, r3)     // Catch: java.lang.Exception -> L1d5
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            r3 = r0 & 59
            r0 = r0 ^ 59
            r0 = r0 | r3
            r5 = r3 & r0
            r0 = r0 | r3
            int r5 = r5 + r0
            int r0 = r5 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r0
            int r5 = r5 % r1
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.value
            r3 = 25
            r5 = r0 & (-26)
            r6 = r0 ^ (-1)
            r6 = r6 & r3
            r5 = r5 | r6
            r0 = r0 & r3
            int r0 = r0 << r2
            r3 = r5 ^ r0
            r0 = r0 & r5
            int r0 = r0 << r2
            int r3 = r3 + r0
            int r0 = r3 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.f1464c = r0
            int r3 = r3 % r1
            return r4
        L1d5:
            r0 = move-exception
            r0.printStackTrace()
            r1 = 0
            return r1
    }

    public static br.com.original.bank.controller.api.crypto.RSAUtils getInstance() {
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c     // Catch: java.lang.IllegalStateException -> L2c
            r1 = r0 & 17
            r0 = r0 ^ 17
            r0 = r0 | r1
            int r0 = -r0
            int r0 = -r0
            r2 = r1 & r0
            r0 = r0 | r1
            int r2 = r2 + r0
            int r0 = r2 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r0     // Catch: java.lang.IllegalStateException -> L2c
            int r2 = r2 % 2
            r0 = 41
            if (r2 != 0) goto L1a
            r1 = 50
            goto L1c
        L1a:
            r1 = 41
        L1c:
            if (r1 == r0) goto L27
            br.com.original.bank.controller.api.crypto.RSAUtils r0 = br.com.original.bank.controller.api.crypto.RSAUtils.rsaInstance     // Catch: java.lang.RuntimeException -> L25
            r1 = 0
            int r1 = r1.length     // Catch: java.lang.Throwable -> L23
            goto L29
        L23:
            r0 = move-exception
            throw r0
        L25:
            r0 = move-exception
            goto L2b
        L27:
            br.com.original.bank.controller.api.crypto.RSAUtils r0 = br.com.original.bank.controller.api.crypto.RSAUtils.rsaInstance     // Catch: java.lang.IllegalArgumentException -> L2a
        L29:
            return r0
        L2a:
            r0 = move-exception
        L2b:
            throw r0
        L2c:
            r0 = move-exception
            throw r0
    }

    public java.lang.String encrypt(java.lang.String r16, java.lang.String r17) {
            r15 = this;
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            r1 = r0 ^ 4
            r2 = 4
            r0 = r0 & r2
            r3 = 1
            int r0 = r0 << r3
            int r1 = r1 + r0
            int r1 = r1 - r3
            int r0 = r1 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r0
            r4 = 2
            int r1 = r1 % r4
            r0 = 22
            r1 = 11
            r5 = 0
            char[] r0 = new char[r0]     // Catch: java.lang.Exception -> L137
            r6 = 62324(0xf374, float:8.7335E-41)
            r0[r5] = r6     // Catch: java.lang.Exception -> L137
            r6 = 53242(0xcffa, float:7.4608E-41)
            r0[r3] = r6     // Catch: java.lang.Exception -> L137
            r6 = 61577(0xf089, float:8.6288E-41)
            r0[r4] = r6     // Catch: java.lang.Exception -> L137
            r7 = 14061(0x36ed, float:1.9704E-41)
            r8 = 3
            r0[r8] = r7     // Catch: java.lang.Exception -> L137
            r9 = 17616(0x44d0, float:2.4685E-41)
            r0[r2] = r9     // Catch: java.lang.Exception -> L137
            r9 = 52651(0xcdab, float:7.378E-41)
            r10 = 5
            r0[r10] = r9     // Catch: java.lang.Exception -> L137
            r9 = 44318(0xad1e, float:6.2103E-41)
            r11 = 6
            r0[r11] = r9     // Catch: java.lang.Exception -> L137
            r9 = 7
            r12 = 34652(0x875c, float:4.8558E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 8
            r12 = 30407(0x76c7, float:4.2609E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 9
            r12 = 32431(0x7eaf, float:4.5446E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 10
            r12 = 29228(0x722c, float:4.0957E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 55177(0xd789, float:7.732E-41)
            r0[r1] = r9     // Catch: java.lang.Exception -> L137
            r9 = 12
            r12 = 25169(0x6251, float:3.5269E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 13
            r12 = 13484(0x34ac, float:1.8895E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 14
            r12 = 57560(0xe0d8, float:8.0659E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 15
            r12 = 47532(0xb9ac, float:6.6607E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 16
            r12 = 16270(0x3f8e, float:2.2799E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 17
            r12 = 8485(0x2125, float:1.189E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 18
            r12 = 47640(0xba18, float:6.6758E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 19
            r12 = 8445(0x20fd, float:1.1834E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 20
            r12 = 15019(0x3aab, float:2.1046E-41)
            r0[r9] = r12     // Catch: java.lang.Exception -> L137
            r9 = 17502(0x445e, float:2.4526E-41)
            r12 = 21
            r0[r12] = r9     // Catch: java.lang.Exception -> L137
            java.lang.String r0 = m16640d(r0)     // Catch: java.lang.Exception -> L137
            java.lang.String r0 = r0.intern()     // Catch: java.lang.Exception -> L137
            javax.crypto.Cipher r0 = javax.crypto.Cipher.getInstance(r0)     // Catch: java.lang.Exception -> L137
            char[] r9 = new char[r2]     // Catch: java.lang.Exception -> L137
            r13 = 11961(0x2eb9, float:1.6761E-41)
            r9[r5] = r13     // Catch: java.lang.Exception -> L137
            r13 = 33647(0x836f, float:4.715E-41)
            r9[r3] = r13     // Catch: java.lang.Exception -> L137
            r9[r4] = r6     // Catch: java.lang.Exception -> L137
            r9[r8] = r7     // Catch: java.lang.Exception -> L137
            java.lang.String r6 = m16640d(r9)     // Catch: java.lang.Exception -> L137
            java.lang.String r6 = r6.intern()     // Catch: java.lang.Exception -> L137
            java.security.KeyFactory r6 = java.security.KeyFactory.getInstance(r6)     // Catch: java.lang.Exception -> L137
            java.security.spec.X509EncodedKeySpec r7 = new java.security.spec.X509EncodedKeySpec     // Catch: java.lang.Exception -> L137
            byte[] r9 = r16.getBytes()     // Catch: java.lang.Exception -> L137
            byte[] r9 = org.apache.commons.codec.binary.Base64.decodeBase64(r9)     // Catch: java.lang.Exception -> L137
            r7.<init>(r9)     // Catch: java.lang.Exception -> L137
            int r9 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            r13 = r9 & 21
            r14 = r13 ^ (-1)
            r9 = r9 | r12
            r9 = r9 & r14
            int r12 = r13 << 1
            int r12 = -r12
            int r12 = -r12
            r13 = r9 & r12
            r9 = r9 | r12
            int r13 = r13 + r9
            int r9 = r13 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r9
            int r13 = r13 % r4
            if (r13 != 0) goto Le4
            r9 = 0
            goto Le5
        Le4:
            r9 = 1
        Le5:
            if (r9 == r3) goto Lef
            java.security.PublicKey r6 = r6.generatePublic(r7)     // Catch: java.lang.Exception -> L137
        Leb:
            r0.init(r3, r6)     // Catch: java.lang.Exception -> L137
            goto Lf4
        Lef:
            java.security.PublicKey r6 = r6.generatePublic(r7)     // Catch: java.lang.Exception -> L137
            goto Leb
        Lf4:
            byte[] r6 = r17.getBytes()     // Catch: java.lang.Exception -> L137
            byte[] r0 = r0.doFinal(r6)     // Catch: java.lang.Exception -> L137
            java.lang.String r6 = new java.lang.String     // Catch: java.lang.Exception -> L137
            byte[] r0 = org.apache.commons.codec.binary.Base64.encodeBase64(r0)     // Catch: java.lang.Exception -> L137
            char[] r7 = new char[r11]     // Catch: java.lang.Exception -> L137
            r9 = 50759(0xc647, float:7.1129E-41)
            r7[r5] = r9     // Catch: java.lang.Exception -> L137
            r9 = 39463(0x9a27, float:5.53E-41)
            r7[r3] = r9     // Catch: java.lang.Exception -> L137
            r9 = 32704(0x7fc0, float:4.5828E-41)
            r7[r4] = r9     // Catch: java.lang.Exception -> L137
            r9 = 57509(0xe0a5, float:8.0587E-41)
            r7[r8] = r9     // Catch: java.lang.Exception -> L137
            r8 = 46011(0xb3bb, float:6.4475E-41)
            r7[r2] = r8     // Catch: java.lang.Exception -> L137
            r2 = 38507(0x966b, float:5.396E-41)
            r7[r10] = r2     // Catch: java.lang.Exception -> L137
            java.lang.String r2 = m16640d(r7)     // Catch: java.lang.Exception -> L137
            java.lang.String r2 = r2.intern()     // Catch: java.lang.Exception -> L137
            r6.<init>(r0, r2)     // Catch: java.lang.Exception -> L137
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            int r0 = r0 + 18
            int r0 = r0 - r3
            int r2 = r0 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r2
            int r0 = r0 % r4
            goto L13d
        L137:
            r0 = move-exception
            r0.printStackTrace()
            java.lang.String r6 = ""
        L13d:
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c
            r2 = r0 ^ 11
            r7 = r0 & 11
            r2 = r2 | r7
            int r2 = r2 << r3
            r7 = r7 ^ (-1)
            r0 = r0 | r1
            r0 = r0 & r7
            int r0 = -r0
            r0 = r0 ^ (-1)
            int r2 = r2 - r0
            int r2 = r2 - r3
            int r0 = r2 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r0
            int r2 = r2 % r4
            if (r2 != 0) goto L156
            goto L157
        L156:
            r3 = 0
        L157:
            if (r3 == 0) goto L15f
            r0 = 0
            int r0 = r0.length     // Catch: java.lang.Throwable -> L15c
            return r6
        L15c:
            r0 = move-exception
            r1 = r0
            throw r1
        L15f:
            return r6
    }

    public java.lang.String getServerPublicKey() {
            r2 = this;
            int r0 = br.com.original.bank.controller.api.crypto.RSAUtils.f1464c     // Catch: java.lang.IllegalStateException -> L2f
            r1 = r0 & 66
            r0 = r0 | 66
            int r1 = r1 + r0
            r0 = r1 & (-1)
            r1 = r1 | (-1)
            int r0 = r0 + r1
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.value = r1     // Catch: java.lang.Exception -> L2d java.lang.IllegalStateException -> L2f
            int r0 = r0 % 2
            r1 = 28
            if (r0 != 0) goto L19
            r0 = 28
            goto L1b
        L19:
            r0 = 14
        L1b:
            if (r0 == r1) goto L22
            java.lang.String r0 = r2.serverPublicKey     // Catch: java.lang.IndexOutOfBoundsException -> L20
            goto L28
        L20:
            r0 = move-exception
            goto L30
        L22:
            java.lang.String r0 = r2.serverPublicKey     // Catch: java.lang.UnsupportedOperationException -> L2b
            r1 = 44
            int r1 = r1 / 0
        L28:
            return r0
        L29:
            r0 = move-exception
            throw r0
        L2b:
            r0 = move-exception
            goto L30
        L2d:
            r0 = move-exception
            goto L30
        L2f:
            r0 = move-exception
        L30:
            throw r0
    }

    public void init(android.app.Activity r3) {
            r2 = this;
            int r3 = br.com.original.bank.controller.api.crypto.RSAUtils.value     // Catch: java.lang.IndexOutOfBoundsException -> L41
            r0 = r3 ^ 83
            r3 = r3 & 83
            r1 = 1
            int r3 = r3 << r1
            int r0 = r0 + r3
            int r3 = r0 % 128
            br.com.original.bank.controller.api.crypto.RSAUtils.f1464c = r3     // Catch: java.lang.RuntimeException -> L3f java.lang.IndexOutOfBoundsException -> L41
            int r0 = r0 % 2
            r3 = 0
            if (r0 == 0) goto L13
            goto L14
        L13:
            r1 = 0
        L14:
            if (r1 == 0) goto L2c
            br.com.original.bank.controller.api.crypto.CryptoResources$Companion r0 = br.com.original.bank.controller.api.crypto.CryptoResources.Companion     // Catch: java.lang.ArrayStoreException -> L2a
            br.com.original.bank.controller.api.crypto.CryptoResources r0 = r0.getInstance()     // Catch: java.lang.ArrayStoreException -> L2a java.lang.NumberFormatException -> L3d
            java.lang.String r0 = r0.getKey()     // Catch: java.lang.NullPointerException -> L28 java.lang.ArrayStoreException -> L2a
            r2.serverPublicKey = r0     // Catch: java.lang.ArrayStoreException -> L2a java.lang.UnsupportedOperationException -> L39
            r0 = 62
            int r0 = r0 / r3
            goto L38
        L26:
            r3 = move-exception
            throw r3
        L28:
            r3 = move-exception
            goto L42
        L2a:
            r3 = move-exception
            goto L40
        L2c:
            br.com.original.bank.controller.api.crypto.CryptoResources$Companion r3 = br.com.original.bank.controller.api.crypto.CryptoResources.Companion     // Catch: java.lang.NumberFormatException -> L3d
            br.com.original.bank.controller.api.crypto.CryptoResources r3 = r3.getInstance()     // Catch: java.lang.ArrayStoreException -> L3b
            java.lang.String r3 = r3.getKey()     // Catch: java.lang.ArrayStoreException -> L3b java.lang.RuntimeException -> L3f
            r2.serverPublicKey = r3     // Catch: java.lang.UnsupportedOperationException -> L39 java.lang.ArrayStoreException -> L3b java.lang.RuntimeException -> L3f
        L38:
            return
        L39:
            r3 = move-exception
            goto L40
        L3b:
            r3 = move-exception
            goto L42
        L3d:
            r3 = move-exception
            goto L40
        L3f:
            r3 = move-exception
        L40:
            throw r3
        L41:
            r3 = move-exception
        L42:
            throw r3
    }
}

package br.com.original.bank.controller.api.crypto;

/* loaded from: classes2.dex */
public class AesUtil {
    private static int $r8$backportedMethods$utility$Double$1$hashCode = 0;

    /* renamed from: a */
    private static int f1445a = 1;
    private static br.com.original.bank.controller.api.crypto.AesUtil aesInstance;

    /* renamed from: c */
    private static long f1446c;
    private static javax.crypto.Cipher cipher;
    private java.lang.String encryptedKey;
    private java.lang.String key;

    static {
            m16648c()     // Catch: java.lang.NullPointerException -> L2d
            br.com.original.bank.controller.api.crypto.AesUtil r0 = new br.com.original.bank.controller.api.crypto.AesUtil
            r0.<init>()
            br.com.original.bank.controller.api.crypto.AesUtil.aesInstance = r0     // Catch: java.lang.Exception -> L2b
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.IllegalStateException -> L29
            int r0 = r0 + 111
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1     // Catch: java.lang.NumberFormatException -> L27
            int r0 = r0 % 2
            r1 = 99
            if (r0 != 0) goto L1b
            r0 = 99
            goto L1d
        L1b:
            r0 = 60
        L1d:
            if (r0 == r1) goto L20
            return
        L20:
            r0 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L25
            return
        L25:
            r0 = move-exception
            throw r0
        L27:
            r0 = move-exception
            throw r0
        L29:
            r0 = move-exception
            goto L2e
        L2b:
            r0 = move-exception
            goto L2e
        L2d:
            r0 = move-exception
        L2e:
            throw r0
    }

    public AesUtil() {
            r3 = this;
            r3.<init>()
            r0 = 0
            r3.key = r0
            r3.encryptedKey = r0
            r0 = 21
            char[] r0 = new char[r0]     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 0
            r2 = 29137(0x71d1, float:4.083E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 1
            r2 = 56318(0xdbfe, float:7.8918E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 2
            r2 = 18825(0x4989, float:2.638E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 3
            r2 = 65358(0xff4e, float:9.1586E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 4
            r2 = 27909(0x6d05, float:3.9109E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 5
            r2 = 37688(0x9338, float:5.2812E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 6
            r2 = 202(0xca, float:2.83E-43)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 7
            r2 = 46746(0xb69a, float:6.5505E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 8
            r2 = 9417(0x24c9, float:1.3196E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 9
            r2 = 43623(0xaa67, float:6.1129E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 10
            r2 = 55311(0xd80f, float:7.7507E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 11
            r2 = 18902(0x49d6, float:2.6487E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 12
            r2 = 65521(0xfff1, float:9.1814E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 13
            r2 = 28102(0x6dc6, float:3.9379E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 14
            r2 = 37712(0x9350, float:5.2846E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 15
            r2 = 304(0x130, float:4.26E-43)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 16
            r2 = 46874(0xb71a, float:6.5684E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 17
            r2 = 9451(0x24eb, float:1.3244E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 18
            r2 = 43701(0xaab5, float:6.1238E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 19
            r2 = 55427(0xd883, float:7.767E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            r1 = 20
            r2 = 20061(0x4e5d, float:2.8111E-41)
            r0[r1] = r2     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            java.lang.String r0 = m16647d(r0)     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            java.lang.String r0 = r0.intern()     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            javax.crypto.Cipher r0 = javax.crypto.Cipher.getInstance(r0)     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            br.com.original.bank.controller.api.crypto.AesUtil.cipher = r0     // Catch: javax.crypto.NoSuchPaddingException -> L9c java.security.NoSuchAlgorithmException -> L9e
            return
        L9c:
            r0 = move-exception
            goto L9f
        L9e:
            r0 = move-exception
        L9f:
            java.lang.IllegalStateException r0 = fail(r0)
            throw r0
    }

    public static java.lang.String base64(byte[] r4) {
            java.lang.String r0 = new java.lang.String
            byte[] r4 = org.apache.commons.codec.binary.Base64.encodeBase64(r4)     // Catch: java.lang.RuntimeException -> L27
            r0.<init>(r4)
            int r4 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a     // Catch: java.lang.IllegalArgumentException -> L25
            r1 = 59
            r2 = r4 & (-60)
            r3 = r4 ^ (-1)
            r3 = r3 & r1
            r2 = r2 | r3
            r4 = r4 & r1
            int r4 = r4 << 1
            r1 = r2 | r4
            int r1 = r1 << 1
            r4 = r4 ^ r2
            int r1 = r1 - r4
            int r4 = r1 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r4     // Catch: java.lang.RuntimeException -> L23 java.lang.IllegalArgumentException -> L25
            int r1 = r1 % 2
            return r0
        L23:
            r4 = move-exception
            goto L26
        L25:
            r4 = move-exception
        L26:
            throw r4
        L27:
            r4 = move-exception
            throw r4
    }

    public static byte[] base64(java.lang.String r2) {
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a     // Catch: java.lang.IllegalArgumentException -> L33
            int r0 = r0 + 43
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r1     // Catch: java.lang.RuntimeException -> L31
            int r0 = r0 % 2
            r1 = 42
            if (r0 == 0) goto L11
            r0 = 42
            goto L13
        L11:
            r0 = 74
        L13:
            if (r0 == r1) goto L20
            byte[] r2 = r2.getBytes()     // Catch: java.lang.IllegalArgumentException -> L33
            byte[] r2 = org.apache.commons.codec.binary.Base64.decodeBase64(r2)     // Catch: java.lang.Exception -> L1e
            goto L2c
        L1e:
            r2 = move-exception
            throw r2
        L20:
            byte[] r2 = r2.getBytes()     // Catch: java.lang.RuntimeException -> L31
            byte[] r2 = org.apache.commons.codec.binary.Base64.decodeBase64(r2)     // Catch: java.lang.RuntimeException -> L31
            r0 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L2d
        L2c:
            return r2
        L2d:
            r2 = move-exception
            throw r2
        L2f:
            r2 = move-exception
            goto L34
        L31:
            r2 = move-exception
            goto L34
        L33:
            r2 = move-exception
        L34:
            throw r2
    }

    /* renamed from: c */
    static void m16648c() {
            r0 = 5245365255381559918(0x48cb47e89c31aa6e, double:4.7530019202191724E42)
            br.com.original.bank.controller.api.crypto.AesUtil.f1446c = r0
            return
    }

    /* renamed from: d */
    private static java.lang.String m16647d(char[] r8) {
            r0 = 0
            char r0 = r8[r0]
            int r1 = r8.length
            r2 = 1
            int r1 = r1 - r2
            char[] r1 = new char[r1]
        L8:
            int r3 = r8.length
            r4 = 74
            if (r2 >= r3) goto L10
            r3 = 66
            goto L12
        L10:
            r3 = 74
        L12:
            if (r3 == r4) goto L30
            int r3 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            int r3 = r3 + 9
            int r4 = r3 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r4
            int r3 = r3 % 2
            int r3 = r2 + (-1)
            char r4 = r8[r2]
            int r5 = r2 * r0
            r4 = r4 ^ r5
            long r4 = (long) r4
            long r6 = br.com.original.bank.controller.api.crypto.AesUtil.f1446c
            long r4 = r4 ^ r6
            int r5 = (int) r4
            char r4 = (char) r5
            r1[r3] = r4
            int r2 = r2 + 1
            goto L8
        L30:
            java.lang.String r8 = new java.lang.String
            r8.<init>(r1)
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            int r0 = r0 + 11
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r1
            int r0 = r0 % 2
            return r8
    }

    private static java.lang.IllegalStateException fail(java.lang.Exception r2) {
            java.lang.Class<br.com.original.bank.controller.api.crypto.AesUtil> r0 = br.com.original.bank.controller.api.crypto.AesUtil.class
            monitor-enter(r0)
            java.lang.IllegalStateException r1 = new java.lang.IllegalStateException     // Catch: java.lang.Throwable -> La
            r1.<init>(r2)     // Catch: java.lang.Throwable -> La
            monitor-exit(r0)
            return r1
        La:
            r2 = move-exception
            monitor-exit(r0)
            throw r2
    }

    public static br.com.original.bank.controller.api.crypto.AesUtil getInstance() {
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.IllegalStateException -> L42
            r1 = r0 & 105(0x69, float:1.47E-43)
            r0 = r0 ^ 105(0x69, float:1.47E-43)
            r0 = r0 | r1
            r2 = r1 | r0
            r3 = 1
            int r2 = r2 << r3
            r0 = r0 ^ r1
            int r2 = r2 - r0
            int r0 = r2 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r0     // Catch: java.lang.ArrayStoreException -> L40 java.lang.IllegalStateException -> L42
            int r2 = r2 % 2
            br.com.original.bank.controller.api.crypto.AesUtil r0 = br.com.original.bank.controller.api.crypto.AesUtil.aesInstance     // Catch: java.lang.NullPointerException -> L3e
            int r1 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.RuntimeException -> L3c
            r2 = r1 & 119(0x77, float:1.67E-43)
            r4 = r2 ^ (-1)
            r1 = r1 | 119(0x77, float:1.67E-43)
            r1 = r1 & r4
            int r2 = r2 << r3
            int r2 = -r2
            int r2 = -r2
            r4 = r1 | r2
            int r4 = r4 << r3
            r1 = r1 ^ r2
            int r4 = r4 - r1
            int r1 = r4 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1     // Catch: java.lang.IllegalArgumentException -> L3a
            int r4 = r4 % 2
            if (r4 != 0) goto L2f
            goto L30
        L2f:
            r3 = 0
        L30:
            if (r3 == 0) goto L39
            r1 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L37
            return r0
        L37:
            r0 = move-exception
            throw r0
        L39:
            return r0
        L3a:
            r0 = move-exception
            goto L43
        L3c:
            r0 = move-exception
            throw r0
        L3e:
            r0 = move-exception
            goto L43
        L40:
            r0 = move-exception
            goto L43
        L42:
            r0 = move-exception
        L43:
            throw r0
    }

    public static java.lang.String hex(byte[] r2) {
            java.lang.String r0 = new java.lang.String
            char[] r2 = org.apache.commons.codec.binary.Hex.encodeHex(r2)     // Catch: java.lang.NumberFormatException -> L20
            r0.<init>(r2)     // Catch: java.lang.NumberFormatException -> L20
            int r2 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.NumberFormatException -> L1e
            r1 = r2 & 47
            r2 = r2 ^ 47
            r2 = r2 | r1
            r2 = r2 ^ (-1)
            int r1 = r1 - r2
            int r1 = r1 + (-1)
            int r2 = r1 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r2     // Catch: java.lang.IndexOutOfBoundsException -> L1c
            int r1 = r1 % 2
            return r0
        L1c:
            r2 = move-exception
            goto L1f
        L1e:
            r2 = move-exception
        L1f:
            throw r2
        L20:
            r2 = move-exception
            throw r2
    }

    public static byte[] hex(java.lang.String r3) {
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a     // Catch: java.lang.ClassCastException -> L33
            int r0 = r0 + 74
            r1 = 1
            int r0 = r0 - r1
            int r2 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r2     // Catch: java.lang.ArrayStoreException -> L31 java.lang.ClassCastException -> L33
            int r0 = r0 % 2
            if (r0 == 0) goto L10
            r0 = 0
            goto L11
        L10:
            r0 = 1
        L11:
            if (r0 == r1) goto L22
            char[] r3 = r3.toCharArray()     // Catch: org.apache.commons.codec.DecoderException -> L20
            byte[] r3 = org.apache.commons.codec.binary.Hex.decodeHex(r3)     // Catch: org.apache.commons.codec.DecoderException -> L20
            r0 = 0
            int r0 = r0.length     // Catch: java.lang.Throwable -> L1e
            goto L2a
        L1e:
            r3 = move-exception
            throw r3
        L20:
            r3 = move-exception
            goto L2b
        L22:
            char[] r3 = r3.toCharArray()     // Catch: org.apache.commons.codec.DecoderException -> L20
            byte[] r3 = org.apache.commons.codec.binary.Hex.decodeHex(r3)     // Catch: org.apache.commons.codec.DecoderException -> L20
        L2a:
            return r3
        L2b:
            java.lang.IllegalStateException r0 = new java.lang.IllegalStateException
            r0.<init>(r3)
            throw r0
        L31:
            r3 = move-exception
            throw r3
        L33:
            r3 = move-exception
            throw r3
    }

    public java.lang.String decryptV2(java.lang.String r4) {
            r3 = this;
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a     // Catch: java.lang.IllegalStateException -> L36
            r1 = r0 ^ 115(0x73, float:1.61E-43)
            r0 = r0 & 115(0x73, float:1.61E-43)
            int r0 = r0 << 1
            int r0 = -r0
            int r0 = -r0
            r2 = r1 | r0
            int r2 = r2 << 1
            r0 = r0 ^ r1
            int r2 = r2 - r0
            int r0 = r2 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r0     // Catch: java.lang.NullPointerException -> L34
            int r2 = r2 % 2
            java.lang.String r0 = r3.getKey()     // Catch: java.lang.ArrayStoreException -> L32
            java.lang.String r4 = r3.decryptV2(r4, r0)     // Catch: java.lang.NumberFormatException -> L30 java.lang.ArrayStoreException -> L32
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.Exception -> L2e
            r1 = r0 & 79
            r0 = r0 | 79
            int r1 = r1 + r0
            int r0 = r1 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r0     // Catch: java.lang.Exception -> L2e
            int r1 = r1 % 2
            return r4
        L2c:
            r4 = move-exception
            throw r4
        L2e:
            r4 = move-exception
            goto L37
        L30:
            r4 = move-exception
            goto L37
        L32:
            r4 = move-exception
            goto L37
        L34:
            r4 = move-exception
            goto L37
        L36:
            r4 = move-exception
        L37:
            throw r4
    }

    public java.lang.String decryptV2(java.lang.String r20, java.lang.String r21) {
            r19 = this;
            r0 = r20
            int r1 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r2 = r1 & 7
            r3 = 7
            r1 = r1 ^ r3
            r1 = r1 | r2
            int r2 = r2 + r1
            int r1 = r2 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1
            r1 = 2
            int r2 = r2 % r1
            r4 = 58
            if (r2 != 0) goto L17
            r2 = 58
            goto L19
        L17:
            r2 = 39
        L19:
            r6 = 16
            r7 = 0
            r8 = 1
            if (r2 == r4) goto L2d
            java.lang.String r2 = r0.substring(r7, r6)     // Catch: java.lang.Exception -> L2a
            int r4 = r20.length()     // Catch: java.lang.Exception -> L2a
            r9 = 16
            goto L39
        L2a:
            r0 = move-exception
            goto L187
        L2d:
            r2 = 48
            java.lang.String r2 = r0.substring(r8, r2)     // Catch: java.lang.Exception -> L2a
            int r4 = r20.length()     // Catch: java.lang.Exception -> L2a
            r9 = 63
        L39:
            java.lang.String r0 = r0.substring(r9, r4)     // Catch: java.lang.Exception -> L2a
            javax.crypto.spec.IvParameterSpec r4 = new javax.crypto.spec.IvParameterSpec     // Catch: java.lang.Exception -> L2a
            r9 = 6
            char[] r10 = new char[r9]     // Catch: java.lang.Exception -> L2a
            r11 = 56299(0xdbeb, float:7.8892E-41)
            r10[r7] = r11     // Catch: java.lang.Exception -> L2a
            r12 = 29136(0x71d0, float:4.0828E-41)
            r10[r8] = r12     // Catch: java.lang.Exception -> L2a
            r13 = 7660(0x1dec, float:1.0734E-41)
            r10[r1] = r13     // Catch: java.lang.Exception -> L2a
            r14 = 14825(0x39e9, float:2.0774E-41)
            r15 = 3
            r10[r15] = r14     // Catch: java.lang.Exception -> L2a
            r16 = 50671(0xc5ef, float:7.1005E-41)
            r5 = 4
            r10[r5] = r16     // Catch: java.lang.Exception -> L2a
            r17 = 57793(0xe1c1, float:8.0985E-41)
            r18 = 5
            r10[r18] = r17     // Catch: java.lang.Exception -> L2a
            java.lang.String r10 = m16647d(r10)     // Catch: java.lang.Exception -> L2a
            java.lang.String r10 = r10.intern()     // Catch: java.lang.Exception -> L2a
            byte[] r2 = r2.getBytes(r10)     // Catch: java.lang.Exception -> L2a
            r4.<init>(r2)     // Catch: java.lang.Exception -> L2a
            javax.crypto.spec.SecretKeySpec r2 = new javax.crypto.spec.SecretKeySpec     // Catch: java.lang.Exception -> L2a
            char[] r10 = new char[r9]     // Catch: java.lang.Exception -> L2a
            r10[r7] = r11     // Catch: java.lang.Exception -> L2a
            r10[r8] = r12     // Catch: java.lang.Exception -> L2a
            r10[r1] = r13     // Catch: java.lang.Exception -> L2a
            r10[r15] = r14     // Catch: java.lang.Exception -> L2a
            r10[r5] = r16     // Catch: java.lang.Exception -> L2a
            r10[r18] = r17     // Catch: java.lang.Exception -> L2a
            java.lang.String r10 = m16647d(r10)     // Catch: java.lang.Exception -> L2a
            java.lang.String r10 = r10.intern()     // Catch: java.lang.Exception -> L2a
            r11 = r21
            byte[] r10 = r11.getBytes(r10)     // Catch: java.lang.Exception -> L2a
            char[] r11 = new char[r5]     // Catch: java.lang.Exception -> L2a
            r12 = 51767(0xca37, float:7.2541E-41)
            r11[r7] = r12     // Catch: java.lang.Exception -> L2a
            r12 = 24600(0x6018, float:3.4472E-41)
            r11[r8] = r12     // Catch: java.lang.Exception -> L2a
            r12 = 15941(0x3e45, float:2.2338E-41)
            r11[r1] = r12     // Catch: java.lang.Exception -> L2a
            r12 = 62616(0xf498, float:8.7744E-41)
            r11[r15] = r12     // Catch: java.lang.Exception -> L2a
            java.lang.String r11 = m16647d(r11)     // Catch: java.lang.Exception -> L2a
            java.lang.String r11 = r11.intern()     // Catch: java.lang.Exception -> L2a
            r2.<init>(r10, r11)     // Catch: java.lang.Exception -> L2a
            int r10 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r11 = 35
            r12 = r10 & (-36)
            r13 = r10 ^ (-1)
            r13 = r13 & r11
            r12 = r12 | r13
            r10 = r10 & r11
            int r10 = r10 << r8
            int r10 = -r10
            int r10 = -r10
            r10 = r10 ^ (-1)
            int r12 = r12 - r10
            int r12 = r12 - r8
            int r10 = r12 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r10
            int r12 = r12 % r1
            r10 = 21
            char[] r10 = new char[r10]     // Catch: java.lang.Exception -> L2a
            r11 = 29137(0x71d1, float:4.083E-41)
            r10[r7] = r11     // Catch: java.lang.Exception -> L2a
            r7 = 56318(0xdbfe, float:7.8918E-41)
            r10[r8] = r7     // Catch: java.lang.Exception -> L2a
            r7 = 18825(0x4989, float:2.638E-41)
            r10[r1] = r7     // Catch: java.lang.Exception -> L2a
            r7 = 65358(0xff4e, float:9.1586E-41)
            r10[r15] = r7     // Catch: java.lang.Exception -> L2a
            r7 = 27909(0x6d05, float:3.9109E-41)
            r10[r5] = r7     // Catch: java.lang.Exception -> L2a
            r5 = 37688(0x9338, float:5.2812E-41)
            r10[r18] = r5     // Catch: java.lang.Exception -> L2a
            r5 = 202(0xca, float:2.83E-43)
            r10[r9] = r5     // Catch: java.lang.Exception -> L2a
            r5 = 46746(0xb69a, float:6.5505E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 8
            r5 = 9417(0x24c9, float:1.3196E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 9
            r5 = 43623(0xaa67, float:6.1129E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 10
            r5 = 55311(0xd80f, float:7.7507E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 11
            r5 = 18902(0x49d6, float:2.6487E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 12
            r5 = 65521(0xfff1, float:9.1814E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 13
            r5 = 28102(0x6dc6, float:3.9379E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 14
            r5 = 37712(0x9350, float:5.2846E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 15
            r5 = 304(0x130, float:4.26E-43)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 46874(0xb71a, float:6.5684E-41)
            r10[r6] = r3     // Catch: java.lang.Exception -> L2a
            r3 = 17
            r5 = 9451(0x24eb, float:1.3244E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 18
            r5 = 43701(0xaab5, float:6.1238E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 19
            r5 = 55427(0xd883, float:7.767E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            r3 = 20
            r5 = 20061(0x4e5d, float:2.8111E-41)
            r10[r3] = r5     // Catch: java.lang.Exception -> L2a
            java.lang.String r3 = m16647d(r10)     // Catch: java.lang.Exception -> L2a
            java.lang.String r3 = r3.intern()     // Catch: java.lang.Exception -> L2a
            javax.crypto.Cipher r3 = javax.crypto.Cipher.getInstance(r3)     // Catch: java.lang.Exception -> L2a
            r3.init(r1, r2, r4)     // Catch: java.lang.Exception -> L2a
            byte[] r0 = base64(r0)     // Catch: java.lang.Exception -> L2a
            byte[] r0 = r3.doFinal(r0)     // Catch: java.lang.Exception -> L2a
            java.lang.String r2 = new java.lang.String     // Catch: java.lang.Exception -> L2a
            r2.<init>(r0)     // Catch: java.lang.Exception -> L2a
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r3 = r0 & (-46)
            r4 = r0 ^ (-1)
            r4 = r4 & 45
            r3 = r3 | r4
            r0 = r0 & 45
            int r0 = r0 << r8
            r4 = r3 | r0
            int r4 = r4 << r8
            r0 = r0 ^ r3
            int r4 = r4 - r0
            int r0 = r4 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r0
            int r4 = r4 % r1
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r3 = r0 & 63
            r4 = r3 ^ (-1)
            r5 = 63
            r0 = r0 | r5
            r0 = r0 & r4
            int r3 = r3 << r8
            r4 = r0 ^ r3
            r0 = r0 & r3
            int r0 = r0 << r8
            int r4 = r4 + r0
            int r0 = r4 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r0
            int r4 = r4 % r1
            return r2
        L187:
            fail(r0)
            r0 = 0
            return r0
    }

    public java.lang.String encryptV2(java.lang.String r25) {
            r24 = this;
            r0 = r25
            r2 = 16
            r3 = r24
            java.lang.String r4 = r3.randomText(r2)     // Catch: java.lang.Exception -> L24b
            byte[] r5 = r4.getBytes()     // Catch: java.lang.Exception -> L24b
            javax.crypto.spec.IvParameterSpec r6 = new javax.crypto.spec.IvParameterSpec     // Catch: java.lang.Exception -> L24b
            r6.<init>(r5)     // Catch: java.lang.Exception -> L24b
            javax.crypto.spec.SecretKeySpec r5 = new javax.crypto.spec.SecretKeySpec     // Catch: java.lang.Exception -> L24b
            java.lang.String r7 = r24.getKey()     // Catch: java.lang.Exception -> L24b
            r8 = 6
            char[] r9 = new char[r8]     // Catch: java.lang.Exception -> L24b
            r10 = 56299(0xdbeb, float:7.8892E-41)
            r11 = 0
            r9[r11] = r10     // Catch: java.lang.Exception -> L24b
            r12 = 29136(0x71d0, float:4.0828E-41)
            r13 = 1
            r9[r13] = r12     // Catch: java.lang.Exception -> L24b
            r14 = 7660(0x1dec, float:1.0734E-41)
            r15 = 2
            r9[r15] = r14     // Catch: java.lang.Exception -> L24b
            r16 = 14825(0x39e9, float:2.0774E-41)
            r17 = 3
            r9[r17] = r16     // Catch: java.lang.Exception -> L24b
            r18 = 50671(0xc5ef, float:7.1005E-41)
            r1 = 4
            r9[r1] = r18     // Catch: java.lang.Exception -> L24b
            r19 = 57793(0xe1c1, float:8.0985E-41)
            r20 = 5
            r9[r20] = r19     // Catch: java.lang.Exception -> L24b
            java.lang.String r9 = m16647d(r9)     // Catch: java.lang.Exception -> L24b
            java.lang.String r9 = r9.intern()     // Catch: java.lang.Exception -> L24b
            byte[] r7 = r7.getBytes(r9)     // Catch: java.lang.Exception -> L24b
            char[] r9 = new char[r1]     // Catch: java.lang.Exception -> L24b
            r21 = 51767(0xca37, float:7.2541E-41)
            r9[r11] = r21     // Catch: java.lang.Exception -> L24b
            r21 = 24600(0x6018, float:3.4472E-41)
            r9[r13] = r21     // Catch: java.lang.Exception -> L24b
            r21 = 15941(0x3e45, float:2.2338E-41)
            r9[r15] = r21     // Catch: java.lang.Exception -> L24b
            r21 = 62616(0xf498, float:8.7744E-41)
            r9[r17] = r21     // Catch: java.lang.Exception -> L24b
            java.lang.String r9 = m16647d(r9)     // Catch: java.lang.Exception -> L24b
            java.lang.String r9 = r9.intern()     // Catch: java.lang.Exception -> L24b
            r5.<init>(r7, r9)     // Catch: java.lang.Exception -> L24b
            int r7 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r9 = r7 & 2
            r7 = r7 | r15
            int r9 = r9 + r7
            r7 = r9 ^ (-1)
            r9 = r9 & (-1)
            int r9 = r9 << r13
            int r7 = r7 + r9
            int r9 = r7 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r9
            int r7 = r7 % r15
            r9 = 73
            if (r7 == 0) goto L82
            r7 = 99
            goto L84
        L82:
            r7 = 73
        L84:
            r21 = 56318(0xdbfe, float:7.8918E-41)
            r22 = 29137(0x71d1, float:4.083E-41)
            r14 = 21
            r23 = 17
            if (r7 == r9) goto L110
            char[] r7 = new char[r14]     // Catch: java.lang.Exception -> L24b
            r7[r11] = r22     // Catch: java.lang.Exception -> L24b
            r7[r13] = r21     // Catch: java.lang.Exception -> L24b
            r9 = 18825(0x4989, float:2.638E-41)
            r7[r15] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 65358(0xff4e, float:9.1586E-41)
            r7[r17] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 27909(0x6d05, float:3.9109E-41)
            r7[r1] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 37688(0x9338, float:5.2812E-41)
            r7[r20] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 202(0xca, float:2.83E-43)
            r7[r8] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 7
            r14 = 46746(0xb69a, float:6.5505E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 8
            r14 = 9417(0x24c9, float:1.3196E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 9
            r14 = 43623(0xaa67, float:6.1129E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 10
            r14 = 55311(0xd80f, float:7.7507E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 11
            r14 = 18902(0x49d6, float:2.6487E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 12
            r14 = 65521(0xfff1, float:9.1814E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 13
            r14 = 28102(0x6dc6, float:3.9379E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 14
            r14 = 37712(0x9350, float:5.2846E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 15
            r14 = 304(0x130, float:4.26E-43)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 46874(0xb71a, float:6.5684E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            r2 = 9451(0x24eb, float:1.3244E-41)
            r7[r23] = r2     // Catch: java.lang.Exception -> L24b
            r2 = 18
            r9 = 43701(0xaab5, float:6.1238E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            r2 = 19
            r9 = 55427(0xd883, float:7.767E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            r2 = 20
            r9 = 20061(0x4e5d, float:2.8111E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            java.lang.String r2 = m16647d(r7)     // Catch: java.lang.Exception -> L24b
            java.lang.String r2 = r2.intern()     // Catch: java.lang.Exception -> L24b
        L10a:
            javax.crypto.Cipher r2 = javax.crypto.Cipher.getInstance(r2)     // Catch: java.lang.Exception -> L24b
            goto L18d
        L110:
            char[] r7 = new char[r14]     // Catch: java.lang.Exception -> L24b
            r7[r11] = r22     // Catch: java.lang.Exception -> L24b
            r7[r13] = r21     // Catch: java.lang.Exception -> L24b
            r9 = 18825(0x4989, float:2.638E-41)
            r7[r15] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 65358(0xff4e, float:9.1586E-41)
            r7[r17] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 27909(0x6d05, float:3.9109E-41)
            r7[r1] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 37688(0x9338, float:5.2812E-41)
            r7[r20] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 202(0xca, float:2.83E-43)
            r7[r8] = r9     // Catch: java.lang.Exception -> L24b
            r9 = 7
            r14 = 46746(0xb69a, float:6.5505E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 8
            r14 = 9417(0x24c9, float:1.3196E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 9
            r14 = 43623(0xaa67, float:6.1129E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 10
            r14 = 55311(0xd80f, float:7.7507E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 11
            r14 = 18902(0x49d6, float:2.6487E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 12
            r14 = 65521(0xfff1, float:9.1814E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 13
            r14 = 28102(0x6dc6, float:3.9379E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 14
            r14 = 37712(0x9350, float:5.2846E-41)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 15
            r14 = 304(0x130, float:4.26E-43)
            r7[r9] = r14     // Catch: java.lang.Exception -> L24b
            r9 = 46874(0xb71a, float:6.5684E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            r2 = 9451(0x24eb, float:1.3244E-41)
            r7[r23] = r2     // Catch: java.lang.Exception -> L24b
            r2 = 18
            r9 = 43701(0xaab5, float:6.1238E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            r2 = 19
            r9 = 55427(0xd883, float:7.767E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            r2 = 20
            r9 = 20061(0x4e5d, float:2.8111E-41)
            r7[r2] = r9     // Catch: java.lang.Exception -> L24b
            java.lang.String r2 = m16647d(r7)     // Catch: java.lang.Exception -> L24b
            java.lang.String r2 = r2.intern()     // Catch: java.lang.Exception -> L24b
            goto L10a
        L18d:
            int r7 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r9 = r7 & (-72)
            r14 = r7 ^ (-1)
            r14 = r14 & 71
            r9 = r9 | r14
            r7 = r7 & 71
            int r7 = r7 << r13
            r14 = r9 & r7
            r7 = r7 | r9
            int r14 = r14 + r7
            int r7 = r14 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r7
            int r14 = r14 % r15
            if (r14 != 0) goto L1a7
            r7 = 45
            goto L1a9
        L1a7:
            r7 = 23
        L1a9:
            r9 = 23
            if (r7 == r9) goto L1d2
            r2.init(r13, r5, r6)     // Catch: java.lang.Exception -> L24b
            char[] r5 = new char[r8]     // Catch: java.lang.Exception -> L24b
            r5[r11] = r10     // Catch: java.lang.Exception -> L24b
            r5[r13] = r12     // Catch: java.lang.Exception -> L24b
            r6 = 7660(0x1dec, float:1.0734E-41)
            r5[r15] = r6     // Catch: java.lang.Exception -> L24b
            r5[r17] = r16     // Catch: java.lang.Exception -> L24b
            r5[r1] = r18     // Catch: java.lang.Exception -> L24b
            r5[r20] = r19     // Catch: java.lang.Exception -> L24b
            java.lang.String r1 = m16647d(r5)     // Catch: java.lang.Exception -> L24b
            java.lang.String r1 = r1.intern()     // Catch: java.lang.Exception -> L24b
            byte[] r0 = r0.getBytes(r1)     // Catch: java.lang.Exception -> L24b
            r1 = 0
            int r5 = r1.length     // Catch: java.lang.Throwable -> L1cf java.lang.Exception -> L24b
            goto L1f1
        L1cf:
            r0 = move-exception
            r1 = r0
            throw r1
        L1d2:
            r2.init(r13, r5, r6)     // Catch: java.lang.Exception -> L24b
            char[] r5 = new char[r8]     // Catch: java.lang.Exception -> L24b
            r5[r11] = r10     // Catch: java.lang.Exception -> L24b
            r5[r13] = r12     // Catch: java.lang.Exception -> L24b
            r6 = 7660(0x1dec, float:1.0734E-41)
            r5[r15] = r6     // Catch: java.lang.Exception -> L24b
            r5[r17] = r16     // Catch: java.lang.Exception -> L24b
            r5[r1] = r18     // Catch: java.lang.Exception -> L24b
            r5[r20] = r19     // Catch: java.lang.Exception -> L24b
            java.lang.String r1 = m16647d(r5)     // Catch: java.lang.Exception -> L24b
            java.lang.String r1 = r1.intern()     // Catch: java.lang.Exception -> L24b
            byte[] r0 = r0.getBytes(r1)     // Catch: java.lang.Exception -> L24b
        L1f1:
            byte[] r0 = r2.doFinal(r0)     // Catch: java.lang.Exception -> L24b
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L24b
            r1.<init>()     // Catch: java.lang.Exception -> L24b
            java.lang.String r2 = new java.lang.String     // Catch: java.lang.Exception -> L24b
            r2.<init>(r4)     // Catch: java.lang.Exception -> L24b
            int r4 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r5 = 57
            r6 = r4 ^ 57
            r7 = r4 & 57
            r6 = r6 | r7
            int r6 = r6 << r13
            r7 = r4 & (-58)
            r4 = r4 ^ (-1)
            r4 = r4 & r5
            r4 = r4 | r7
            int r6 = r6 - r4
            int r4 = r6 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r4
            int r6 = r6 % r15
            if (r6 != 0) goto L21a
            r4 = 17
            goto L21b
        L21a:
            r4 = 6
        L21b:
            if (r4 == r8) goto L22f
            r1.append(r2)     // Catch: java.lang.Exception -> L24b
            java.lang.String r0 = base64(r0)     // Catch: java.lang.Exception -> L24b
            r1.append(r0)     // Catch: java.lang.Exception -> L24b
            r2 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L22c java.lang.Exception -> L24b
            goto L239
        L22c:
            r0 = move-exception
            r1 = r0
            throw r1
        L22f:
            r1.append(r2)     // Catch: java.lang.Exception -> L24b
            java.lang.String r0 = base64(r0)     // Catch: java.lang.Exception -> L24b
            r1.append(r0)     // Catch: java.lang.Exception -> L24b
        L239:
            java.lang.String r0 = r1.toString()     // Catch: java.lang.Exception -> L24b
            int r1 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r2 = r1 | 103(0x67, float:1.44E-43)
            int r2 = r2 << r13
            r1 = r1 ^ 103(0x67, float:1.44E-43)
            int r2 = r2 - r1
            int r1 = r2 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1
            int r2 = r2 % r15
            return r0
        L24b:
            r0 = move-exception
            fail(r0)
            r1 = 0
            return r1
    }

    public java.lang.String encryptV2(java.lang.String r24, java.lang.String r25) {
            r23 = this;
            r0 = 16
            r2 = r23
            java.lang.String r3 = r2.randomText(r0)     // Catch: java.lang.Exception -> L1f9
            byte[] r4 = r3.getBytes()     // Catch: java.lang.Exception -> L1f9
            javax.crypto.spec.IvParameterSpec r5 = new javax.crypto.spec.IvParameterSpec     // Catch: java.lang.Exception -> L1f9
            r5.<init>(r4)     // Catch: java.lang.Exception -> L1f9
            javax.crypto.spec.SecretKeySpec r4 = new javax.crypto.spec.SecretKeySpec     // Catch: java.lang.Exception -> L1f9
            r6 = 6
            char[] r7 = new char[r6]     // Catch: java.lang.Exception -> L1f9
            r8 = 56299(0xdbeb, float:7.8892E-41)
            r9 = 0
            r7[r9] = r8     // Catch: java.lang.Exception -> L1f9
            r10 = 29136(0x71d0, float:4.0828E-41)
            r11 = 1
            r7[r11] = r10     // Catch: java.lang.Exception -> L1f9
            r12 = 7660(0x1dec, float:1.0734E-41)
            r13 = 2
            r7[r13] = r12     // Catch: java.lang.Exception -> L1f9
            r14 = 14825(0x39e9, float:2.0774E-41)
            r15 = 3
            r7[r15] = r14     // Catch: java.lang.Exception -> L1f9
            r16 = 50671(0xc5ef, float:7.1005E-41)
            r1 = 4
            r7[r1] = r16     // Catch: java.lang.Exception -> L1f9
            r17 = 57793(0xe1c1, float:8.0985E-41)
            r18 = 5
            r7[r18] = r17     // Catch: java.lang.Exception -> L1f9
            java.lang.String r7 = m16647d(r7)     // Catch: java.lang.Exception -> L1f9
            java.lang.String r7 = r7.intern()     // Catch: java.lang.Exception -> L1f9
            r14 = r25
            byte[] r7 = r14.getBytes(r7)     // Catch: java.lang.Exception -> L1f9
            char[] r14 = new char[r1]     // Catch: java.lang.Exception -> L1f9
            r19 = 51767(0xca37, float:7.2541E-41)
            r14[r9] = r19     // Catch: java.lang.Exception -> L1f9
            r19 = 24600(0x6018, float:3.4472E-41)
            r14[r11] = r19     // Catch: java.lang.Exception -> L1f9
            r19 = 15941(0x3e45, float:2.2338E-41)
            r14[r13] = r19     // Catch: java.lang.Exception -> L1f9
            r19 = 62616(0xf498, float:8.7744E-41)
            r14[r15] = r19     // Catch: java.lang.Exception -> L1f9
            java.lang.String r14 = m16647d(r14)     // Catch: java.lang.Exception -> L1f9
            java.lang.String r14 = r14.intern()     // Catch: java.lang.Exception -> L1f9
            r4.<init>(r7, r14)     // Catch: java.lang.Exception -> L1f9
            int r7 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r14 = r7 & 19
            r19 = 19
            r7 = r7 ^ 19
            r7 = r7 | r14
            int r7 = -r7
            int r7 = -r7
            r20 = r14 & r7
            r7 = r7 | r14
            int r7 = r20 + r7
            int r14 = r7 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r14
            int r7 = r7 % r13
            if (r7 == 0) goto L7e
            r7 = 1
            goto L7f
        L7e:
            r7 = 0
        L7f:
            r14 = 18825(0x4989, float:2.638E-41)
            r20 = 56318(0xdbfe, float:7.8918E-41)
            r21 = 29137(0x71d1, float:4.083E-41)
            r12 = 21
            r22 = 12
            if (r7 == r11) goto L108
            char[] r7 = new char[r12]     // Catch: java.lang.Exception -> L1f9
            r7[r9] = r21     // Catch: java.lang.Exception -> L1f9
            r7[r11] = r20     // Catch: java.lang.Exception -> L1f9
            r7[r13] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 65358(0xff4e, float:9.1586E-41)
            r7[r15] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 27909(0x6d05, float:3.9109E-41)
            r7[r1] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 37688(0x9338, float:5.2812E-41)
            r7[r18] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 202(0xca, float:2.83E-43)
            r7[r6] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 7
            r14 = 46746(0xb69a, float:6.5505E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 8
            r14 = 9417(0x24c9, float:1.3196E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 9
            r14 = 43623(0xaa67, float:6.1129E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 10
            r14 = 55311(0xd80f, float:7.7507E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 11
            r14 = 18902(0x49d6, float:2.6487E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 65521(0xfff1, float:9.1814E-41)
            r7[r22] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 13
            r14 = 28102(0x6dc6, float:3.9379E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 14
            r14 = 37712(0x9350, float:5.2846E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 15
            r14 = 304(0x130, float:4.26E-43)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 46874(0xb71a, float:6.5684E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            r0 = 17
            r12 = 9451(0x24eb, float:1.3244E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            r0 = 18
            r12 = 43701(0xaab5, float:6.1238E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            r0 = 55427(0xd883, float:7.767E-41)
            r7[r19] = r0     // Catch: java.lang.Exception -> L1f9
            r0 = 20
            r12 = 20061(0x4e5d, float:2.8111E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            java.lang.String r0 = m16647d(r7)     // Catch: java.lang.Exception -> L1f9
            java.lang.String r0 = r0.intern()     // Catch: java.lang.Exception -> L1f9
        L103:
            javax.crypto.Cipher r0 = javax.crypto.Cipher.getInstance(r0)     // Catch: java.lang.Exception -> L1f9
            goto L180
        L108:
            char[] r7 = new char[r12]     // Catch: java.lang.Exception -> L1f9
            r7[r9] = r21     // Catch: java.lang.Exception -> L1f9
            r7[r11] = r20     // Catch: java.lang.Exception -> L1f9
            r7[r13] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 65358(0xff4e, float:9.1586E-41)
            r7[r15] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 27909(0x6d05, float:3.9109E-41)
            r7[r1] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 37688(0x9338, float:5.2812E-41)
            r7[r18] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 202(0xca, float:2.83E-43)
            r7[r6] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 7
            r14 = 46746(0xb69a, float:6.5505E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 8
            r14 = 9417(0x24c9, float:1.3196E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 9
            r14 = 43623(0xaa67, float:6.1129E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 10
            r14 = 55311(0xd80f, float:7.7507E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 11
            r14 = 18902(0x49d6, float:2.6487E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 65521(0xfff1, float:9.1814E-41)
            r7[r22] = r12     // Catch: java.lang.Exception -> L1f9
            r12 = 13
            r14 = 28102(0x6dc6, float:3.9379E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 14
            r14 = 37712(0x9350, float:5.2846E-41)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 15
            r14 = 304(0x130, float:4.26E-43)
            r7[r12] = r14     // Catch: java.lang.Exception -> L1f9
            r12 = 46874(0xb71a, float:6.5684E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            r0 = 17
            r12 = 9451(0x24eb, float:1.3244E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            r0 = 18
            r12 = 43701(0xaab5, float:6.1238E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            r0 = 55427(0xd883, float:7.767E-41)
            r7[r19] = r0     // Catch: java.lang.Exception -> L1f9
            r0 = 20
            r12 = 20061(0x4e5d, float:2.8111E-41)
            r7[r0] = r12     // Catch: java.lang.Exception -> L1f9
            java.lang.String r0 = m16647d(r7)     // Catch: java.lang.Exception -> L1f9
            java.lang.String r0 = r0.intern()     // Catch: java.lang.Exception -> L1f9
            goto L103
        L180:
            r0.init(r11, r4, r5)     // Catch: java.lang.Exception -> L1f9
            char[] r4 = new char[r6]     // Catch: java.lang.Exception -> L1f9
            r4[r9] = r8     // Catch: java.lang.Exception -> L1f9
            r4[r11] = r10     // Catch: java.lang.Exception -> L1f9
            r5 = 7660(0x1dec, float:1.0734E-41)
            r4[r13] = r5     // Catch: java.lang.Exception -> L1f9
            r5 = 14825(0x39e9, float:2.0774E-41)
            r4[r15] = r5     // Catch: java.lang.Exception -> L1f9
            r4[r1] = r16     // Catch: java.lang.Exception -> L1f9
            r4[r18] = r17     // Catch: java.lang.Exception -> L1f9
            java.lang.String r1 = m16647d(r4)     // Catch: java.lang.Exception -> L1f9
            java.lang.String r1 = r1.intern()     // Catch: java.lang.Exception -> L1f9
            r4 = r24
            byte[] r1 = r4.getBytes(r1)     // Catch: java.lang.Exception -> L1f9
            byte[] r0 = r0.doFinal(r1)     // Catch: java.lang.Exception -> L1f9
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L1f9
            r1.<init>()     // Catch: java.lang.Exception -> L1f9
            java.lang.String r4 = new java.lang.String     // Catch: java.lang.Exception -> L1f9
            r4.<init>(r3)     // Catch: java.lang.Exception -> L1f9
            int r3 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r5 = r3 ^ 61
            r6 = r3 & 61
            r5 = r5 | r6
            int r5 = r5 << r11
            r6 = r6 ^ (-1)
            r3 = r3 | 61
            r3 = r3 & r6
            int r5 = r5 - r3
            int r3 = r5 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r3
            int r5 = r5 % r13
            r1.append(r4)     // Catch: java.lang.Exception -> L1f9
            java.lang.String r0 = base64(r0)     // Catch: java.lang.Exception -> L1f9
            r1.append(r0)     // Catch: java.lang.Exception -> L1f9
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            int r0 = r0 + 3
            int r0 = r0 - r11
            r3 = r0 & (-1)
            r0 = r0 | (-1)
            int r3 = r3 + r0
            int r0 = r3 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r0
            int r3 = r3 % r13
            if (r3 != 0) goto L1e2
            r0 = 12
            goto L1e6
        L1e2:
            r22 = 76
            r0 = 76
        L1e6:
            r3 = 76
            if (r0 == r3) goto L1f4
            java.lang.String r0 = r1.toString()     // Catch: java.lang.Exception -> L1f9
            r1 = 0
            int r1 = r1.length     // Catch: java.lang.Throwable -> L1f1
            goto L1f8
        L1f1:
            r0 = move-exception
            r1 = r0
            throw r1
        L1f4:
            java.lang.String r0 = r1.toString()     // Catch: java.lang.Exception -> L1f9
        L1f8:
            return r0
        L1f9:
            r0 = move-exception
            fail(r0)
            r1 = 0
            return r1
    }

    public java.lang.String getEncryptedKey() {
            r6 = this;
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            int r0 = r0 + 2
            r1 = 0
            int r0 = r0 - r1
            r2 = 1
            int r0 = r0 - r2
            int r3 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r3
            r3 = 2
            int r0 = r0 % r3
            java.lang.String r0 = r6.encryptedKey     // Catch: java.lang.UnsupportedOperationException -> L91
            if (r0 != 0) goto L13
            r1 = 1
        L13:
            if (r1 == 0) goto L79
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            int r0 = r0 + 104
            int r0 = r0 - r2
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1
            int r0 = r0 % r3
            if (r0 != 0) goto L24
            r0 = 67
            goto L25
        L24:
            r0 = 2
        L25:
            if (r0 == r3) goto L44
            br.com.original.bank.controller.api.crypto.RSAUtils r0 = br.com.original.bank.controller.api.crypto.RSAUtils.getInstance()     // Catch: java.lang.ClassCastException -> L42
            java.lang.String r0 = r0.getServerPublicKey()     // Catch: java.lang.Exception -> L40 java.lang.ClassCastException -> L42
            br.com.original.bank.controller.api.crypto.RSAUtils r1 = br.com.original.bank.controller.api.crypto.RSAUtils.getInstance()     // Catch: java.lang.ArrayStoreException -> L3e java.lang.ClassCastException -> L42
            java.lang.String r4 = r6.getKey()     // Catch: java.lang.IndexOutOfBoundsException -> L3c java.lang.ArrayStoreException -> L3e java.lang.ClassCastException -> L42
            r5 = 0
            int r5 = r5.length     // Catch: java.lang.Throwable -> L3a
            goto L54
        L3a:
            r0 = move-exception
            throw r0
        L3c:
            r0 = move-exception
            goto L92
        L3e:
            r0 = move-exception
            goto L78
        L40:
            r0 = move-exception
            goto L78
        L42:
            r0 = move-exception
            goto L92
        L44:
            br.com.original.bank.controller.api.crypto.RSAUtils r0 = br.com.original.bank.controller.api.crypto.RSAUtils.getInstance()
            java.lang.String r0 = r0.getServerPublicKey()
            br.com.original.bank.controller.api.crypto.RSAUtils r1 = br.com.original.bank.controller.api.crypto.RSAUtils.getInstance()
            java.lang.String r4 = r6.getKey()
        L54:
            java.lang.String r0 = r1.encrypt(r0, r4)     // Catch: java.lang.IndexOutOfBoundsException -> L77
            r6.encryptedKey = r0     // Catch: java.lang.NumberFormatException -> L75 java.lang.IndexOutOfBoundsException -> L77
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.UnsupportedOperationException -> L91
            r1 = r0 ^ 45
            r4 = r0 & 45
            r1 = r1 | r4
            int r1 = r1 << r2
            r4 = r4 ^ (-1)
            r0 = r0 | 45
            r0 = r0 & r4
            int r0 = -r0
            r4 = r1 | r0
            int r4 = r4 << r2
            r0 = r0 ^ r1
            int r4 = r4 - r0
            int r0 = r4 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r0     // Catch: java.lang.IllegalStateException -> L73 java.lang.UnsupportedOperationException -> L91
            int r4 = r4 % r3
            goto L79
        L73:
            r0 = move-exception
            goto L78
        L75:
            r0 = move-exception
            goto L92
        L77:
            r0 = move-exception
        L78:
            throw r0
        L79:
            java.lang.String r0 = r6.encryptedKey     // Catch: java.lang.ArrayStoreException -> L8f
            int r1 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r4 = r1 | 88
            int r2 = r4 << 1
            r1 = r1 ^ 88
            int r2 = r2 - r1
            r1 = r2 & (-1)
            r2 = r2 | (-1)
            int r1 = r1 + r2
            int r2 = r1 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r2
            int r1 = r1 % r3
            return r0
        L8f:
            r0 = move-exception
            goto L92
        L91:
            r0 = move-exception
        L92:
            throw r0
    }

    public java.lang.String getKey() {
            r6 = this;
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.NumberFormatException -> L9b
            r1 = r0 | 81
            int r2 = r1 << 1
            r0 = r0 & 81
            r0 = r0 ^ (-1)
            r0 = r0 & r1
            int r0 = -r0
            r1 = r2 | r0
            r3 = 1
            int r1 = r1 << r3
            r0 = r0 ^ r2
            int r1 = r1 - r0
            int r0 = r1 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r0     // Catch: java.lang.Exception -> L99 java.lang.NumberFormatException -> L9b
            int r1 = r1 % 2
            java.lang.String r0 = r6.key     // Catch: java.lang.ArrayStoreException -> L97
            if (r0 == 0) goto L1e
            r1 = 1
            goto L1f
        L1e:
            r1 = 0
        L1f:
            if (r1 == 0) goto L62
            int r1 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r2 = r1 & 93
            r4 = 93
            r1 = r1 ^ r4
            r1 = r1 | r2
            r5 = r2 ^ r1
            r1 = r1 & r2
            int r1 = r1 << r3
            int r5 = r5 + r1
            int r1 = r5 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1
            int r5 = r5 % 2
            r1 = 6
            if (r5 != 0) goto L39
            r2 = 6
            goto L3b
        L39:
            r2 = 82
        L3b:
            java.lang.String r5 = ""
            if (r2 == r1) goto L4f
            boolean r0 = r0.equals(r5)     // Catch: java.lang.Exception -> L99
            r1 = 97
            if (r0 == 0) goto L4a
            r0 = 88
            goto L4c
        L4a:
            r0 = 97
        L4c:
            if (r0 == r1) goto L74
            goto L62
        L4f:
            boolean r0 = r0.equals(r5)
            r1 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L60
            r1 = 78
            if (r0 == 0) goto L5d
            r4 = 78
        L5d:
            if (r4 == r1) goto L62
            goto L74
        L60:
            r0 = move-exception
            throw r0
        L62:
            r0 = 16
            java.lang.String r0 = r6.randomText(r0)     // Catch: java.lang.ClassCastException -> L95
            r6.key = r0     // Catch: java.lang.ClassCastException -> L95
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.ArrayStoreException -> L93
            int r0 = r0 + 25
            int r1 = r0 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r1     // Catch: java.lang.ArrayStoreException -> L93
            int r0 = r0 % 2
        L74:
            java.lang.String r0 = r6.key     // Catch: java.lang.ClassCastException -> L91
            int r1 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r2 = r1 ^ 105(0x69, float:1.47E-43)
            r4 = r1 & 105(0x69, float:1.47E-43)
            r2 = r2 | r4
            int r2 = r2 << r3
            r4 = r4 ^ (-1)
            r1 = r1 | 105(0x69, float:1.47E-43)
            r1 = r1 & r4
            int r1 = -r1
            r4 = r2 | r1
            int r3 = r4 << 1
            r1 = r1 ^ r2
            int r3 = r3 - r1
            int r1 = r3 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r1
            int r3 = r3 % 2
            return r0
        L91:
            r0 = move-exception
            goto L94
        L93:
            r0 = move-exception
        L94:
            throw r0
        L95:
            r0 = move-exception
            goto L9c
        L97:
            r0 = move-exception
            goto L9c
        L99:
            r0 = move-exception
            goto L9c
        L9b:
            r0 = move-exception
        L9c:
            throw r0
    }

    public java.lang.String randomText(int r8) {
            r7 = this;
            java.security.SecureRandom r0 = new java.security.SecureRandom
            r0.<init>()
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>(r8)
            int r2 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r3 = r2 & (-82)
            r4 = r2 ^ (-1)
            r4 = r4 & 81
            r3 = r3 | r4
            r2 = r2 & 81
            r4 = 1
            int r2 = r2 << r4
            int r3 = r3 + r2
            int r2 = r3 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r2
            int r3 = r3 % 2
            r2 = 0
            int r3 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r5 = r3 & 17
            r6 = r5 ^ (-1)
            r3 = r3 | 17
            r3 = r3 & r6
            int r5 = r5 << r4
            int r5 = -r5
            int r5 = -r5
            r6 = r3 | r5
            int r6 = r6 << r4
            r3 = r3 ^ r5
            int r6 = r6 - r3
            int r3 = r6 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r3
            int r6 = r6 % 2
        L36:
            r3 = 19
            if (r2 >= r8) goto L3d
            r5 = 19
            goto L3f
        L3d:
            r5 = 44
        L3f:
            if (r5 == r3) goto L5f
            java.lang.String r8 = r1.toString()
            int r0 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r1 = r0 ^ 55
            r2 = r0 & 55
            r1 = r1 | r2
            int r1 = r1 << r4
            r2 = r2 ^ (-1)
            r0 = r0 | 55
            r0 = r0 & r2
            int r0 = -r0
            r2 = r1 | r0
            int r2 = r2 << r4
            r0 = r0 ^ r1
            int r2 = r2 - r0
            int r0 = r2 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r0
            int r2 = r2 % 2
            return r8
        L5f:
            int r3 = br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode
            r5 = r3 & 15
            r3 = r3 ^ 15
            r3 = r3 | r5
            int r3 = -r3
            int r3 = -r3
            r3 = r3 ^ (-1)
            int r5 = r5 - r3
            int r5 = r5 - r4
            int r3 = r5 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.f1445a = r3
            int r5 = r5 % 2
            r3 = 89
            if (r5 != 0) goto L79
            r5 = 57
            goto L7b
        L79:
            r5 = 89
        L7b:
            r6 = 65
            if (r5 == r3) goto L91
            char[] r3 = new char[r6]
            r3 = {x00d6: FILL_ARRAY_DATA  , data: [31847, -10695, 21137, -8343, 23489, -15271, 16433, -13175, 18785, -2615, 30289, -3518, 32504, -1258, 26504, -8158, 27736, -5890, 5400, -28286, 4648, -25002, 6904, -30878, 904, -29650, 2120, -19230, 12664, -17002, 15912, -17854, 9944, -23682, 12184, -22494, -11192, 20716, -8890, 22972, -9710, 18036, -15634, 20292, -13390, 29724, -3962, 31980, -1710, 26036, -6626, 25220, -4366, 27468, -26714, 4156, -25454, 6388, -31410, 420, -32206, 3740, -29978, 14104, -19579} // fill-array
            java.lang.String r3 = m16647d(r3)
            java.lang.String r3 = r3.intern()
            int r5 = r0.nextInt(r4)
            goto La4
        L91:
            char[] r3 = new char[r6]
            r3 = {x011c: FILL_ARRAY_DATA  , data: [31847, -10695, 21137, -8343, 23489, -15271, 16433, -13175, 18785, -2615, 30289, -3518, 32504, -1258, 26504, -8158, 27736, -5890, 5400, -28286, 4648, -25002, 6904, -30878, 904, -29650, 2120, -19230, 12664, -17002, 15912, -17854, 9944, -23682, 12184, -22494, -11192, 20716, -8890, 22972, -9710, 18036, -15634, 20292, -13390, 29724, -3962, 31980, -1710, 26036, -6626, 25220, -4366, 27468, -26714, 4156, -25454, 6388, -31410, 420, -32206, 3740, -29978, 14104, -19579} // fill-array
            java.lang.String r3 = m16647d(r3)
            java.lang.String r3 = r3.intern()
            r5 = 64
            int r5 = r0.nextInt(r5)
        La4:
            char r3 = r3.charAt(r5)
            r1.append(r3)
            r3 = r2 & 65
            r2 = r2 ^ 65
            r2 = r2 | r3
            r5 = r3 ^ r2
            r2 = r2 & r3
            int r2 = r2 << r4
            int r5 = r5 + r2
            r2 = r5 ^ (-64)
            r3 = r5 & (-64)
            r2 = r2 | r3
            int r2 = r2 << r4
            r3 = r3 ^ (-1)
            r5 = r5 | (-64)
            r3 = r3 & r5
            int r2 = r2 - r3
            int r3 = br.com.original.bank.controller.api.crypto.AesUtil.f1445a
            r5 = r3 | 47
            int r5 = r5 << r4
            r3 = r3 ^ 47
            int r3 = -r3
            r3 = r3 ^ (-1)
            int r5 = r5 - r3
            int r5 = r5 - r4
            int r3 = r5 % 128
            br.com.original.bank.controller.api.crypto.AesUtil.$r8$backportedMethods$utility$Double$1$hashCode = r3
            int r5 = r5 % 2
            goto L36
    }
}

package com.worklight.wlclient.auth;

/* loaded from: classes4.dex */
public class WLAuthorizationManagerInternal {
    private static final java.lang.String ANALYTICS_API_KEY = "com.worklight.oauth.analytics.api.key";
    private static final java.lang.String ANALYTICS_URL_KEY = "com.worklight.oauth.analytics.url";
    private static final java.lang.String API_VERSION = "v1";
    private static final java.lang.String BASE_AUTHORIZATION = "az";
    private static final java.lang.String BASE_PREAUTH = "preauth";
    private static final java.lang.String BASE_REGISTRATION = "registration";
    private static final java.lang.String BEARER = "Bearer";
    private static final java.lang.String CLIENT_ID_OAUTH_LABEL = "com.worklight.oauth.clientid";
    private static final java.lang.String CLIENT_REGISTRATION_DATA_KEY = "com.worklight.oauth.application.data";
    private static final java.lang.String HEADER_AUTHORIZATION = "Authorization";
    private static final java.lang.String HEADER_LOCATION = "Location";
    private static final java.lang.String JSON_ERROR_DESCRIPTION_KEY = "errorMsg";
    private static final java.lang.String JSON_ERROR_KEY = "errorCode";
    private static final java.lang.String JSON_SCOPE_KEY = "scope";
    private static final int MIN_LOGIN_TIMEOUT = 5000;
    private static final java.lang.String PARAM_AUTHORIZATION_CODE_VALUE = "authorization_code";
    private static final java.lang.String PARAM_CLIENT_ASSERTION_KEY = "client_assertion";
    private static final java.lang.String PARAM_CLIENT_ASSERTION_TYPE_KEY = "client_assertion_type";
    private static final java.lang.String PARAM_CLIENT_ASSERTION_TYPE_VALUE = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer";
    private static final java.lang.String PARAM_CLIENT_ID_KEY = "client_id";
    private static final java.lang.String PARAM_CODE_KEY = "code";
    private static final java.lang.String PARAM_CODE_VALUE = "code";
    private static final java.lang.String PARAM_GET_REFRESH_TOKEN_KEY = "get_refresh_token";
    private static final java.lang.String PARAM_GET_REFRESH_TOKEN_VALUE = "TRUE";
    private static final java.lang.String PARAM_GRANT_TYPE_KEY = "grant_type";
    private static final java.lang.String PARAM_REDIRECT_URI_KEY = "redirect_uri";
    private static final java.lang.String PARAM_REDIRECT_URI_VALUE = "://mfpredirecturi";
    private static final java.lang.String PARAM_REFRESH_TOKEN_KEY = "refresh_token";
    private static final java.lang.String PARAM_REFRESH_TOKEN_VALUE = "refresh_token";
    private static final java.lang.String PARAM_RESPONSE_TYPE_KEY = "response_type";
    private static final java.lang.String PARAM_SCOPE_KEY = "scope";
    private static final java.lang.String PARAM_SECURITY_CHECK_KEY = "security_check";
    private static final java.lang.String PATH_LOGOUT = "logout";
    private static final java.lang.String PATH_OAUTH_AUTHORIZATION = "authorization";
    private static final java.lang.String PATH_OAUTH_TOKEN = "token";
    private static final java.lang.String PATH_PREAUTHORIZE = "preauthorize";
    private static final java.lang.String PATH_REGISTER_CLIENTS_ON_SUCCESS = "clients";
    private static final java.lang.String PATH_REGISTER_SELF = "self";
    private static final int RESOURCE_TO_SCOPE_CACHE_SIZE = 100;
    private static final java.lang.String WWW_AUTHENTICATE_HEADER = "WWW-Authenticate";
    private static boolean enableRefreshToken = false;
    private static com.worklight.wlclient.auth.WLAuthorizationManagerInternal instance;
    public static com.worklight.common.Logger logger;
    public boolean authorizationInProgress;
    public final java.lang.Object authorizationInProgressLock;
    public java.net.URL authorizationServerUrl;
    public java.lang.String clientId;
    private boolean isUpdateRegistrationRequest;
    private com.worklight.wlclient.auth.WLAuthQueue obtainAccessTokenQueue;
    private java.util.List<com.worklight.wlclient.WLRequestListener> registrationQueue;
    private final java.lang.Object registrationQueueLock;
    public java.util.Map<java.lang.String, java.lang.String> resourceToScopeCache;
    private java.util.Map<java.lang.String, java.lang.String> scopeToRefreshToken;
    public java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> scopeToToken;
    private boolean shouldCallRegistrationAfterUnknownClientError;
    public int timeOut;


    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$10 */
    /* loaded from: classes4.dex */
    final class C477110 implements com.worklight.wlclient.WLRequestListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ com.worklight.wlclient.api.WLResponseListener val$listener;
        final /* synthetic */ java.lang.String val$scope;

        C477110(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, com.worklight.wlclient.api.WLResponseListener r3) {
                r0 = this;
                r0.this$0 = r1
                r0.val$scope = r2
                r0.val$listener = r3
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r5) {
                r4 = this;
                com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "Authorization failed with status code: "
                r1.append(r2)
                java.lang.Class r2 = r5.getClass()
                java.lang.String r2 = r2.getSimpleName()
                java.lang.String r3 = "getStatus"
                com.worklight.common.Logger.enter(r2, r3)
                java.lang.Class r2 = r5.getClass()
                java.lang.String r2 = r2.getSimpleName()
                com.worklight.common.Logger.exit(r2, r3)
                int r2 = r5.status
                r1.append(r2)
                java.lang.String r2 = " and error message: "
                r1.append(r2)
                java.lang.String r2 = r5.getErrorMsg()
                r1.append(r2)
                java.lang.String r1 = r1.toString()
                r0.debug(r1)
                com.worklight.wlclient.api.WLResponseListener r0 = r4.val$listener
                r0.onFailure(r5)
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r3) {
                r2 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r3 = r2.this$0
                java.lang.String r0 = r2.val$scope
                com.worklight.wlclient.api.WLResponseListener r1 = r2.val$listener
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$2100(r3, r0, r1)
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r3 = r2.this$0
                java.lang.String r0 = r2.val$scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$1700(r3, r0)
                return
        }
    }

    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$11 */
    /* loaded from: classes4.dex */
    public class C477211 implements com.worklight.wlclient.WLRequestListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ org.json.JSONObject val$credentials;
        final /* synthetic */ com.worklight.wlclient.api.WLLoginResponseListener val$listener;
        final /* synthetic */ java.lang.String val$securityCheck;

        public C477211(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, org.json.JSONObject r3, com.worklight.wlclient.api.WLLoginResponseListener r4) {
                r0 = this;
                r0.this$0 = r1
                r0.val$securityCheck = r2
                r0.val$credentials = r3
                r0.val$listener = r4
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r5) {
                r4 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r4.this$0
                java.lang.String r1 = r4.val$securityCheck
                org.json.JSONObject r2 = r4.val$credentials
                com.worklight.wlclient.api.WLLoginResponseListener r3 = r4.val$listener
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$2500(r0, r1, r2, r5, r3)
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r4 = r3.this$0
                java.lang.String r0 = r3.val$securityCheck
                org.json.JSONObject r1 = r3.val$credentials
                com.worklight.wlclient.api.WLLoginResponseListener r2 = r3.val$listener
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$2400(r4, r0, r1, r2)
                return
        }
    }

    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12 */
    /* loaded from: classes4.dex */
    public class C477312 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ org.json.JSONObject val$credentials;
        final /* synthetic */ com.worklight.wlclient.api.WLLoginResponseListener val$listener;
        final /* synthetic */ java.lang.String val$securityCheck;

        public C477312(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, com.worklight.wlclient.api.WLLoginResponseListener r2, java.lang.String r3, org.json.JSONObject r4) {
                r0 = this;
                r0.this$0 = r1
                r0.val$listener = r2
                r0.val$securityCheck = r3
                r0.val$credentials = r4
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r5) {
                r4 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r4.this$0
                java.lang.String r1 = r4.val$securityCheck
                org.json.JSONObject r2 = r4.val$credentials
                com.worklight.wlclient.api.WLLoginResponseListener r3 = r4.val$listener
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$2500(r0, r1, r2, r5, r3)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r3) {
                r2 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r3 = r2.this$0
                java.lang.Object r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$600(r3)
                monitor-enter(r3)
                com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()     // Catch: java.lang.Throwable -> L2b
                java.lang.String r1 = "Succeeded to login to securityCheck"
                r0.debug(r1)     // Catch: java.lang.Throwable -> L2b
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r2.this$0     // Catch: java.lang.Throwable -> L2b
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$900(r0)     // Catch: java.lang.Throwable -> L2b
                com.worklight.wlclient.api.WLLoginResponseListener r0 = r2.val$listener     // Catch: java.lang.Throwable -> L2b
                r0.onSuccess()     // Catch: java.lang.Throwable -> L2b
                com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()     // Catch: java.lang.Throwable -> L2b
                java.lang.String r1 = "Reset authInProgress from login without reg success."
                r0.debug(r1)     // Catch: java.lang.Throwable -> L2b
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r2.this$0     // Catch: java.lang.Throwable -> L2b
                r1 = 0
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$802(r0, r1)     // Catch: java.lang.Throwable -> L2b
                monitor-exit(r3)
                return
            L2b:
                r0 = move-exception
                monitor-exit(r3)
                throw r0
        }
    }

    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$13 */
    /* loaded from: classes4.dex */
    public class C477413 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ com.worklight.wlclient.WLRequestListener val$listener;

        public C477413(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, com.worklight.wlclient.WLRequestListener r2) {
                r0 = this;
                r0.this$0 = r1
                r0.val$listener = r2
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r2) {
                r1 = this;
                com.worklight.wlclient.WLRequestListener r0 = r1.val$listener
                r0.onFailure(r2)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r2) {
                r1 = this;
                com.worklight.wlclient.WLRequestListener r0 = r1.val$listener
                r0.onSuccess(r2)
                return
        }
    }


    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$3 */
    /* loaded from: classes4.dex */
    final class C47763 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ com.worklight.wlclient.api.WLAccessTokenListener val$listener;
        final /* synthetic */ java.lang.String val$scope;

        C47763(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, com.worklight.wlclient.api.WLAccessTokenListener r3) {
                r0 = this;
                r0.this$0 = r1
                r0.val$scope = r2
                r0.val$listener = r3
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r5) {
                r4 = this;
                java.lang.Class r0 = r5.getClass()
                java.lang.String r0 = r0.getSimpleName()
                java.lang.String r1 = "getStatus"
                com.worklight.common.Logger.enter(r0, r1)
                java.lang.Class r0 = r5.getClass()
                java.lang.String r0 = r0.getSimpleName()
                com.worklight.common.Logger.exit(r0, r1)
                int r0 = r5.status
                java.util.Map<java.lang.String, java.util.List<java.lang.String>> r1 = r5.headers
                boolean r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.isAuthorizationRequired(r0, r1)
                com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()
                java.lang.StringBuilder r2 = new java.lang.StringBuilder
                r2.<init>()
                java.lang.String r3 = "obtainAccessToken : isAuthRequired="
                r2.append(r3)
                r2.append(r0)
                java.lang.String r2 = r2.toString()
                r1.debug(r2)
                com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()
                java.lang.String r2 = "obtainAccessToken :*** failure ***"
                r1.debug(r2)
                r1 = 1
                if (r0 != r1) goto L58
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r4.this$0
                java.util.Map r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$400(r0)
                java.lang.String r1 = r4.val$scope
                r0.remove(r1)
                com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
                java.lang.String r1 = r4.val$scope
                r0.removeSecurityTokenPref(r1)
            L58:
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r4.this$0
                java.lang.String r1 = r4.val$scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$200(r0, r1, r5)
                com.worklight.wlclient.api.WLAccessTokenListener r0 = r4.val$listener
                r0.onFailure(r5)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r3.this$0     // Catch: org.json.JSONException -> L1e
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$300(r0, r4)     // Catch: org.json.JSONException -> L1e
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r3.this$0     // Catch: org.json.JSONException -> L1e
                java.lang.String r1 = r3.val$scope     // Catch: org.json.JSONException -> L1e
                com.worklight.wlclient.auth.AccessToken r0 = r0.getCachedAccessToken(r1)     // Catch: org.json.JSONException -> L1e
                if (r0 == 0) goto L26
                com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()     // Catch: org.json.JSONException -> L1e
                java.lang.String r2 = "obtainAccessToken : Received AccessToken using RefreshToken"
                r1.debug(r2)     // Catch: org.json.JSONException -> L1e
                com.worklight.wlclient.api.WLAccessTokenListener r1 = r3.val$listener     // Catch: org.json.JSONException -> L1e
                r1.onSuccess(r0)     // Catch: org.json.JSONException -> L1e
                return
            L1e:
                com.worklight.wlclient.api.WLFailResponse r0 = new com.worklight.wlclient.api.WLFailResponse
                r0.<init>(r4)
                r3.onFailure(r0)
            L26:
                return
        }
    }

    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$4 */
    /* loaded from: classes4.dex */
    public class C47774 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ com.worklight.wlclient.api.WLResponseListener val$hybridListener;
        final /* synthetic */ java.lang.String val$scope;


        public C47774(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, com.worklight.wlclient.api.WLResponseListener r3) {
                r0 = this;
                r0.this$0 = r1
                r0.val$scope = r2
                r0.val$hybridListener = r3
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public void onFailure(com.worklight.wlclient.api.WLFailResponse r3) {
                r2 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r2.this$0
                java.lang.String r1 = r2.val$scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$200(r0, r1, r3)
                com.worklight.wlclient.api.WLResponseListener r0 = r2.val$hybridListener
                r0.onFailure(r3)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r3.this$0
                java.lang.String r1 = r3.val$scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal$4$1 r2 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$4$1
                r2.<init>(r3)
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$500(r0, r1, r4, r2)
                return
        }
    }

    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$5 */
    /* loaded from: classes4.dex */
    public class C47795 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ com.worklight.wlclient.api.WLLogoutResponseListener val$listener;
        final /* synthetic */ java.lang.String val$securityCheck;

        public C47795(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, com.worklight.wlclient.api.WLLogoutResponseListener r3) {
                r0 = this;
                r0.this$0 = r1
                r0.val$securityCheck = r2
                r0.val$listener = r3
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r3) {
                r2 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r2.this$0
                com.worklight.wlclient.api.WLLogoutResponseListener r1 = r2.val$listener
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$1000(r0, r3, r1)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r4 = r3.this$0
                java.lang.Object r4 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$600(r4)
                monitor-enter(r4)
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r3.this$0     // Catch: java.lang.Throwable -> L55
                java.util.Map r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$700(r0)     // Catch: java.lang.Throwable -> L55
                r0.clear()     // Catch: java.lang.Throwable -> L55
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r3.this$0     // Catch: java.lang.Throwable -> L55
                java.util.Map r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$400(r0)     // Catch: java.lang.Throwable -> L55
                r0.clear()     // Catch: java.lang.Throwable -> L55
                com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Throwable -> L55
                r0.clearSecurityTokenPref()     // Catch: java.lang.Throwable -> L55
                com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()     // Catch: java.lang.Throwable -> L55
                java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L55
                r1.<init>()     // Catch: java.lang.Throwable -> L55
                java.lang.String r2 = "Logged out successfully from securityCheck"
                r1.append(r2)     // Catch: java.lang.Throwable -> L55
                java.lang.String r2 = r3.val$securityCheck     // Catch: java.lang.Throwable -> L55
                r1.append(r2)     // Catch: java.lang.Throwable -> L55
                java.lang.String r1 = r1.toString()     // Catch: java.lang.Throwable -> L55
                r0.debug(r1)     // Catch: java.lang.Throwable -> L55
                com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()     // Catch: java.lang.Throwable -> L55
                java.lang.String r1 = "Reset authInProgress from logout success."
                r0.debug(r1)     // Catch: java.lang.Throwable -> L55
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r3.this$0     // Catch: java.lang.Throwable -> L55
                r1 = 0
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$802(r0, r1)     // Catch: java.lang.Throwable -> L55
                com.worklight.wlclient.api.WLLogoutResponseListener r0 = r3.val$listener     // Catch: java.lang.Throwable -> L55
                r0.onSuccess()     // Catch: java.lang.Throwable -> L55
                monitor-exit(r4)
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r4 = r3.this$0
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$900(r4)
                return
            L55:
                r0 = move-exception
                monitor-exit(r4)
                throw r0
        }
    }




    /* renamed from: com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9 */
    /* loaded from: classes4.dex */
    final class C47839 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;
        final /* synthetic */ java.lang.String val$scope;

        C47839(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2) {
                r0 = this;
                r0.this$0 = r1
                r0.val$scope = r2
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r3) {
                r2 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r2.this$0
                java.lang.String r1 = r2.val$scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$200(r0, r1, r3)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.common.Logger r4 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$000()
                java.lang.String r0 = "Finished pre-authorization process - Sending request to Authorization Endpoint"
                r4.debug(r0)
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r4 = r3.this$0
                java.lang.String r0 = r3.val$scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener r1 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener
                r2 = 0
                r1.<init>(r4, r0, r2)
                r4.invokeAuthorizationRequest(r0, r1)
                return
        }
    }

    /* loaded from: classes4.dex */
    final class WLAuthorizationRequestListener implements com.worklight.wlclient.api.WLResponseListener {
        private final java.lang.String scope;
        final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal this$0;

        /* loaded from: classes4.dex */
        final class WLTokenRequestListener implements com.worklight.wlclient.api.WLResponseListener {
            final /* synthetic */ com.worklight.wlclient.auth.WLAuthorizationManagerInternal.WLAuthorizationRequestListener this$1;

            private WLTokenRequestListener(com.worklight.wlclient.auth.WLAuthorizationManagerInternal.WLAuthorizationRequestListener r1) {
                    r0 = this;
                    r0.this$1 = r1
                    r0.<init>()
                    return
            }

            /* synthetic */ WLTokenRequestListener(com.worklight.wlclient.auth.WLAuthorizationManagerInternal.WLAuthorizationRequestListener r1, byte r2) {
                    r0 = this;
                    r0.<init>(r1)
                    return
            }

            @Override // com.worklight.wlclient.api.WLResponseListener
            public final void onFailure(com.worklight.wlclient.api.WLFailResponse r3) {
                    r2 = this;
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener r0 = r2.this$1
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r0.this$0
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener r1 = r2.this$1
                    java.lang.String r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.WLAuthorizationRequestListener.access$2300(r1)
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$200(r0, r1, r3)
                    return
            }

            @Override // com.worklight.wlclient.api.WLResponseListener
            public final void onSuccess(com.worklight.wlclient.api.WLResponse r2) {
                    r1 = this;
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener r0 = r1.this$1     // Catch: org.json.JSONException -> L8
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r0.this$0     // Catch: org.json.JSONException -> L8
                    com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$300(r0, r2)     // Catch: org.json.JSONException -> L8
                    return
                L8:
                    com.worklight.wlclient.api.WLFailResponse r0 = new com.worklight.wlclient.api.WLFailResponse
                    r0.<init>(r2)
                    r1.onFailure(r0)
                    return
            }
        }

        private WLAuthorizationRequestListener(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2) {
                r0 = this;
                r0.this$0 = r1
                r0.<init>()
                r0.scope = r2
                return
        }

        /* synthetic */ WLAuthorizationRequestListener(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, byte r3) {
                r0 = this;
                r0.<init>(r1, r2)
                return
        }

        static /* synthetic */ java.lang.String access$2300(com.worklight.wlclient.auth.WLAuthorizationManagerInternal.WLAuthorizationRequestListener r0) {
                java.lang.String r0 = r0.scope
                return r0
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r3) {
                r2 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = r2.this$0
                java.lang.String r1 = r2.scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$200(r0, r1, r3)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener$WLTokenRequestListener r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$WLAuthorizationRequestListener$WLTokenRequestListener
                r1 = 0
                r0.<init>(r3, r1)
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1 = r3.this$0
                java.lang.String r2 = r3.scope
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal.access$500(r1, r2, r4, r0)
                return
        }
    }

    static {
            return
    }

    protected WLAuthorizationManagerInternal() {
            r3 = this;
            r3.<init>()
            r0 = 0
            r3.isUpdateRegistrationRequest = r0
            r3.timeOut = r0
            r1 = 0
            r3.clientId = r1
            java.lang.Object r1 = new java.lang.Object
            r1.<init>()
            r3.registrationQueueLock = r1
            java.lang.Object r1 = new java.lang.Object
            r1.<init>()
            r3.authorizationInProgressLock = r1
            r1 = 1
            r3.shouldCallRegistrationAfterUnknownClientError = r1
            java.lang.Class<com.worklight.wlclient.auth.WLAuthorizationManagerInternal> r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.class
            java.lang.String r1 = r1.getSimpleName()
            com.worklight.common.Logger r1 = com.worklight.common.Logger.getInstance(r1)
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger = r1
            java.util.HashMap r1 = new java.util.HashMap
            r1.<init>()
            java.util.Map r1 = java.util.Collections.synchronizedMap(r1)
            r3.scopeToToken = r1
            java.util.HashMap r1 = new java.util.HashMap
            r1.<init>()
            java.util.Map r1 = java.util.Collections.synchronizedMap(r1)
            r3.scopeToRefreshToken = r1
            com.worklight.wlclient.auth.LRUCache r1 = new com.worklight.wlclient.auth.LRUCache
            r2 = 100
            r1.<init>(r2)
            r3.resourceToScopeCache = r1
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            r3.registrationQueue = r1
            com.worklight.wlclient.auth.WLAuthQueue r1 = new com.worklight.wlclient.auth.WLAuthQueue
            r1.<init>()
            r3.obtainAccessTokenQueue = r1
            r3.authorizationInProgress = r0
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            boolean r0 = r0.isRefreshTokenEnabled()
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal.enableRefreshToken = r0
            return
    }

    private void abortAuthorization(com.worklight.wlclient.api.WLFailResponse r6) {
            r5 = this;
            java.lang.Object r0 = r5.authorizationInProgressLock
            monitor-enter(r0)
            com.worklight.wlclient.auth.WLAuthQueue r1 = r5.obtainAccessTokenQueue     // Catch: java.lang.Throwable -> L48
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r2 = r1.queue     // Catch: java.lang.Throwable -> L48
            java.util.Set r2 = r2.keySet()     // Catch: java.lang.Throwable -> L48
            java.util.Iterator r2 = r2.iterator()     // Catch: java.lang.Throwable -> L48
        Lf:
            boolean r3 = r2.hasNext()     // Catch: java.lang.Throwable -> L48
            if (r3 == 0) goto L37
            java.lang.Object r3 = r2.next()     // Catch: java.lang.Throwable -> L48
            java.lang.String r3 = (java.lang.String) r3     // Catch: java.lang.Throwable -> L48
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r4 = r1.queue     // Catch: java.lang.Throwable -> L48
            java.lang.Object r3 = r4.get(r3)     // Catch: java.lang.Throwable -> L48
            java.util.ArrayList r3 = (java.util.ArrayList) r3     // Catch: java.lang.Throwable -> L48
            java.util.Iterator r3 = r3.iterator()     // Catch: java.lang.Throwable -> L48
        L27:
            boolean r4 = r3.hasNext()     // Catch: java.lang.Throwable -> L48
            if (r4 == 0) goto Lf
            java.lang.Object r4 = r3.next()     // Catch: java.lang.Throwable -> L48
            com.worklight.wlclient.api.WLResponseListener r4 = (com.worklight.wlclient.api.WLResponseListener) r4     // Catch: java.lang.Throwable -> L48
            r4.onFailure(r6)     // Catch: java.lang.Throwable -> L48
            goto L27
        L37:
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r6 = r1.queue     // Catch: java.lang.Throwable -> L48
            r6.clear()     // Catch: java.lang.Throwable -> L48
            com.worklight.common.Logger r6 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L48
            java.lang.String r1 = "Reset authInProgress from abort authorization."
            r6.debug(r1)     // Catch: java.lang.Throwable -> L48
            r6 = 0
            r5.authorizationInProgress = r6     // Catch: java.lang.Throwable -> L48
            monitor-exit(r0)
            return
        L48:
            r6 = move-exception
            monitor-exit(r0)
            goto L4c
        L4b:
            throw r6
        L4c:
            goto L4b
    }

    static /* synthetic */ com.worklight.common.Logger access$000() {
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            return r0
    }

    static /* synthetic */ void access$100(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1, java.lang.String r2, java.lang.String r3, com.worklight.wlclient.api.WLAccessTokenListener r4) {
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$3 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$3
            r0.<init>(r1, r2, r4)
            java.lang.String r2 = "get_refresh_token"
            r1.invokeTokenRequest(r2, r0, r3)
            return
    }

    static /* synthetic */ void access$1000(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r3, com.worklight.wlclient.api.WLFailResponse r4, com.worklight.wlclient.api.WLLogoutResponseListener r5) {
            boolean r0 = isUnknownClientError(r4)
            r1 = 0
            if (r0 == 0) goto L21
            boolean r0 = r3.shouldCallRegistrationAfterUnknownClientError
            if (r0 == 0) goto L21
            r3.shouldCallRegistrationAfterUnknownClientError = r1
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Client instance registration information is incorrect."
            r0.error(r2)
            r3.clearRegistration()
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Reset authInProgress from logout failure 1."
            r0.debug(r2)
            r3.authorizationInProgress = r1
            goto L2d
        L21:
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Reset authInProgress from logout failure 2."
            r0.debug(r2)
            r3.authorizationInProgress = r1
            r3.invokeNextAuthorizationRequest()
        L2d:
            com.worklight.common.Logger r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = "Logout failed with status code: "
            r0.append(r1)
            java.lang.Class r1 = r4.getClass()
            java.lang.String r1 = r1.getSimpleName()
            java.lang.String r2 = "getStatus"
            com.worklight.common.Logger.enter(r1, r2)
            java.lang.Class r1 = r4.getClass()
            java.lang.String r1 = r1.getSimpleName()
            com.worklight.common.Logger.exit(r1, r2)
            int r1 = r4.status
            r0.append(r1)
            java.lang.String r1 = " and error message: "
            r0.append(r1)
            java.lang.String r1 = r4.getErrorMsg()
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            r3.debug(r0)
            r5.onFailure(r4)
            return
    }

    static /* synthetic */ java.lang.Object access$1100(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            java.lang.Object r0 = r0.registrationQueueLock
            return r0
    }

    static /* synthetic */ void access$1200(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r7, com.worklight.wlclient.api.WLResponse r8) {
            java.lang.String r0 = "AnalyticsAPIKey"
            java.lang.String r1 = "AnalyticsURL"
            java.lang.Class r2 = r8.getClass()
            java.lang.String r2 = r2.getSimpleName()
            java.lang.String r3 = "getStatus"
            com.worklight.common.Logger.enter(r2, r3)
            java.lang.Class r2 = r8.getClass()
            java.lang.String r2 = r2.getSimpleName()
            com.worklight.common.Logger.exit(r2, r3)
            int r2 = r8.status
            r3 = 200(0xc8, float:2.8E-43)
            if (r2 != r3) goto L2b
            com.worklight.common.Logger r7 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r8 = "Registration update success"
            r7.debug(r8)
            goto Ld1
        L2b:
            java.lang.Class r2 = r8.getClass()
            java.lang.String r2 = r2.getSimpleName()
            java.lang.String r3 = "getFirstHeader"
            com.worklight.common.Logger.enter(r2, r3)
            java.lang.String r2 = "Location"
            java.util.List r2 = r8.getHeader(r2)
            r4 = 0
            if (r2 == 0) goto L53
            java.lang.Class r5 = r8.getClass()
            java.lang.String r5 = r5.getSimpleName()
            com.worklight.common.Logger.exit(r5, r3)
            java.lang.Object r2 = r2.get(r4)
            java.lang.String r2 = (java.lang.String) r2
            goto L5f
        L53:
            java.lang.Class r2 = r8.getClass()
            java.lang.String r2 = r2.getSimpleName()
            com.worklight.common.Logger.exit(r2, r3)
            r2 = 0
        L5f:
            if (r2 == 0) goto Lef
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r3 = r3.getServerContext()
            r5 = 3
            java.lang.Object[] r5 = new java.lang.Object[r5]
            r5[r4] = r3
            java.lang.String r3 = "registration"
            r4 = 1
            r5[r4] = r3
            r3 = 2
            java.lang.String r6 = "clients"
            r5[r3] = r6
            java.lang.String r3 = "%s/%s/%s"
            java.lang.String r3 = java.lang.String.format(r3, r5)
            boolean r3 = r2.contains(r3)
            if (r3 == 0) goto Le7
            java.lang.String r3 = "/"
            java.lang.String[] r2 = r2.split(r3)
            int r3 = r2.length
            int r3 = r3 - r4
            r2 = r2[r3]
            r7.clientId = r2
            com.worklight.common.WLConfig r7 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r3 = "com.worklight.oauth.clientid"
            r7.writeSecurityPref(r3, r2)
            org.json.JSONObject r7 = r8.getResponseJSON()     // Catch: org.json.JSONException -> Ld1
            boolean r8 = r7.has(r1)     // Catch: org.json.JSONException -> Ld1
            java.lang.String r2 = ""
            if (r8 == 0) goto Lac
            java.lang.Object r8 = r7.get(r1)     // Catch: org.json.JSONException -> Ld1
            java.lang.String r8 = (java.lang.String) r8     // Catch: org.json.JSONException -> Ld1
            goto Lad
        Lac:
            r8 = r2
        Lad:
            boolean r1 = r7.has(r0)     // Catch: org.json.JSONException -> Ld1
            if (r1 == 0) goto Lba
            java.lang.Object r7 = r7.get(r0)     // Catch: org.json.JSONException -> Ld1
            java.lang.String r7 = (java.lang.String) r7     // Catch: org.json.JSONException -> Ld1
            goto Lbb
        Lba:
            r7 = r2
        Lbb:
            if (r8 == r2) goto Lc6
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: org.json.JSONException -> Ld1
            java.lang.String r1 = "com.worklight.oauth.analytics.url"
            r0.writeSecurityPref(r1, r8)     // Catch: org.json.JSONException -> Ld1
        Lc6:
            if (r7 == r2) goto Ld1
            com.worklight.common.WLConfig r8 = com.worklight.common.WLConfig.getInstance()     // Catch: org.json.JSONException -> Ld1
            java.lang.String r0 = "com.worklight.oauth.analytics.api.key"
            r8.writeSecurityPref(r0, r7)     // Catch: org.json.JSONException -> Ld1
        Ld1:
            com.worklight.common.WLConfig r7 = com.worklight.common.WLConfig.getInstance()
            org.json.JSONObject r7 = r7.getClientData()
            java.lang.String r7 = java.lang.String.valueOf(r7)
            com.worklight.common.WLConfig r8 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r0 = "com.worklight.oauth.application.data"
            r8.writeSecurityPref(r0, r7)
            return
        Le7:
            java.lang.Exception r7 = new java.lang.Exception
            java.lang.String r8 = "Registration Response failure - Incorrect Location Header"
            r7.<init>(r8)
            throw r7
        Lef:
            java.lang.Exception r7 = new java.lang.Exception
            java.lang.String r8 = "Registration Response failure - Missing Location Header"
            r7.<init>(r8)
            throw r7
    }

    static /* synthetic */ java.util.List access$1300(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            java.util.List<com.worklight.wlclient.WLRequestListener> r0 = r0.registrationQueue
            return r0
    }

    static /* synthetic */ boolean access$1400(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            boolean r0 = r0.isUpdateRegistrationRequest
            return r0
    }

    static /* synthetic */ void access$1500(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            r0.invokeRegistrationRequest()
            return
    }

    static /* synthetic */ void access$1600(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0, com.worklight.wlclient.api.WLFailResponse r1) {
            r0.abortAuthorization(r1)
            return
    }

    static /* synthetic */ void access$1700(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r8, java.lang.String r9) {
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9 r7 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9
            r7.<init>(r8, r9)
            r0 = 0
            java.util.HashMap r2 = r8.getPreAuthorizationsParams(r9, r0)
            r9 = 3
            java.lang.Object[] r9 = new java.lang.Object[r9]
            r0 = 0
            java.lang.String r1 = "preauth"
            r9[r0] = r1
            r0 = 1
            java.lang.String r1 = "v1"
            r9[r0] = r1
            r0 = 2
            java.lang.String r1 = "preauthorize"
            r9[r0] = r1
            java.lang.String r0 = "%s/%s/%s"
            java.lang.String r1 = java.lang.String.format(r0, r9)
            com.worklight.wlclient.RequestMethod r4 = com.worklight.wlclient.RequestMethod.POST
            r3 = 0
            r5 = 1
            r6 = 0
            r0 = r8
            r0.sendRequest(r1, r2, r3, r4, r5, r6, r7)
            return
    }

    static /* synthetic */ java.lang.String access$1800(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0, java.lang.String r1) {
            java.lang.String r0 = sortScope(r1)
            return r0
    }

    static /* synthetic */ com.worklight.wlclient.auth.WLAuthQueue access$1900(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            com.worklight.wlclient.auth.WLAuthQueue r0 = r0.obtainAccessTokenQueue
            return r0
    }

    static /* synthetic */ void access$200(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0, java.lang.String r1, com.worklight.wlclient.api.WLFailResponse r2) {
            r0.onObtainAccessTokenFailure(r1, r2)
            return
    }

    static /* synthetic */ void access$2100(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0, java.lang.String r1, com.worklight.wlclient.api.WLResponseListener r2) {
            java.lang.String r1 = sortScope(r1)
            com.worklight.wlclient.auth.WLAuthQueue r0 = r0.obtainAccessTokenQueue
            r0.addToAuthorizationQueue(r1, r2)
            return
    }

    static /* synthetic */ void access$2400(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r8, java.lang.String r9, org.json.JSONObject r10, com.worklight.wlclient.api.WLLoginResponseListener r11) {
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12 r7 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12
            r7.<init>(r8, r11, r9, r10)
            java.util.HashMap r2 = r8.getPreAuthorizationsParams(r9, r10)
            r9 = 3
            java.lang.Object[] r9 = new java.lang.Object[r9]
            r10 = 0
            java.lang.String r11 = "preauth"
            r9[r10] = r11
            r10 = 1
            java.lang.String r11 = "v1"
            r9[r10] = r11
            r10 = 2
            java.lang.String r11 = "preauthorize"
            r9[r10] = r11
            java.lang.String r10 = "%s/%s/%s"
            java.lang.String r1 = java.lang.String.format(r10, r9)
            com.worklight.wlclient.RequestMethod r4 = com.worklight.wlclient.RequestMethod.POST
            r3 = 0
            r5 = 1
            r6 = 0
            r0 = r8
            r0.sendRequest(r1, r2, r3, r4, r5, r6, r7)
            return
    }

    static /* synthetic */ void access$2500(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r2, java.lang.String r3, org.json.JSONObject r4, com.worklight.wlclient.api.WLFailResponse r5, com.worklight.wlclient.api.WLLoginResponseListener r6) {
            boolean r0 = isUnknownClientError(r5)
            r1 = 0
            if (r0 == 0) goto L20
            boolean r0 = r2.shouldCallRegistrationAfterUnknownClientError
            if (r0 == 0) goto L20
            r2.shouldCallRegistrationAfterUnknownClientError = r1
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r1 = "Client instance registration information is incorrect, attempting to re-register client instance."
            r0.error(r1)
            r2.clearRegistration()
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$11 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$11
            r0.<init>(r2, r3, r4, r6)
            r2.invokeRegistrationRequest(r0)
            goto L2f
        L20:
            r6.onFailure(r5)
            com.worklight.common.Logger r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r4 = "Reset authInProgress from login failure."
            r3.debug(r4)
            r2.authorizationInProgress = r1
            r2.invokeNextAuthorizationRequest()
        L2f:
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.String r4 = "Login failed with status code: "
            r3.append(r4)
            java.lang.Class r4 = r5.getClass()
            java.lang.String r4 = r4.getSimpleName()
            java.lang.String r6 = "getStatus"
            com.worklight.common.Logger.enter(r4, r6)
            java.lang.Class r4 = r5.getClass()
            java.lang.String r4 = r4.getSimpleName()
            com.worklight.common.Logger.exit(r4, r6)
            int r4 = r5.status
            r3.append(r4)
            java.lang.String r4 = " and error message: "
            r3.append(r4)
            java.lang.String r4 = r5.getErrorMsg()
            r3.append(r4)
            java.lang.String r3 = r3.toString()
            r2.debug(r3)
            return
    }

    static /* synthetic */ void access$300(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r7, com.worklight.wlclient.api.WLResponse r8) {
            org.json.JSONObject r0 = r8.getResponseJSON()
            if (r0 == 0) goto L8a
            com.worklight.wlclient.auth.AccessToken r1 = new com.worklight.wlclient.auth.AccessToken
            r1.<init>(r0)
            java.lang.String r2 = r1.scope
            java.lang.String r2 = sortScope(r2)
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r3 = r7.scopeToToken
            r3.put(r2, r1)
            boolean r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.enableRefreshToken
            r3 = 1
            if (r1 != r3) goto L2d
            java.lang.String r1 = "refresh_token"
            java.lang.String r0 = r0.getString(r1)
            java.util.Map<java.lang.String, java.lang.String> r1 = r7.scopeToRefreshToken
            r1.put(r2, r0)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            r1.writeSecurityTokenPref(r2, r0)
        L2d:
            com.worklight.wlclient.auth.WLAuthQueue r0 = r7.obtainAccessTokenQueue
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r1 = r0.queue
            java.util.Set r1 = r1.keySet()
            java.util.Iterator r1 = r1.iterator()
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>()
        L3e:
            boolean r4 = r1.hasNext()
            if (r4 == 0) goto L70
            java.lang.Object r4 = r1.next()
            java.lang.String r4 = (java.lang.String) r4
            boolean r5 = com.worklight.wlclient.auth.WLAuthQueue.isKeysEqual(r4, r2)
            if (r5 == 0) goto L3e
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r5 = r0.queue
            java.lang.Object r5 = r5.get(r4)
            java.util.ArrayList r5 = (java.util.ArrayList) r5
            java.util.Iterator r5 = r5.iterator()
        L5c:
            boolean r6 = r5.hasNext()
            if (r6 == 0) goto L6c
            java.lang.Object r6 = r5.next()
            com.worklight.wlclient.api.WLResponseListener r6 = (com.worklight.wlclient.api.WLResponseListener) r6
            r6.onSuccess(r8)
            goto L5c
        L6c:
            r3.add(r4)
            goto L3e
        L70:
            java.util.Iterator r8 = r3.iterator()
        L74:
            boolean r1 = r8.hasNext()
            if (r1 == 0) goto L86
            java.lang.Object r1 = r8.next()
            java.lang.String r1 = (java.lang.String) r1
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r2 = r0.queue
            r2.remove(r1)
            goto L74
        L86:
            r7.invokeNextAuthorizationRequest()
            return
        L8a:
            org.json.JSONException r7 = new org.json.JSONException
            java.lang.String r8 = "response.getResponseJSON() returned null"
            r7.<init>(r8)
            goto L93
        L92:
            throw r7
        L93:
            goto L92
    }

    static /* synthetic */ java.util.Map access$400(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            java.util.Map<java.lang.String, java.lang.String> r0 = r0.scopeToRefreshToken
            return r0
    }

    static /* synthetic */ void access$500(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r2, java.lang.String r3, com.worklight.wlclient.api.WLResponse r4, com.worklight.wlclient.api.WLResponseListener r5) {
            java.lang.String r0 = "Location"
            java.util.List r0 = r4.getHeader(r0)
            r1 = 0
            java.lang.Object r0 = r0.get(r1)
            java.lang.String r0 = (java.lang.String) r0
            if (r0 != 0) goto L18
            com.worklight.wlclient.api.WLFailResponse r5 = new com.worklight.wlclient.api.WLFailResponse
            r5.<init>(r4)
            r2.onObtainAccessTokenFailure(r3, r5)
            return
        L18:
            java.util.TreeMap r0 = com.worklight.nativeandroid.common.WLUtils.m8246d(r0)
            java.lang.String r1 = "code"
            java.lang.Object r0 = r0.get(r1)
            java.lang.String r0 = (java.lang.String) r0
            if (r0 != 0) goto L2f
            com.worklight.wlclient.api.WLFailResponse r5 = new com.worklight.wlclient.api.WLFailResponse
            r5.<init>(r4)
            r2.onObtainAccessTokenFailure(r3, r5)
            return
        L2f:
            r3 = 0
            r2.invokeTokenRequest(r0, r5, r3)
            return
    }

    static /* synthetic */ java.lang.Object access$600(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            java.lang.Object r0 = r0.authorizationInProgressLock
            return r0
    }

    static /* synthetic */ java.util.Map access$700(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r0 = r0.scopeToToken
            return r0
    }

    static /* synthetic */ boolean access$802(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0, boolean r1) {
            r1 = 0
            r0.authorizationInProgress = r1
            return r1
    }

    static /* synthetic */ void access$900(com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0) {
            r0.invokeNextAuthorizationRequest()
            return
    }

    public static okhttp3.Request addAuthorizationHeader(okhttp3.Request r3, java.lang.String r4) {
            java.lang.String r0 = ""
            boolean r0 = r4.equals(r0)
            if (r0 != 0) goto L3a
            okhttp3.Request$Builder r0 = new okhttp3.Request$Builder
            r0.<init>(r3)
            java.lang.String r3 = "Authorization"
            okhttp3.Headers$Builder r1 = r0.f28631d
            okhttp3.Headers.m4868c(r3)
            okhttp3.Headers.$r8$backportedMethods$utility$Double$1$hashCode(r4, r3)
            r1.m4864a(r3)
            java.util.List<java.lang.String> r2 = r1.f28586a
            r2.add(r3)
            java.util.List<java.lang.String> r3 = r1.f28586a
            java.lang.String r4 = r4.trim()
            r3.add(r4)
            okhttp3.HttpUrl r3 = r0.$r8$backportedMethods$utility$Double$1$hashCode
            if (r3 == 0) goto L32
            okhttp3.Request r3 = new okhttp3.Request
            r3.<init>(r0)
            goto L3a
        L32:
            java.lang.IllegalStateException r3 = new java.lang.IllegalStateException
            java.lang.String r4 = "url == null"
            r3.<init>(r4)
            throw r3
        L3a:
            return r3
    }

    private void addToObtainAccessTokenQueue(java.lang.String r2, com.worklight.wlclient.api.WLResponseListener r3) {
            r1 = this;
            java.lang.String r2 = sortScope(r2)
            com.worklight.wlclient.auth.WLAuthQueue r0 = r1.obtainAccessTokenQueue
            r0.addToAuthorizationQueue(r2, r3)
            return
    }

    private void clearCachedResourcesAndToken() {
            r1 = this;
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r0 = r1.scopeToToken
            r0.clear()
            java.util.Map<java.lang.String, java.lang.String> r0 = r1.resourceToScopeCache
            r0.clear()
            java.util.Map<java.lang.String, java.lang.String> r0 = r1.scopeToRefreshToken
            r0.clear()
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            r0.clearSecurityTokenPref()
            return
    }

    public static java.lang.String createRelativePath(java.lang.String r2, java.lang.String r3, java.lang.String r4) {
            r0 = 3
            java.lang.Object[] r0 = new java.lang.Object[r0]
            r1 = 0
            r0[r1] = r2
            r2 = 1
            r0[r2] = r3
            r2 = 2
            r0[r2] = r4
            java.lang.String r2 = "%s/%s/%s"
            java.lang.String r2 = java.lang.String.format(r2, r0)
            return r2
    }

    public static java.lang.String getAuthorizationHeader(okhttp3.Response r1) {
            if (r1 == 0) goto Ld
            okhttp3.Headers r1 = r1.value
            java.lang.String[] r1 = r1.f28585e
            java.lang.String r0 = "WWW-Authenticate"
            java.lang.String r1 = okhttp3.Headers.m4867c(r1, r0)
            return r1
        Ld:
            r1 = 0
            return r1
    }

    private static java.lang.String getAuthorizationScope(java.lang.String r2) {
            java.lang.String r0 = "scope="
            int r0 = r2.indexOf(r0)
            if (r0 < 0) goto L1b
            int r0 = r0 + 6
            java.lang.String r2 = r2.substring(r0)
            java.lang.String r0 = "\""
            java.lang.String r0 = java.util.regex.Pattern.quote(r0)
            java.lang.String r1 = ""
            java.lang.String r2 = r2.replaceAll(r0, r1)
            goto L1c
        L1b:
            r2 = 0
        L1c:
            return r2
    }

    private java.util.HashMap<java.lang.String, java.lang.Object> getAuthorizationsParams(java.lang.String r4) {
            r3 = this;
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            java.lang.String r1 = "response_type"
            java.lang.String r2 = "code"
            r0.put(r1, r2)
            java.lang.String r1 = r3.clientId
            if (r1 != 0) goto L1c
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r2 = "com.worklight.oauth.clientid"
            java.lang.String r1 = r1.readSecurityPref(r2)
            r3.clientId = r1
        L1c:
            java.lang.String r1 = r3.clientId
            java.lang.String r2 = "client_id"
            r0.put(r2, r1)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r2 = r2.getProtocol()
            r1.append(r2)
            java.lang.String r2 = "://mfpredirecturi"
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            java.lang.String r2 = "redirect_uri"
            r0.put(r2, r1)
            if (r4 != 0) goto L45
            java.lang.String r4 = "RegisteredClient"
        L45:
            java.lang.String r1 = "scope"
            r0.put(r1, r4)
            return r0
    }

    private java.lang.String getCachedRefreshToken(java.lang.String r3) {
            r2 = this;
            java.lang.String r3 = sortScope(r3)
            java.util.Map<java.lang.String, java.lang.String> r0 = r2.scopeToRefreshToken
            java.lang.Object r0 = r0.get(r3)
            java.lang.String r0 = (java.lang.String) r0
            if (r0 != 0) goto L16
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r0 = r0.readSecurityTokenPref(r3)
        L16:
            if (r0 == 0) goto L1e
            java.util.Map<java.lang.String, java.lang.String> r1 = r2.scopeToRefreshToken
            r1.put(r3, r0)
            return r0
        L1e:
            r3 = 0
            return r3
    }

    private static java.lang.String getErrorDescription(com.worklight.wlclient.api.WLFailResponse r2, com.worklight.wlclient.api.WLErrorCode r3) {
            java.lang.String r0 = "Location"
            java.util.List r1 = r2.getHeader(r0)
            int r1 = r1.size()
            if (r1 == 0) goto L2e
            java.util.List r2 = r2.getHeader(r0)
            r0 = 0
            java.lang.Object r2 = r2.get(r0)
            java.lang.String r2 = (java.lang.String) r2
            java.util.TreeMap r2 = com.worklight.nativeandroid.common.WLUtils.m8246d(r2)
            java.lang.String r0 = "errorMsg"
            java.lang.Object r2 = r2.get(r0)
            java.lang.String r2 = (java.lang.String) r2
            if (r2 != 0) goto L27
            java.lang.String r2 = r3.description
        L27:
            com.worklight.wlclient.api.WLFailResponse r0 = new com.worklight.wlclient.api.WLFailResponse
            r1 = 0
            r0.<init>(r3, r2, r1)
            goto L32
        L2e:
            java.lang.String r2 = r2.getResponseText()
        L32:
            return r2
    }

    public static com.worklight.wlclient.auth.WLAuthorizationManagerInternal getInstance() {
            java.lang.Class<com.worklight.wlclient.auth.WLAuthorizationManagerInternal> r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.class
            monitor-enter(r0)
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.instance     // Catch: java.lang.Throwable -> L12
            if (r1 != 0) goto Le
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal     // Catch: java.lang.Throwable -> L12
            r1.<init>()     // Catch: java.lang.Throwable -> L12
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal.instance = r1     // Catch: java.lang.Throwable -> L12
        Le:
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.instance     // Catch: java.lang.Throwable -> L12
            monitor-exit(r0)
            return r1
        L12:
            r1 = move-exception
            monitor-exit(r0)
            throw r1
    }

    private static org.json.JSONObject getRegistrationDataJson() {
            org.json.JSONObject r0 = new org.json.JSONObject
            r0.<init>()
            com.worklight.common.security.WLDeviceAuthManager r1 = com.worklight.common.security.WLDeviceAuthManager.getInstance()
            org.json.JSONObject r1 = r1.getDeviceData()
            java.lang.String r2 = "device"
            r0.put(r2, r1)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            org.json.JSONObject r1 = r1.getApplicationData()
            java.lang.String r2 = "application"
            r0.put(r2, r1)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            org.json.JSONObject r1 = r1.getRegistrationAttributesData()
            java.lang.String r2 = "attributes"
            r0.put(r2, r1)
            return r0
    }

    private java.util.Map<java.lang.String, java.lang.Object> getRegistrationParams() {
            r3 = this;
            org.json.JSONObject r0 = getRegistrationDataJson()
            org.json.JSONObject r0 = signRegistrationData(r0)
            java.util.HashMap r1 = new java.util.HashMap
            r1.<init>()
            java.lang.String r2 = "signedRegistrationData"
            r1.put(r2, r0)
            return r1
    }

    private void invokeNextAuthorizationRequest() {
            r12 = this;
            java.lang.Object r0 = r12.authorizationInProgressLock
            monitor-enter(r0)
            com.worklight.wlclient.auth.WLAuthQueue r1 = r12.obtainAccessTokenQueue     // Catch: java.lang.Throwable -> L63
            boolean r1 = r1.isEmpty()     // Catch: java.lang.Throwable -> L63
            r2 = 0
            if (r1 != 0) goto L58
            com.worklight.wlclient.auth.WLAuthQueue r1 = r12.obtainAccessTokenQueue     // Catch: java.lang.Throwable -> L63
            java.lang.String r1 = r1.getNextScopeToObtain()     // Catch: java.lang.Throwable -> L63
            if (r1 == 0) goto L61
            com.worklight.wlclient.auth.WLAuthQueue r3 = r12.obtainAccessTokenQueue     // Catch: java.lang.Throwable -> L63
            java.util.Map<java.lang.String, java.util.ArrayList<com.worklight.wlclient.api.WLResponseListener>> r3 = r3.queue     // Catch: java.lang.Throwable -> L63
            java.lang.Object r3 = r3.get(r1)     // Catch: java.lang.Throwable -> L63
            java.util.ArrayList r3 = (java.util.ArrayList) r3     // Catch: java.lang.Throwable -> L63
            java.lang.Object r3 = r3.get(r2)     // Catch: java.lang.Throwable -> L63
            com.worklight.wlclient.api.WLResponseListener r3 = (com.worklight.wlclient.api.WLResponseListener) r3     // Catch: java.lang.Throwable -> L63
            java.lang.String r4 = sortScope(r1)     // Catch: java.lang.Throwable -> L63
            com.worklight.wlclient.auth.WLAuthQueue r5 = r12.obtainAccessTokenQueue     // Catch: java.lang.Throwable -> L63
            r5.addToAuthorizationQueue(r4, r3)     // Catch: java.lang.Throwable -> L63
            r3 = 0
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9 r11 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9     // Catch: java.lang.Throwable -> L63
            r11.<init>(r12, r1)     // Catch: java.lang.Throwable -> L63
            java.util.HashMap r6 = r12.getPreAuthorizationsParams(r1, r3)     // Catch: java.lang.Throwable -> L63
            java.lang.String r1 = "preauth"
            java.lang.String r3 = "v1"
            java.lang.String r4 = "preauthorize"
            java.lang.String r5 = "%s/%s/%s"
            r7 = 3
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch: java.lang.Throwable -> L63
            r7[r2] = r1     // Catch: java.lang.Throwable -> L63
            r1 = 1
            r7[r1] = r3     // Catch: java.lang.Throwable -> L63
            r1 = 2
            r7[r1] = r4     // Catch: java.lang.Throwable -> L63
            java.lang.String r5 = java.lang.String.format(r5, r7)     // Catch: java.lang.Throwable -> L63
            r7 = 0
            com.worklight.wlclient.RequestMethod r8 = com.worklight.wlclient.RequestMethod.POST     // Catch: java.lang.Throwable -> L63
            r9 = 1
            r10 = 0
            r4 = r12
            r4.sendRequest(r5, r6, r7, r8, r9, r10, r11)     // Catch: java.lang.Throwable -> L63
            goto L61
        L58:
            com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L63
            java.lang.String r3 = "Reset authInProgress from invokeNextAuthorizationRequest."
            r1.debug(r3)     // Catch: java.lang.Throwable -> L63
            r12.authorizationInProgress = r2     // Catch: java.lang.Throwable -> L63
        L61:
            monitor-exit(r0)
            return
        L63:
            r1 = move-exception
            monitor-exit(r0)
            throw r1
    }

    private void invokePreAuthorizationRequest(java.lang.String r9, org.json.JSONObject r10, com.worklight.wlclient.api.WLResponseListener r11) {
            r8 = this;
            java.util.HashMap r2 = r8.getPreAuthorizationsParams(r9, r10)
            r9 = 3
            java.lang.Object[] r9 = new java.lang.Object[r9]
            r10 = 0
            java.lang.String r0 = "preauth"
            r9[r10] = r0
            r10 = 1
            java.lang.String r0 = "v1"
            r9[r10] = r0
            r10 = 2
            java.lang.String r0 = "preauthorize"
            r9[r10] = r0
            java.lang.String r10 = "%s/%s/%s"
            java.lang.String r1 = java.lang.String.format(r10, r9)
            com.worklight.wlclient.RequestMethod r4 = com.worklight.wlclient.RequestMethod.POST
            r3 = 0
            r5 = 1
            r6 = 0
            r0 = r8
            r7 = r11
            r0.sendRequest(r1, r2, r3, r4, r5, r6, r7)
            return
    }

    private void invokeRefreshTokenRequest(java.lang.String r2, java.lang.String r3, com.worklight.wlclient.api.WLAccessTokenListener r4) {
            r1 = this;
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$3 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$3
            r0.<init>(r1, r2, r4)
            java.lang.String r2 = "get_refresh_token"
            r1.invokeTokenRequest(r2, r0, r3)
            return
    }

    private void invokeRegistrationRequest() {
            r10 = this;
            java.util.List<com.worklight.wlclient.WLRequestListener> r0 = r10.registrationQueue
            int r0 = r0.size()
            r1 = 1
            if (r0 != r1) goto La3
            org.json.JSONObject r0 = getRegistrationDataJson()     // Catch: java.lang.Exception -> L9c
            org.json.JSONObject r0 = signRegistrationData(r0)     // Catch: java.lang.Exception -> L9c
            java.util.HashMap r4 = new java.util.HashMap     // Catch: java.lang.Exception -> L9c
            r4.<init>()     // Catch: java.lang.Exception -> L9c
            java.lang.String r2 = "signedRegistrationData"
            r4.put(r2, r0)     // Catch: java.lang.Exception -> L9c
            java.lang.String r0 = "registration"
            java.lang.String r2 = "v1"
            java.lang.String r3 = "self"
            java.lang.String r5 = "%s/%s/%s"
            r6 = 3
            java.lang.Object[] r6 = new java.lang.Object[r6]     // Catch: java.lang.Exception -> L9c
            r7 = 0
            r6[r7] = r0     // Catch: java.lang.Exception -> L9c
            r6[r1] = r2     // Catch: java.lang.Exception -> L9c
            r0 = 2
            r6[r0] = r3     // Catch: java.lang.Exception -> L9c
            java.lang.String r0 = java.lang.String.format(r5, r6)     // Catch: java.lang.Exception -> L9c
            com.worklight.wlclient.RequestMethod r2 = com.worklight.wlclient.RequestMethod.POST     // Catch: java.lang.Exception -> L9c
            java.lang.String r3 = r10.clientId     // Catch: java.lang.Exception -> L9c
            java.lang.String r5 = "com.worklight.oauth.clientid"
            if (r3 != 0) goto L44
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L9c
            java.lang.String r3 = r3.readSecurityPref(r5)     // Catch: java.lang.Exception -> L9c
            r10.clientId = r3     // Catch: java.lang.Exception -> L9c
        L44:
            java.lang.String r3 = r10.clientId     // Catch: java.lang.Exception -> L9c
            if (r3 == 0) goto L8d
            java.lang.String r3 = r10.clientId     // Catch: java.lang.Exception -> L9c
            if (r3 != 0) goto L56
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L9c
            java.lang.String r3 = r3.readSecurityPref(r5)     // Catch: java.lang.Exception -> L9c
            r10.clientId = r3     // Catch: java.lang.Exception -> L9c
        L56:
            java.lang.String r3 = r10.clientId     // Catch: java.lang.Exception -> L9c
            boolean r3 = r3.isEmpty()     // Catch: java.lang.Exception -> L9c
            if (r3 != 0) goto L8d
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Exception -> L9c
            java.lang.String r3 = "Client exists, application data has changed, call updateRegistration endpoint"
            r2.debug(r3)     // Catch: java.lang.Exception -> L9c
            com.worklight.wlclient.RequestMethod r2 = com.worklight.wlclient.RequestMethod.PUT     // Catch: java.lang.Exception -> L9c
            r10.isUpdateRegistrationRequest = r1     // Catch: java.lang.Exception -> L9c
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L9c
            r1.<init>()     // Catch: java.lang.Exception -> L9c
            r1.append(r0)     // Catch: java.lang.Exception -> L9c
            java.lang.String r0 = "/"
            r1.append(r0)     // Catch: java.lang.Exception -> L9c
            java.lang.String r0 = r10.clientId     // Catch: java.lang.Exception -> L9c
            if (r0 != 0) goto L84
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L9c
            java.lang.String r0 = r0.readSecurityPref(r5)     // Catch: java.lang.Exception -> L9c
            r10.clientId = r0     // Catch: java.lang.Exception -> L9c
        L84:
            java.lang.String r0 = r10.clientId     // Catch: java.lang.Exception -> L9c
            r1.append(r0)     // Catch: java.lang.Exception -> L9c
            java.lang.String r0 = r1.toString()     // Catch: java.lang.Exception -> L9c
        L8d:
            r3 = r0
            r6 = r2
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$6 r9 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$6     // Catch: java.lang.Exception -> L9c
            r9.<init>(r10)     // Catch: java.lang.Exception -> L9c
            r5 = 0
            r7 = 1
            r8 = 0
            r2 = r10
            r2.sendRequest(r3, r4, r5, r6, r7, r8, r9)     // Catch: java.lang.Exception -> L9c
            return
        L9c:
            r0 = move-exception
            java.lang.Error r1 = new java.lang.Error
            r1.<init>(r0)
            throw r1
        La3:
            return
    }

    private void invokeTokenRequest(java.lang.String r17, com.worklight.wlclient.api.WLResponseListener r18, java.lang.String r19) {
            r16 = this;
            r9 = r16
            r0 = r17
            java.lang.String r1 = "refresh_token"
            java.lang.String r2 = "get_refresh_token"
            java.lang.String r3 = "az"
            java.lang.String r4 = "v1"
            java.lang.String r5 = "token"
            java.lang.String r6 = "%s/%s/%s"
            r7 = 3
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch: java.lang.Exception -> L11a
            r8 = 0
            r7[r8] = r3     // Catch: java.lang.Exception -> L11a
            r3 = 1
            r7[r3] = r4     // Catch: java.lang.Exception -> L11a
            r4 = 2
            r7[r4] = r5     // Catch: java.lang.Exception -> L11a
            java.lang.String r4 = java.lang.String.format(r6, r7)     // Catch: java.lang.Exception -> L11a
            java.net.URL r5 = r9.authorizationServerUrl     // Catch: java.lang.Exception -> L11a
            if (r5 == 0) goto L29
            java.lang.String r5 = r5.toString()     // Catch: java.lang.Exception -> L11a
            goto L31
        L29:
            com.worklight.common.WLConfig r5 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L11a
            java.lang.String r5 = r5.getRootURL()     // Catch: java.lang.Exception -> L11a
        L31:
            com.worklight.wlclient.auth.JWT r6 = new com.worklight.wlclient.auth.JWT     // Catch: java.lang.Exception -> L11a
            r6.<init>()     // Catch: java.lang.Exception -> L11a
            java.lang.StringBuilder r7 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L11a
            r7.<init>()     // Catch: java.lang.Exception -> L11a
            r7.append(r5)     // Catch: java.lang.Exception -> L11a
            java.lang.String r5 = "/"
            r7.append(r5)     // Catch: java.lang.Exception -> L11a
            r7.append(r4)     // Catch: java.lang.Exception -> L11a
            java.lang.String r5 = r7.toString()     // Catch: java.lang.Exception -> L11a
            r6.aud = r5     // Catch: java.lang.Exception -> L11a
            r6.jti = r0     // Catch: java.lang.Exception -> L11a
            com.worklight.common.security.WLOAuthCertManager r5 = com.worklight.common.security.WLOAuthCertManager.getInstance()     // Catch: java.lang.Exception -> L11a
            org.json.JSONObject r6 = r6.toJson()     // Catch: java.lang.Exception -> L11a
            java.lang.String r7 = r9.clientId     // Catch: java.lang.Exception -> L11a
            java.lang.String r8 = "com.worklight.oauth.clientid"
            if (r7 != 0) goto L66
            com.worklight.common.WLConfig r7 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L11a
            java.lang.String r7 = r7.readSecurityPref(r8)     // Catch: java.lang.Exception -> L11a
            r9.clientId = r7     // Catch: java.lang.Exception -> L11a
        L66:
            java.lang.String r7 = r9.clientId     // Catch: java.lang.Exception -> L11a
            java.lang.String r5 = r5.signJWS(r6, r7)     // Catch: java.lang.Exception -> L11a
            java.util.HashMap r6 = new java.util.HashMap     // Catch: java.lang.Exception -> L11a
            r6.<init>()     // Catch: java.lang.Exception -> L11a
            boolean r7 = r2.equals(r0)     // Catch: java.lang.Exception -> L11a
            java.lang.String r10 = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
            java.lang.String r11 = "client_assertion_type"
            java.lang.String r12 = "redirect_uri"
            java.lang.String r13 = "://mfpredirecturi"
            java.lang.String r14 = "grant_type"
            java.lang.String r15 = "client_id"
            java.lang.String r3 = "client_assertion"
            if (r7 == 0) goto Lc1
            r6.put(r3, r5)     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = r9.clientId     // Catch: java.lang.Exception -> L11a
            if (r0 != 0) goto L96
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = r0.readSecurityPref(r8)     // Catch: java.lang.Exception -> L11a
            r9.clientId = r0     // Catch: java.lang.Exception -> L11a
        L96:
            java.lang.String r0 = r9.clientId     // Catch: java.lang.Exception -> L11a
            r6.put(r15, r0)     // Catch: java.lang.Exception -> L11a
            r6.put(r14, r1)     // Catch: java.lang.Exception -> L11a
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L11a
            r0.<init>()     // Catch: java.lang.Exception -> L11a
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L11a
            java.lang.String r2 = r2.getProtocol()     // Catch: java.lang.Exception -> L11a
            r0.append(r2)     // Catch: java.lang.Exception -> L11a
            r0.append(r13)     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = r0.toString()     // Catch: java.lang.Exception -> L11a
            r6.put(r12, r0)     // Catch: java.lang.Exception -> L11a
            r6.put(r11, r10)     // Catch: java.lang.Exception -> L11a
            r0 = r19
            r6.put(r1, r0)     // Catch: java.lang.Exception -> L11a
            goto L108
        Lc1:
            r6.put(r3, r5)     // Catch: java.lang.Exception -> L11a
            java.lang.String r1 = "code"
            r6.put(r1, r0)     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = r9.clientId     // Catch: java.lang.Exception -> L11a
            if (r0 != 0) goto Ld7
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = r0.readSecurityPref(r8)     // Catch: java.lang.Exception -> L11a
            r9.clientId = r0     // Catch: java.lang.Exception -> L11a
        Ld7:
            java.lang.String r0 = r9.clientId     // Catch: java.lang.Exception -> L11a
            r6.put(r15, r0)     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = "authorization_code"
            r6.put(r14, r0)     // Catch: java.lang.Exception -> L11a
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L11a
            r0.<init>()     // Catch: java.lang.Exception -> L11a
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L11a
            java.lang.String r1 = r1.getProtocol()     // Catch: java.lang.Exception -> L11a
            r0.append(r1)     // Catch: java.lang.Exception -> L11a
            r0.append(r13)     // Catch: java.lang.Exception -> L11a
            java.lang.String r0 = r0.toString()     // Catch: java.lang.Exception -> L11a
            r6.put(r12, r0)     // Catch: java.lang.Exception -> L11a
            r6.put(r11, r10)     // Catch: java.lang.Exception -> L11a
            boolean r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.enableRefreshToken     // Catch: java.lang.Exception -> L11a
            r1 = 1
            if (r0 != r1) goto L108
            java.lang.String r0 = "TRUE"
            r6.put(r2, r0)     // Catch: java.lang.Exception -> L11a
        L108:
            r0 = 0
            com.worklight.wlclient.RequestMethod r5 = com.worklight.wlclient.RequestMethod.POST     // Catch: java.lang.Exception -> L11a
            r7 = 0
            r8 = 1
            r1 = r16
            r2 = r4
            r3 = r6
            r4 = r0
            r6 = r7
            r7 = r8
            r8 = r18
            r1.sendRequest(r2, r3, r4, r5, r6, r7, r8)     // Catch: java.lang.Exception -> L11a
            return
        L11a:
            r0 = move-exception
            java.lang.Error r1 = new java.lang.Error
            r1.<init>(r0)
            throw r1
    }

    private static java.lang.Boolean isAuthorizationRequired(java.util.List<java.lang.String> r2) {
            int r0 = r2.size()
            if (r0 != 0) goto L9
            java.lang.Boolean r2 = java.lang.Boolean.FALSE
            return r2
        L9:
            java.util.Iterator r2 = r2.iterator()
        Ld:
            boolean r0 = r2.hasNext()
            if (r0 == 0) goto L24
            java.lang.Object r0 = r2.next()
            java.lang.String r0 = (java.lang.String) r0
            java.lang.String r1 = "Bearer"
            boolean r0 = r0.contains(r1)
            if (r0 == 0) goto Ld
            java.lang.Boolean r2 = java.lang.Boolean.TRUE
            return r2
        L24:
            r2 = 0
            return r2
    }

    public static boolean isAuthorizationRequired(int r2, java.util.Map r3) {
            r0 = 0
            if (r3 != 0) goto L4
            return r0
        L4:
            r1 = 401(0x191, float:5.62E-43)
            if (r2 == r1) goto Lc
            r1 = 403(0x193, float:5.65E-43)
            if (r2 != r1) goto L34
        Lc:
            java.lang.String r2 = "WWW-Authenticate"
            boolean r1 = r3.containsKey(r2)
            if (r1 == 0) goto L34
            java.lang.Object r2 = r3.get(r2)
            java.util.List r2 = (java.util.List) r2
            java.util.Iterator r2 = r2.iterator()
        L1e:
            boolean r3 = r2.hasNext()
            if (r3 == 0) goto L34
            java.lang.Object r3 = r2.next()
            java.lang.String r3 = (java.lang.String) r3
            java.lang.String r1 = "Bearer"
            boolean r3 = r3.contains(r1)
            if (r3 == 0) goto L1e
            r2 = 1
            return r2
        L34:
            return r0
    }

    public static boolean isForbidden(okhttp3.Response r1) {
            int r1 = r1.f28642e
            r0 = 403(0x193, float:5.65E-43)
            if (r1 != r0) goto L8
            r1 = 1
            goto L9
        L8:
            r1 = 0
        L9:
            return r1
    }

    public static boolean isMfpConflict(com.worklight.wlclient.api.WLResponse r2) {
            java.lang.Class r0 = r2.getClass()
            java.lang.String r0 = r0.getSimpleName()
            java.lang.String r1 = "getStatus"
            com.worklight.common.Logger.enter(r0, r1)
            java.lang.Class r0 = r2.getClass()
            java.lang.String r0 = r0.getSimpleName()
            com.worklight.common.Logger.exit(r0, r1)
            int r0 = r2.status
            r1 = 409(0x199, float:5.73E-43)
            if (r0 != r1) goto L2a
            java.util.Map<java.lang.String, java.util.List<java.lang.String>> r2 = r2.headers
            java.lang.String r0 = "MFP-Conflict"
            boolean r2 = r2.containsKey(r0)
            if (r2 == 0) goto L2a
            r2 = 1
            return r2
        L2a:
            r2 = 0
            return r2
    }

    private static boolean isMfpConflict(okhttp3.Response r2) {
            int r0 = r2.f28642e
            r1 = 409(0x199, float:5.73E-43)
            if (r0 != r1) goto L16
            okhttp3.Headers r2 = r2.value
            java.util.Map r2 = r2.m4866d()
            java.lang.String r0 = "MFP-Conflict"
            boolean r2 = r2.containsKey(r0)
            if (r2 == 0) goto L16
            r2 = 1
            return r2
        L16:
            r2 = 0
            return r2
    }

    private static boolean isUnknownClientError(com.worklight.wlclient.api.WLResponse r3) {
            java.lang.String r0 = "getStatus"
            org.json.JSONObject r1 = r3.getResponseJSON()
            if (r1 == 0) goto L3b
            java.lang.Class r2 = r3.getClass()     // Catch: org.json.JSONException -> L34
            java.lang.String r2 = r2.getSimpleName()     // Catch: org.json.JSONException -> L34
            com.worklight.common.Logger.enter(r2, r0)     // Catch: org.json.JSONException -> L34
            java.lang.Class r2 = r3.getClass()     // Catch: org.json.JSONException -> L34
            java.lang.String r2 = r2.getSimpleName()     // Catch: org.json.JSONException -> L34
            com.worklight.common.Logger.exit(r2, r0)     // Catch: org.json.JSONException -> L34
            int r3 = r3.status     // Catch: org.json.JSONException -> L34
            r0 = 400(0x190, float:5.6E-43)
            if (r3 != r0) goto L3b
            java.lang.String r3 = "errorCode"
            java.lang.String r3 = r1.getString(r3)     // Catch: org.json.JSONException -> L34
            java.lang.String r0 = "INVALID_CLIENT_ID"
            boolean r3 = r3.equals(r0)     // Catch: org.json.JSONException -> L34
            if (r3 == 0) goto L3b
            r3 = 1
            return r3
        L34:
            com.worklight.common.Logger r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r0 = "couldn't get: errorCode from response's JSON"
            r3.debug(r0)
        L3b:
            r3 = 0
            return r3
    }

    private void loginWithRegistration(java.lang.String r2, org.json.JSONObject r3, com.worklight.wlclient.api.WLLoginResponseListener r4) {
            r1 = this;
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$11 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$11
            r0.<init>(r1, r2, r3, r4)
            java.lang.Object r2 = r1.registrationQueueLock
            monitor-enter(r2)
            java.util.List<com.worklight.wlclient.WLRequestListener> r3 = r1.registrationQueue     // Catch: java.lang.Throwable -> L12
            r3.add(r0)     // Catch: java.lang.Throwable -> L12
            r1.invokeRegistrationRequest()     // Catch: java.lang.Throwable -> L12
            monitor-exit(r2)
            return
        L12:
            r3 = move-exception
            monitor-exit(r2)
            throw r3
    }

    private void loginWithoutRegistration(java.lang.String r2, org.json.JSONObject r3, com.worklight.wlclient.api.WLLoginResponseListener r4) {
            r1 = this;
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12
            r0.<init>(r1, r4, r2, r3)
            r1.invokePreAuthorizationRequest(r2, r3, r0)
            return
    }

    private void obtainAccessToken(java.lang.String r3, com.worklight.wlclient.api.WLResponseListener r4) {
            r2 = this;
            if (r3 != 0) goto L4
            java.lang.String r3 = "RegisteredClient"
        L4:
            boolean r0 = r2.authorizationInProgress
            if (r0 != 0) goto L40
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r1 = "Set authInProgress from obtainAccessToken."
            r0.debug(r1)
            r0 = 1
            r2.authorizationInProgress = r0
            boolean r0 = r2.shouldRegister()
            if (r0 == 0) goto L2d
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$10 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$10
            r0.<init>(r2, r3, r4)
            java.lang.Object r3 = r2.registrationQueueLock
            monitor-enter(r3)
            java.util.List<com.worklight.wlclient.WLRequestListener> r4 = r2.registrationQueue     // Catch: java.lang.Throwable -> L2a
            r4.add(r0)     // Catch: java.lang.Throwable -> L2a
            r2.invokeRegistrationRequest()     // Catch: java.lang.Throwable -> L2a
            monitor-exit(r3)
            goto L49
        L2a:
            r4 = move-exception
            monitor-exit(r3)
            throw r4
        L2d:
            java.lang.String r0 = sortScope(r3)
            com.worklight.wlclient.auth.WLAuthQueue r1 = r2.obtainAccessTokenQueue
            r1.addToAuthorizationQueue(r0, r4)
            r4 = 0
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9
            r0.<init>(r2, r3)
            r2.invokePreAuthorizationRequest(r3, r4, r0)
            return
        L40:
            java.lang.String r3 = sortScope(r3)
            com.worklight.wlclient.auth.WLAuthQueue r0 = r2.obtainAccessTokenQueue
            r0.addToAuthorizationQueue(r3, r4)
        L49:
            return
    }

    private void obtainAccessTokenWithPreAZ(java.lang.String r3) {
            r2 = this;
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9
            r0.<init>(r2, r3)
            r1 = 0
            r2.invokePreAuthorizationRequest(r3, r1, r0)
            return
    }

    private void obtainAccessTokenWithRegistration(java.lang.String r2, com.worklight.wlclient.api.WLResponseListener r3) {
            r1 = this;
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$10 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$10
            r0.<init>(r1, r2, r3)
            java.lang.Object r2 = r1.registrationQueueLock
            monitor-enter(r2)
            java.util.List<com.worklight.wlclient.WLRequestListener> r3 = r1.registrationQueue     // Catch: java.lang.Throwable -> L12
            r3.add(r0)     // Catch: java.lang.Throwable -> L12
            r1.invokeRegistrationRequest()     // Catch: java.lang.Throwable -> L12
            monitor-exit(r2)
            return
        L12:
            r3 = move-exception
            monitor-exit(r2)
            throw r3
    }

    private void obtainAccessTokenWithoutRegistration(java.lang.String r3, com.worklight.wlclient.api.WLResponseListener r4) {
            r2 = this;
            java.lang.String r0 = sortScope(r3)
            com.worklight.wlclient.auth.WLAuthQueue r1 = r2.obtainAccessTokenQueue
            r1.addToAuthorizationQueue(r0, r4)
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9 r4 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$9
            r4.<init>(r2, r3)
            r0 = 0
            r2.invokePreAuthorizationRequest(r3, r0, r4)
            return
    }

    private void onAuthorizationSuccess(java.lang.String r3, com.worklight.wlclient.api.WLResponse r4, com.worklight.wlclient.api.WLResponseListener r5) {
            r2 = this;
            java.lang.String r0 = "Location"
            java.util.List r0 = r4.getHeader(r0)
            r1 = 0
            java.lang.Object r0 = r0.get(r1)
            java.lang.String r0 = (java.lang.String) r0
            if (r0 != 0) goto L18
            com.worklight.wlclient.api.WLFailResponse r5 = new com.worklight.wlclient.api.WLFailResponse
            r5.<init>(r4)
            r2.onObtainAccessTokenFailure(r3, r5)
            return
        L18:
            java.util.TreeMap r0 = com.worklight.nativeandroid.common.WLUtils.m8246d(r0)
            java.lang.String r1 = "code"
            java.lang.Object r0 = r0.get(r1)
            java.lang.String r0 = (java.lang.String) r0
            if (r0 != 0) goto L2f
            com.worklight.wlclient.api.WLFailResponse r5 = new com.worklight.wlclient.api.WLFailResponse
            r5.<init>(r4)
            r2.onObtainAccessTokenFailure(r3, r5)
            return
        L2f:
            r3 = 0
            r2.invokeTokenRequest(r0, r5, r3)
            return
    }

    private void onLoginFailure(java.lang.String r3, org.json.JSONObject r4, com.worklight.wlclient.api.WLFailResponse r5, com.worklight.wlclient.api.WLLoginResponseListener r6) {
            r2 = this;
            boolean r0 = isUnknownClientError(r5)
            r1 = 0
            if (r0 == 0) goto L1b
            boolean r0 = r2.shouldCallRegistrationAfterUnknownClientError
            if (r0 == 0) goto L1b
            r2.shouldCallRegistrationAfterUnknownClientError = r1
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r1 = "Client instance registration information is incorrect, attempting to re-register client instance."
            r0.error(r1)
            r2.clearRegistration()
            r2.loginWithRegistration(r3, r4, r6)
            goto L2a
        L1b:
            r6.onFailure(r5)
            com.worklight.common.Logger r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r4 = "Reset authInProgress from login failure."
            r3.debug(r4)
            r2.authorizationInProgress = r1
            r2.invokeNextAuthorizationRequest()
        L2a:
            com.worklight.common.Logger r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.StringBuilder r4 = new java.lang.StringBuilder
            r4.<init>()
            java.lang.String r6 = "Login failed with status code: "
            r4.append(r6)
            java.lang.Class r6 = r5.getClass()
            java.lang.String r6 = r6.getSimpleName()
            java.lang.String r0 = "getStatus"
            com.worklight.common.Logger.enter(r6, r0)
            java.lang.Class r6 = r5.getClass()
            java.lang.String r6 = r6.getSimpleName()
            com.worklight.common.Logger.exit(r6, r0)
            int r6 = r5.status
            r4.append(r6)
            java.lang.String r6 = " and error message: "
            r4.append(r6)
            java.lang.String r5 = r5.getErrorMsg()
            r4.append(r5)
            java.lang.String r4 = r4.toString()
            r3.debug(r4)
            return
    }

    private void onLogoutFailure(com.worklight.wlclient.api.WLFailResponse r5, com.worklight.wlclient.api.WLLogoutResponseListener r6) {
            r4 = this;
            boolean r0 = isUnknownClientError(r5)
            r1 = 0
            if (r0 == 0) goto L21
            boolean r0 = r4.shouldCallRegistrationAfterUnknownClientError
            if (r0 == 0) goto L21
            r4.shouldCallRegistrationAfterUnknownClientError = r1
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Client instance registration information is incorrect."
            r0.error(r2)
            r4.clearRegistration()
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Reset authInProgress from logout failure 1."
            r0.debug(r2)
            r4.authorizationInProgress = r1
            goto L2d
        L21:
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Reset authInProgress from logout failure 2."
            r0.debug(r2)
            r4.authorizationInProgress = r1
            r4.invokeNextAuthorizationRequest()
        L2d:
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "Logout failed with status code: "
            r1.append(r2)
            java.lang.Class r2 = r5.getClass()
            java.lang.String r2 = r2.getSimpleName()
            java.lang.String r3 = "getStatus"
            com.worklight.common.Logger.enter(r2, r3)
            java.lang.Class r2 = r5.getClass()
            java.lang.String r2 = r2.getSimpleName()
            com.worklight.common.Logger.exit(r2, r3)
            int r2 = r5.status
            r1.append(r2)
            java.lang.String r2 = " and error message: "
            r1.append(r2)
            java.lang.String r2 = r5.getErrorMsg()
            r1.append(r2)
            java.lang.String r1 = r1.toString()
            r0.debug(r1)
            r6.onFailure(r5)
            return
    }

    private void onObtainAccessTokenFailure(java.lang.String r5, com.worklight.wlclient.api.WLFailResponse r6) {
            r4 = this;
            java.lang.String r0 = r6.getErrorMsg()
            boolean r1 = isUnknownClientError(r6)
            if (r1 == 0) goto L30
            boolean r1 = r4.shouldCallRegistrationAfterUnknownClientError
            if (r1 == 0) goto L30
            r1 = 0
            r4.shouldCallRegistrationAfterUnknownClientError = r1
            com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r2 = "Client instance registration information is incorrect, attempting to re-register client instance."
            r1.error(r2)
            r4.clearRegistration()
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$7 r1 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$7
            r1.<init>(r4, r5)
            java.lang.Object r5 = r4.registrationQueueLock
            monitor-enter(r5)
            java.util.List<com.worklight.wlclient.WLRequestListener> r2 = r4.registrationQueue     // Catch: java.lang.Throwable -> L2d
            r2.add(r1)     // Catch: java.lang.Throwable -> L2d
            r4.invokeRegistrationRequest()     // Catch: java.lang.Throwable -> L2d
            monitor-exit(r5)
            goto L44
        L2d:
            r6 = move-exception
            monitor-exit(r5)
            throw r6
        L30:
            if (r0 != 0) goto L38
            com.worklight.wlclient.api.WLErrorCode r0 = com.worklight.wlclient.api.WLErrorCode.AUTHORIZATION_FAILURE
            java.lang.String r0 = getErrorDescription(r6, r0)
        L38:
            java.lang.String r5 = sortScope(r5)
            com.worklight.wlclient.auth.WLAuthQueue r1 = r4.obtainAccessTokenQueue
            r1.releaseQueueOnFailure(r5, r6)
            r4.invokeNextAuthorizationRequest()
        L44:
            com.worklight.common.Logger r5 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "Obtain AccessToken failed with status code: "
            r1.append(r2)
            java.lang.Class r2 = r6.getClass()
            java.lang.String r2 = r2.getSimpleName()
            java.lang.String r3 = "getStatus"
            com.worklight.common.Logger.enter(r2, r3)
            java.lang.Class r2 = r6.getClass()
            java.lang.String r2 = r2.getSimpleName()
            java.lang.String r3 = "getStatus"
            com.worklight.common.Logger.exit(r2, r3)
            int r6 = r6.status
            r1.append(r6)
            java.lang.String r6 = " and error message: "
            r1.append(r6)
            r1.append(r0)
            java.lang.String r6 = r1.toString()
            r5.debug(r6)
            return
    }

    private void onRegistrationFailure(com.worklight.wlclient.api.WLFailResponse r1) {
            r0 = this;
            r0.abortAuthorization(r1)
            return
    }

    private void onRegistrationSuccess(com.worklight.wlclient.api.WLResponse r8) {
            r7 = this;
            java.lang.String r0 = "AnalyticsAPIKey"
            java.lang.String r1 = "AnalyticsURL"
            java.lang.Class r2 = r8.getClass()
            java.lang.String r2 = r2.getSimpleName()
            java.lang.String r3 = "getStatus"
            com.worklight.common.Logger.enter(r2, r3)
            java.lang.Class r2 = r8.getClass()
            java.lang.String r2 = r2.getSimpleName()
            com.worklight.common.Logger.exit(r2, r3)
            int r2 = r8.status
            r3 = 200(0xc8, float:2.8E-43)
            if (r2 != r3) goto L2b
            com.worklight.common.Logger r8 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r0 = "Registration update success"
            r8.debug(r0)
            goto La4
        L2b:
            java.lang.String r2 = "Location"
            java.lang.String r2 = r8.getFirstHeader(r2)
            if (r2 == 0) goto Lc2
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r3 = r3.getServerContext()
            r4 = 3
            java.lang.Object[] r4 = new java.lang.Object[r4]
            r5 = 0
            r4[r5] = r3
            java.lang.String r3 = "registration"
            r5 = 1
            r4[r5] = r3
            r3 = 2
            java.lang.String r6 = "clients"
            r4[r3] = r6
            java.lang.String r3 = "%s/%s/%s"
            java.lang.String r3 = java.lang.String.format(r3, r4)
            boolean r3 = r2.contains(r3)
            if (r3 == 0) goto Lba
            java.lang.String r3 = "/"
            java.lang.String[] r2 = r2.split(r3)
            int r3 = r2.length
            int r3 = r3 - r5
            r2 = r2[r3]
            r7.clientId = r2
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r4 = "com.worklight.oauth.clientid"
            r3.writeSecurityPref(r4, r2)
            org.json.JSONObject r8 = r8.getResponseJSON()     // Catch: org.json.JSONException -> La4
            boolean r2 = r8.has(r1)     // Catch: org.json.JSONException -> La4
            java.lang.String r3 = ""
            if (r2 == 0) goto L7f
            java.lang.Object r1 = r8.get(r1)     // Catch: org.json.JSONException -> La4
            java.lang.String r1 = (java.lang.String) r1     // Catch: org.json.JSONException -> La4
            goto L80
        L7f:
            r1 = r3
        L80:
            boolean r2 = r8.has(r0)     // Catch: org.json.JSONException -> La4
            if (r2 == 0) goto L8d
            java.lang.Object r8 = r8.get(r0)     // Catch: org.json.JSONException -> La4
            java.lang.String r8 = (java.lang.String) r8     // Catch: org.json.JSONException -> La4
            goto L8e
        L8d:
            r8 = r3
        L8e:
            if (r1 == r3) goto L99
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: org.json.JSONException -> La4
            java.lang.String r2 = "com.worklight.oauth.analytics.url"
            r0.writeSecurityPref(r2, r1)     // Catch: org.json.JSONException -> La4
        L99:
            if (r8 == r3) goto La4
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: org.json.JSONException -> La4
            java.lang.String r1 = "com.worklight.oauth.analytics.api.key"
            r0.writeSecurityPref(r1, r8)     // Catch: org.json.JSONException -> La4
        La4:
            com.worklight.common.WLConfig r8 = com.worklight.common.WLConfig.getInstance()
            org.json.JSONObject r8 = r8.getClientData()
            java.lang.String r8 = java.lang.String.valueOf(r8)
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r1 = "com.worklight.oauth.application.data"
            r0.writeSecurityPref(r1, r8)
            return
        Lba:
            java.lang.Exception r8 = new java.lang.Exception
            java.lang.String r0 = "Registration Response failure - Incorrect Location Header"
            r8.<init>(r0)
            throw r8
        Lc2:
            java.lang.Exception r8 = new java.lang.Exception
            java.lang.String r0 = "Registration Response failure - Missing Location Header"
            r8.<init>(r0)
            throw r8
    }

    private void onTokenSuccess(com.worklight.wlclient.api.WLResponse r5) {
            r4 = this;
            org.json.JSONObject r0 = r5.getResponseJSON()
            if (r0 == 0) goto L36
            com.worklight.wlclient.auth.AccessToken r1 = new com.worklight.wlclient.auth.AccessToken
            r1.<init>(r0)
            java.lang.String r2 = r1.scope
            java.lang.String r2 = sortScope(r2)
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r3 = r4.scopeToToken
            r3.put(r2, r1)
            boolean r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.enableRefreshToken
            r3 = 1
            if (r1 != r3) goto L2d
            java.lang.String r1 = "refresh_token"
            java.lang.String r0 = r0.getString(r1)
            java.util.Map<java.lang.String, java.lang.String> r1 = r4.scopeToRefreshToken
            r1.put(r2, r0)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            r1.writeSecurityTokenPref(r2, r0)
        L2d:
            com.worklight.wlclient.auth.WLAuthQueue r0 = r4.obtainAccessTokenQueue
            r0.releaseQueueOnSuccess(r2, r5)
            r4.invokeNextAuthorizationRequest()
            return
        L36:
            org.json.JSONException r5 = new org.json.JSONException
            java.lang.String r0 = "response.getResponseJSON() returned null"
            r5.<init>(r0)
            throw r5
    }

    private void sendLogoutRequest(java.lang.String r9, com.worklight.wlclient.api.WLLogoutResponseListener r10, java.util.Map<java.lang.String, java.lang.Object> r11, java.lang.String r12) {
            r8 = this;
            com.worklight.wlclient.RequestMethod r4 = com.worklight.wlclient.RequestMethod.POST
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$5 r7 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$5
            r7.<init>(r8, r9, r10)
            r3 = 0
            r5 = 0
            r6 = 1
            r0 = r8
            r1 = r12
            r2 = r11
            r0.sendRequest(r1, r2, r3, r4, r5, r6, r7)
            return
    }

    private static void setClientRegisteredData() {
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            org.json.JSONObject r0 = r0.getClientData()
            java.lang.String r0 = java.lang.String.valueOf(r0)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r2 = "com.worklight.oauth.application.data"
            r1.writeSecurityPref(r2, r0)
            return
    }

    private static org.json.JSONObject signRegistrationData(org.json.JSONObject r3) {
            com.worklight.common.security.WLOAuthCertManager r0 = com.worklight.common.security.WLOAuthCertManager.getInstance()
            r0.generateKeyPair()
            com.worklight.common.security.WLOAuthCertManager r0 = com.worklight.common.security.WLOAuthCertManager.getInstance()
            r1 = 0
            java.lang.String r3 = r0.signJWS(r3, r1)
            java.lang.String r0 = "\\."
            java.lang.String[] r3 = r3.split(r0)
            org.json.JSONObject r0 = new org.json.JSONObject
            r0.<init>()
            r1 = 0
            r1 = r3[r1]
            java.lang.String r2 = "header"
            r0.put(r2, r1)
            r1 = 1
            r1 = r3[r1]
            java.lang.String r2 = "payload"
            r0.put(r2, r1)
            r1 = 2
            r3 = r3[r1]
            java.lang.String r1 = "signature"
            r0.put(r1, r3)
            return r0
    }

    public static java.lang.String sortScope(java.lang.String r4) {
            java.lang.String r0 = "RegisteredClient"
            if (r4 != 0) goto L5
            return r0
        L5:
            boolean r0 = r4.contains(r0)
            if (r0 != 0) goto L1c
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r4)
            java.lang.String r4 = " RegisteredClient"
            r0.append(r4)
            java.lang.String r4 = r0.toString()
        L1c:
            java.lang.String r0 = "\\s+"
            java.lang.String[] r4 = r4.split(r0)
            java.util.Arrays.sort(r4)
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            int r1 = r4.length
            r2 = 0
        L2c:
            if (r2 >= r1) goto L3b
            r3 = r4[r2]
            r0.append(r3)
            java.lang.String r3 = " "
            r0.append(r3)
            int r2 = r2 + 1
            goto L2c
        L3b:
            java.lang.String r4 = r0.toString()
            java.lang.String r4 = r4.trim()
            return r4
    }

    public final void cacheScopeByResource(java.lang.String r4, java.lang.String r5, java.lang.String r6) {
            r3 = this;
            java.util.Map<java.lang.String, java.lang.String> r0 = r3.resourceToScopeCache
            r1 = 2
            java.lang.Object[] r1 = new java.lang.Object[r1]
            r2 = 0
            r1[r2] = r4
            r4 = 1
            r1[r4] = r5
            java.lang.String r4 = "%s_%s"
            java.lang.String r4 = java.lang.String.format(r4, r1)
            java.lang.String r5 = sortScope(r6)
            r0.put(r4, r5)
            return
    }

    public final void cacheScopeByResource(okhttp3.Request r2, java.lang.String r3) {
            r1 = this;
            if (r2 == 0) goto Lf
            if (r3 == 0) goto Lf
            okhttp3.HttpUrl r0 = r2.extraCallback
            java.lang.String r0 = r0.toString()
            java.lang.String r2 = r2.f28627d
            r1.cacheScopeByResource(r0, r2, r3)
        Lf:
            return
    }

    public final void clearAccessToken(com.worklight.wlclient.auth.AccessToken r2) {
            r1 = this;
            if (r2 == 0) goto Ld
            java.lang.String r2 = r2.scope
            java.lang.String r2 = sortScope(r2)
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r0 = r1.scopeToToken
            r0.remove(r2)
        Ld:
            return
    }

    public final void clearRegistration() {
            r4 = this;
            java.lang.Object r0 = r4.registrationQueueLock
            monitor-enter(r0)
            r4.clearCachedResourcesAndToken()     // Catch: java.lang.Throwable -> L36
            r1 = 0
            r4.clientId = r1     // Catch: java.lang.Throwable -> L36
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Throwable -> L36
            java.lang.String r3 = "com.worklight.oauth.clientid"
            r2.writeSecurityPref(r3, r1)     // Catch: java.lang.Throwable -> L36
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Throwable -> L36
            java.lang.String r3 = "com.worklight.oauth.application.data"
            r2.writeSecurityPref(r3, r1)     // Catch: java.lang.Throwable -> L36
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Throwable -> L36
            java.lang.String r3 = "com.worklight.oauth.analytics.url"
            r2.writeSecurityPref(r3, r1)     // Catch: java.lang.Throwable -> L36
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Throwable -> L36
            java.lang.String r3 = "com.worklight.oauth.analytics.api.key"
            r2.writeSecurityPref(r3, r1)     // Catch: java.lang.Throwable -> L36
            com.worklight.common.security.WLOAuthCertManager r1 = com.worklight.common.security.WLOAuthCertManager.getInstance()     // Catch: java.lang.Throwable -> L36
            r1.deleteKeyPair()     // Catch: java.lang.Throwable -> L36
            monitor-exit(r0)
            return
        L36:
            r1 = move-exception
            monitor-exit(r0)
            throw r1
    }

    public final void clearScopeByResource(okhttp3.Request r5) {
            r4 = this;
            java.util.Map<java.lang.String, java.lang.String> r0 = r4.resourceToScopeCache
            r1 = 2
            java.lang.Object[] r1 = new java.lang.Object[r1]
            okhttp3.HttpUrl r2 = r5.extraCallback
            java.lang.String r2 = r2.toString()
            r3 = 0
            r1[r3] = r2
            java.lang.String r5 = r5.f28627d
            r2 = 1
            r1[r2] = r5
            java.lang.String r5 = "%s_%s"
            java.lang.String r5 = java.lang.String.format(r5, r1)
            r0.remove(r5)
            return
    }

    public final java.lang.String getAuthorizationScope(java.net.HttpURLConnection r2) {
            r1 = this;
            java.util.Map r2 = r2.getHeaderFields()
            java.lang.String r0 = "WWW-Authenticate"
            java.lang.Object r2 = r2.get(r0)
            java.util.List r2 = (java.util.List) r2
            java.lang.String r2 = r1.getAuthorizationScope(r2)
            return r2
    }

    public java.lang.String getAuthorizationScope(java.util.List r3) {
            r2 = this;
            if (r3 == 0) goto L1d
            int r0 = r3.size()
            r1 = 1
            if (r0 > r1) goto L15
            r0 = 0
            java.lang.Object r3 = r3.get(r0)
            java.lang.String r3 = (java.lang.String) r3
            java.lang.String r3 = getAuthorizationScope(r3)
            return r3
        L15:
            java.lang.Error r3 = new java.lang.Error
            java.lang.String r0 = "Multiple values for 'WWW-Authenticate' header were detected"
            r3.<init>(r0)
            throw r3
        L1d:
            r3 = 0
            return r3
    }

    public final java.lang.String getAuthorizationScope(java.util.Map r2) {
            r1 = this;
            if (r2 == 0) goto L18
            java.lang.String r0 = "WWW-Authenticate"
            java.lang.Object r2 = r2.get(r0)
            boolean r0 = r2 instanceof java.util.List
            if (r0 == 0) goto L18
            java.util.List r2 = (java.util.List) r2
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>(r2)
            java.lang.String r2 = r1.getAuthorizationScope(r0)
            return r2
        L18:
            r2 = 0
            return r2
    }

    public final java.lang.String getAuthorizationScope(okhttp3.Response r2) {
            r1 = this;
            if (r2 == 0) goto Lf
            okhttp3.Headers r2 = r2.value
            java.lang.String r0 = "WWW-Authenticate"
            java.util.List r2 = r2.m4869a(r0)
            java.lang.String r2 = r1.getAuthorizationScope(r2)
            return r2
        Lf:
            r2 = 0
            return r2
    }

    public final java.lang.String getAuthorizationServerRootPath() {
            r1 = this;
            java.net.URL r0 = r1.authorizationServerUrl
            if (r0 == 0) goto L9
            java.lang.String r0 = r0.toString()
            goto L11
        L9:
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r0 = r0.getRootURL()
        L11:
            return r0
    }

    public final java.net.URL getAuthorizationServerRootPathAsURL() {
            r2 = this;
            java.net.URL r0 = r2.authorizationServerUrl     // Catch: java.net.MalformedURLException -> L15
            if (r0 == 0) goto L7
            java.net.URL r0 = r2.authorizationServerUrl     // Catch: java.net.MalformedURLException -> L15
            goto L14
        L7:
            java.net.URL r0 = new java.net.URL     // Catch: java.net.MalformedURLException -> L15
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()     // Catch: java.net.MalformedURLException -> L15
            java.lang.String r1 = r1.getRootURL()     // Catch: java.net.MalformedURLException -> L15
            r0.<init>(r1)     // Catch: java.net.MalformedURLException -> L15
        L14:
            return r0
        L15:
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r1 = "Failed to create URL from server root path"
            r0.debug(r1)
            r0 = 0
            return r0
    }

    public final com.worklight.wlclient.auth.AccessToken getCachedAccessToken(java.lang.String r4) {
            r3 = this;
            java.lang.String r4 = sortScope(r4)
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r0 = r3.scopeToToken
            java.lang.Object r0 = r0.get(r4)
            com.worklight.wlclient.auth.AccessToken r0 = (com.worklight.wlclient.auth.AccessToken) r0
            r1 = 0
            if (r0 != 0) goto L10
            return r1
        L10:
            boolean r2 = r0.isValidToken()
            if (r2 == 0) goto L17
            return r0
        L17:
            java.lang.String r4 = sortScope(r4)
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r0 = r3.scopeToToken
            r0.remove(r4)
            return r1
    }

    public final java.lang.String getClientId() {
            r2 = this;
            java.lang.String r0 = r2.clientId
            if (r0 != 0) goto L10
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r1 = "com.worklight.oauth.clientid"
            java.lang.String r0 = r0.readSecurityPref(r1)
            r2.clientId = r0
        L10:
            java.lang.String r0 = r2.clientId
            return r0
    }

    public java.util.Map<java.lang.String, java.lang.Object> getLogoutParams(java.lang.String r6) {
            r5 = this;
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            com.worklight.wlclient.auth.JWT r1 = new com.worklight.wlclient.auth.JWT
            r1.<init>()
            com.worklight.common.security.WLOAuthCertManager r2 = com.worklight.common.security.WLOAuthCertManager.getInstance()     // Catch: java.lang.Exception -> L29
            org.json.JSONObject r1 = r1.toJson()     // Catch: java.lang.Exception -> L29
            java.lang.String r3 = r5.clientId     // Catch: java.lang.Exception -> L29
            if (r3 != 0) goto L22
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L29
            java.lang.String r4 = "com.worklight.oauth.clientid"
            java.lang.String r3 = r3.readSecurityPref(r4)     // Catch: java.lang.Exception -> L29
            r5.clientId = r3     // Catch: java.lang.Exception -> L29
        L22:
            java.lang.String r3 = r5.clientId     // Catch: java.lang.Exception -> L29
            java.lang.String r1 = r2.signJWS(r1, r3)     // Catch: java.lang.Exception -> L29
            goto L45
        L29:
            r1 = move-exception
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.String r4 = "unable to convert JWT to json"
            r3.append(r4)
            java.lang.String r1 = r1.getMessage()
            r3.append(r1)
            java.lang.String r1 = r3.toString()
            r2.debug(r1)
            r1 = 0
        L45:
            java.lang.String r2 = "security_check"
            r0.put(r2, r6)
            java.lang.String r6 = "client_assertion"
            r0.put(r6, r1)
            java.lang.String r6 = "client_assertion_type"
            java.lang.String r1 = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
            r0.put(r6, r1)
            return r0
    }

    public java.util.HashMap<java.lang.String, java.lang.Object> getPreAuthorizationsParams(java.lang.String r4, org.json.JSONObject r5) {
            r3 = this;
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            java.lang.String r1 = r3.clientId
            if (r1 != 0) goto L15
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r2 = "com.worklight.oauth.clientid"
            java.lang.String r1 = r1.readSecurityPref(r2)
            r3.clientId = r1
        L15:
            java.lang.String r1 = r3.clientId
            java.lang.String r2 = "client_id"
            r0.put(r2, r1)
            if (r4 != 0) goto L20
            java.lang.String r4 = "RegisteredClient"
        L20:
            java.lang.String r1 = "scope"
            r0.put(r1, r4)
            if (r5 == 0) goto L3d
            org.json.JSONObject r1 = new org.json.JSONObject     // Catch: org.json.JSONException -> L36
            r1.<init>()     // Catch: org.json.JSONException -> L36
            java.lang.String r2 = "challengeResponse"
            org.json.JSONObject r4 = r1.put(r4, r5)     // Catch: org.json.JSONException -> L36
            r0.put(r2, r4)     // Catch: org.json.JSONException -> L36
            goto L3d
        L36:
            com.worklight.common.Logger r4 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r5 = "Failed to create JSONObject with credentials"
            r4.debug(r5)
        L3d:
            return r0
    }

    public final java.lang.String getScopeByResource(java.lang.String r4, java.lang.String r5) {
            r3 = this;
            java.util.Map<java.lang.String, java.lang.String> r0 = r3.resourceToScopeCache
            r1 = 2
            java.lang.Object[] r1 = new java.lang.Object[r1]
            r2 = 0
            r1[r2] = r4
            r4 = 1
            r1[r4] = r5
            java.lang.String r4 = "%s_%s"
            java.lang.String r4 = java.lang.String.format(r4, r1)
            java.lang.Object r4 = r0.get(r4)
            java.lang.String r4 = (java.lang.String) r4
            return r4
    }

    public final void invokeAuthorizationRequest(java.lang.String r9, com.worklight.wlclient.api.WLResponseListener r10) {
            r8 = this;
            java.util.HashMap r2 = r8.getAuthorizationsParams(r9)
            r9 = 3
            java.lang.Object[] r9 = new java.lang.Object[r9]
            r0 = 0
            java.lang.String r1 = "az"
            r9[r0] = r1
            r0 = 1
            java.lang.String r1 = "v1"
            r9[r0] = r1
            r0 = 2
            java.lang.String r1 = "authorization"
            r9[r0] = r1
            java.lang.String r0 = "%s/%s/%s"
            java.lang.String r1 = java.lang.String.format(r0, r9)
            com.worklight.wlclient.RequestMethod r4 = com.worklight.wlclient.RequestMethod.GET
            r3 = 0
            r5 = 0
            r6 = 1
            r0 = r8
            r7 = r10
            r0.sendRequest(r1, r2, r3, r4, r5, r6, r7)
            return
    }

    public final void invokeAuthorizationRequestForScope(java.lang.String r2, com.worklight.wlclient.api.WLResponseListener r3) {
            r1 = this;
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$4 r0 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$4
            r0.<init>(r1, r2, r3)
            r1.invokeAuthorizationRequest(r2, r0)
            return
    }

    public final void invokeGetRegistrationDataRequest(com.worklight.wlclient.WLRequestListener r11) {
            r10 = this;
            java.lang.String r0 = r10.clientId     // Catch: java.lang.Exception -> L7f
            if (r0 != 0) goto L10
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L7f
            java.lang.String r1 = "com.worklight.oauth.clientid"
            java.lang.String r0 = r0.readSecurityPref(r1)     // Catch: java.lang.Exception -> L7f
            r10.clientId = r0     // Catch: java.lang.Exception -> L7f
        L10:
            java.lang.String r0 = r10.clientId     // Catch: java.lang.Exception -> L7f
            if (r0 != 0) goto L22
            com.worklight.wlclient.api.WLFailResponse r0 = new com.worklight.wlclient.api.WLFailResponse     // Catch: java.lang.Exception -> L7f
            com.worklight.wlclient.api.WLErrorCode r1 = com.worklight.wlclient.api.WLErrorCode.APPLICATION_NOT_REGISTERED     // Catch: java.lang.Exception -> L7f
            java.lang.String r2 = "application is not registered yet"
            r3 = 0
            r0.<init>(r1, r2, r3)     // Catch: java.lang.Exception -> L7f
            r11.onFailure(r0)     // Catch: java.lang.Exception -> L7f
            return
        L22:
            com.worklight.wlclient.auth.JWT r1 = new com.worklight.wlclient.auth.JWT     // Catch: java.lang.Exception -> L7f
            r1.<init>()     // Catch: java.lang.Exception -> L7f
            com.worklight.common.security.WLOAuthCertManager r2 = com.worklight.common.security.WLOAuthCertManager.getInstance()     // Catch: java.lang.Exception -> L7f
            org.json.JSONObject r1 = r1.toJson()     // Catch: java.lang.Exception -> L7f
            java.lang.String r1 = r2.signJWS(r1, r0)     // Catch: java.lang.Exception -> L7f
            java.util.HashMap r4 = new java.util.HashMap     // Catch: java.lang.Exception -> L7f
            r4.<init>()     // Catch: java.lang.Exception -> L7f
            java.lang.String r2 = "client_assertion"
            r4.put(r2, r1)     // Catch: java.lang.Exception -> L7f
            java.lang.String r1 = "client_assertion_type"
            java.lang.String r2 = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
            r4.put(r1, r2)     // Catch: java.lang.Exception -> L7f
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L7f
            r1.<init>()     // Catch: java.lang.Exception -> L7f
            java.lang.String r2 = "registration"
            java.lang.String r3 = "v1"
            java.lang.String r5 = "self"
            java.lang.String r6 = "%s/%s/%s"
            r7 = 3
            java.lang.Object[] r7 = new java.lang.Object[r7]     // Catch: java.lang.Exception -> L7f
            r8 = 0
            r7[r8] = r2     // Catch: java.lang.Exception -> L7f
            r2 = 1
            r7[r2] = r3     // Catch: java.lang.Exception -> L7f
            r2 = 2
            r7[r2] = r5     // Catch: java.lang.Exception -> L7f
            java.lang.String r2 = java.lang.String.format(r6, r7)     // Catch: java.lang.Exception -> L7f
            r1.append(r2)     // Catch: java.lang.Exception -> L7f
            java.lang.String r2 = "/"
            r1.append(r2)     // Catch: java.lang.Exception -> L7f
            r1.append(r0)     // Catch: java.lang.Exception -> L7f
            java.lang.String r3 = r1.toString()     // Catch: java.lang.Exception -> L7f
            com.worklight.wlclient.RequestMethod r6 = com.worklight.wlclient.RequestMethod.GET     // Catch: java.lang.Exception -> L7f
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$13 r9 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$13     // Catch: java.lang.Exception -> L7f
            r9.<init>(r10, r11)     // Catch: java.lang.Exception -> L7f
            r5 = 0
            r7 = 1
            r8 = 0
            r2 = r10
            r2.sendRequest(r3, r4, r5, r6, r7, r8, r9)     // Catch: java.lang.Exception -> L7f
            return
        L7f:
            r11 = move-exception
            java.lang.Error r0 = new java.lang.Error
            r0.<init>(r11)
            throw r0
    }

    public final void invokeRegistrationRequest(com.worklight.wlclient.WLRequestListener r3) {
            r2 = this;
            java.lang.Object r0 = r2.registrationQueueLock
            monitor-enter(r0)
            java.util.List<com.worklight.wlclient.WLRequestListener> r1 = r2.registrationQueue     // Catch: java.lang.Throwable -> Ld
            r1.add(r3)     // Catch: java.lang.Throwable -> Ld
            r2.invokeRegistrationRequest()     // Catch: java.lang.Throwable -> Ld
            monitor-exit(r0)
            return
        Ld:
            r3 = move-exception
            monitor-exit(r0)
            throw r3
    }

    public final boolean isAuthorizationRequired(java.net.HttpURLConnection r4) {
            r3 = this;
            r0 = 0
            if (r4 != 0) goto L4
            return r0
        L4:
            int r1 = r4.getResponseCode()     // Catch: java.io.IOException -> L27
            r2 = 401(0x191, float:5.62E-43)
            if (r1 == r2) goto L10
            r2 = 403(0x193, float:5.65E-43)
            if (r1 != r2) goto L2e
        L10:
            java.util.Map r4 = r4.getHeaderFields()     // Catch: java.io.IOException -> L27
            java.lang.String r1 = "WWW-Authenticate"
            java.lang.Object r4 = r4.get(r1)     // Catch: java.io.IOException -> L27
            java.util.List r4 = (java.util.List) r4     // Catch: java.io.IOException -> L27
            java.lang.Boolean r4 = isAuthorizationRequired(r4)     // Catch: java.io.IOException -> L27
            if (r4 == 0) goto L2e
            boolean r4 = r4.booleanValue()     // Catch: java.io.IOException -> L27
            return r4
        L27:
            com.worklight.common.Logger r4 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r1 = "Unable to get HttpURLConnection response code"
            r4.debug(r1)
        L2e:
            return r0
    }

    public final boolean isAuthorizationRequired(okhttp3.Response r3) {
            r2 = this;
            int r0 = r3.f28642e
            r1 = 401(0x191, float:5.62E-43)
            if (r0 == r1) goto L12
            r1 = 403(0x193, float:5.65E-43)
            if (r0 == r1) goto L12
            boolean r3 = isMfpConflict(r3)
            if (r3 == 0) goto L25
            r3 = 1
            return r3
        L12:
            okhttp3.Headers r3 = r3.value
            java.lang.String r0 = "WWW-Authenticate"
            java.util.List r3 = r3.m4869a(r0)
            java.lang.Boolean r3 = isAuthorizationRequired(r3)
            if (r3 == 0) goto L25
            boolean r3 = r3.booleanValue()
            return r3
        L25:
            r3 = 0
            return r3
    }

    public final boolean isRegistrationInProgress() {
            r1 = this;
            java.util.List<com.worklight.wlclient.WLRequestListener> r0 = r1.registrationQueue
            boolean r0 = r0.isEmpty()
            r0 = r0 ^ 1
            return r0
    }

    public final void login(java.lang.String r4, org.json.JSONObject r5, com.worklight.wlclient.api.WLLoginResponseListener r6) {
            r3 = this;
            java.lang.Object r0 = r3.authorizationInProgressLock
            monitor-enter(r0)
            boolean r1 = r3.authorizationInProgress     // Catch: java.lang.Throwable -> L33
            if (r1 != 0) goto L24
            com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L33
            java.lang.String r2 = "Set authInProgress from login."
            r1.debug(r2)     // Catch: java.lang.Throwable -> L33
            r1 = 1
            r3.authorizationInProgress = r1     // Catch: java.lang.Throwable -> L33
            boolean r1 = r3.shouldRegister()     // Catch: java.lang.Throwable -> L33
            if (r1 == 0) goto L1b
            r3.loginWithRegistration(r4, r5, r6)     // Catch: java.lang.Throwable -> L33
            goto L31
        L1b:
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12 r1 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$12     // Catch: java.lang.Throwable -> L33
            r1.<init>(r3, r6, r4, r5)     // Catch: java.lang.Throwable -> L33
            r3.invokePreAuthorizationRequest(r4, r5, r1)     // Catch: java.lang.Throwable -> L33
            goto L31
        L24:
            com.worklight.wlclient.api.WLFailResponse r4 = new com.worklight.wlclient.api.WLFailResponse     // Catch: java.lang.Throwable -> L33
            com.worklight.wlclient.api.WLErrorCode r5 = com.worklight.wlclient.api.WLErrorCode.LOGIN_ALREADY_IN_PROCESS     // Catch: java.lang.Throwable -> L33
            java.lang.String r1 = r5.description     // Catch: java.lang.Throwable -> L33
            r2 = 0
            r4.<init>(r5, r1, r2)     // Catch: java.lang.Throwable -> L33
            r6.onFailure(r4)     // Catch: java.lang.Throwable -> L33
        L31:
            monitor-exit(r0)
            return
        L33:
            r4 = move-exception
            monitor-exit(r0)
            throw r4
    }

    public final void logout(java.lang.String r14, com.worklight.wlclient.api.WLLogoutResponseListener r15) {
            r13 = this;
            java.lang.Object r0 = r13.authorizationInProgressLock
            monitor-enter(r0)
            r1 = 0
            if (r14 != 0) goto L19
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L90
            java.lang.String r3 = "Security Check must be non-null"
            r2.debug(r3)     // Catch: java.lang.Throwable -> L90
            com.worklight.wlclient.api.WLFailResponse r2 = new com.worklight.wlclient.api.WLFailResponse     // Catch: java.lang.Throwable -> L90
            com.worklight.wlclient.api.WLErrorCode r3 = com.worklight.wlclient.api.WLErrorCode.AUTHORIZATION_FAILURE     // Catch: java.lang.Throwable -> L90
            java.lang.String r4 = "Security Check must be non-null"
            r2.<init>(r3, r4, r1)     // Catch: java.lang.Throwable -> L90
            r15.onFailure(r2)     // Catch: java.lang.Throwable -> L90
        L19:
            boolean r2 = r13.authorizationInProgress     // Catch: java.lang.Throwable -> L90
            if (r2 != 0) goto L82
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L90
            java.lang.String r3 = "Set authInProgress from logout."
            r2.debug(r3)     // Catch: java.lang.Throwable -> L90
            r2 = 1
            r13.authorizationInProgress = r2     // Catch: java.lang.Throwable -> L90
            java.lang.String r3 = r13.clientId     // Catch: java.lang.Throwable -> L90
            if (r3 != 0) goto L37
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Throwable -> L90
            java.lang.String r4 = "com.worklight.oauth.clientid"
            java.lang.String r3 = r3.readSecurityPref(r4)     // Catch: java.lang.Throwable -> L90
            r13.clientId = r3     // Catch: java.lang.Throwable -> L90
        L37:
            java.lang.String r3 = r13.clientId     // Catch: java.lang.Throwable -> L90
            r4 = 0
            if (r3 == 0) goto L65
            java.util.Map r7 = r13.getLogoutParams(r14)     // Catch: java.lang.Throwable -> L90
            java.lang.String r1 = "preauth"
            java.lang.String r3 = "v1"
            java.lang.String r5 = "logout"
            java.lang.String r6 = "%s/%s/%s"
            r8 = 3
            java.lang.Object[] r8 = new java.lang.Object[r8]     // Catch: java.lang.Throwable -> L90
            r8[r4] = r1     // Catch: java.lang.Throwable -> L90
            r8[r2] = r3     // Catch: java.lang.Throwable -> L90
            r1 = 2
            r8[r1] = r5     // Catch: java.lang.Throwable -> L90
            java.lang.String r6 = java.lang.String.format(r6, r8)     // Catch: java.lang.Throwable -> L90
            r8 = 0
            com.worklight.wlclient.RequestMethod r9 = com.worklight.wlclient.RequestMethod.POST     // Catch: java.lang.Throwable -> L90
            r10 = 0
            r11 = 1
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$5 r12 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$5     // Catch: java.lang.Throwable -> L90
            r12.<init>(r13, r14, r15)     // Catch: java.lang.Throwable -> L90
            r5 = r13
            r5.sendRequest(r6, r7, r8, r9, r10, r11, r12)     // Catch: java.lang.Throwable -> L90
            goto L8e
        L65:
            com.worklight.common.Logger r14 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L90
            java.lang.String r2 = "Cannot logout before client is registered."
            r14.debug(r2)     // Catch: java.lang.Throwable -> L90
            com.worklight.common.Logger r14 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L90
            java.lang.String r2 = "Reset authInProgress from logout."
            r14.debug(r2)     // Catch: java.lang.Throwable -> L90
            r13.authorizationInProgress = r4     // Catch: java.lang.Throwable -> L90
            com.worklight.wlclient.api.WLFailResponse r14 = new com.worklight.wlclient.api.WLFailResponse     // Catch: java.lang.Throwable -> L90
            com.worklight.wlclient.api.WLErrorCode r2 = com.worklight.wlclient.api.WLErrorCode.AUTHORIZATION_FAILURE     // Catch: java.lang.Throwable -> L90
            java.lang.String r3 = "Cannot logout before client is registered."
            r14.<init>(r2, r3, r1)     // Catch: java.lang.Throwable -> L90
            r15.onFailure(r14)     // Catch: java.lang.Throwable -> L90
            goto L8e
        L82:
            com.worklight.wlclient.api.WLFailResponse r14 = new com.worklight.wlclient.api.WLFailResponse     // Catch: java.lang.Throwable -> L90
            com.worklight.wlclient.api.WLErrorCode r2 = com.worklight.wlclient.api.WLErrorCode.LOGOUT_ALREADY_IN_PROCESS     // Catch: java.lang.Throwable -> L90
            java.lang.String r3 = r2.description     // Catch: java.lang.Throwable -> L90
            r14.<init>(r2, r3, r1)     // Catch: java.lang.Throwable -> L90
            r15.onFailure(r14)     // Catch: java.lang.Throwable -> L90
        L8e:
            monitor-exit(r0)
            return
        L90:
            r14 = move-exception
            monitor-exit(r0)
            throw r14
    }

    public final void obtainAccessToken(java.lang.String r5, com.worklight.wlclient.api.WLAccessTokenListener r6) {
            r4 = this;
            com.worklight.common.Logger r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger
            java.lang.String r1 = "obtainAccessToken : entry."
            r0.debug(r1)
            java.lang.Object r0 = r4.authorizationInProgressLock
            monitor-enter(r0)
            com.worklight.wlclient.auth.AccessToken r1 = r4.getCachedAccessToken(r5)     // Catch: java.lang.Throwable -> L69
            if (r1 == 0) goto L1c
            r6.onSuccess(r1)     // Catch: java.lang.Throwable -> L69
            com.worklight.common.Logger r5 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L69
            java.lang.String r6 = "obtainAccessToken : Access Token found."
            r5.debug(r6)     // Catch: java.lang.Throwable -> L69
            monitor-exit(r0)
            return
        L1c:
            java.lang.String r1 = r4.getCachedRefreshToken(r5)     // Catch: java.lang.Throwable -> L69
            boolean r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.enableRefreshToken     // Catch: java.lang.Throwable -> L69
            r3 = 1
            if (r2 != r3) goto L47
            if (r1 == 0) goto L47
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L69
            java.lang.String r3 = "obtainAccessToken : Refresh Token found, call invokeTokenRequest"
            r2.debug(r3)     // Catch: java.lang.Throwable -> L69
            com.worklight.common.Logger r2 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L69
            java.lang.String r3 = "Calling pre-auth with default scope to trigger default app checks"
            r2.debug(r3)     // Catch: java.lang.Throwable -> L69
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$1 r2 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$1     // Catch: java.lang.Throwable -> L69
            r2.<init>(r4, r5, r1, r6)     // Catch: java.lang.Throwable -> L69
            r6 = 0
            r4.invokePreAuthorizationRequest(r5, r6, r2)     // Catch: java.lang.Throwable -> L69
            com.worklight.common.Logger r5 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L69
            java.lang.String r6 = "obtainAccessToken Returning early from obtainToken"
            r5.debug(r6)     // Catch: java.lang.Throwable -> L69
            monitor-exit(r0)
            return
        L47:
            com.worklight.common.Logger r1 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.logger     // Catch: java.lang.Throwable -> L69
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L69
            r2.<init>()     // Catch: java.lang.Throwable -> L69
            java.lang.String r3 = "obtainAccessToken enableRefreshToken="
            r2.append(r3)     // Catch: java.lang.Throwable -> L69
            boolean r3 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.enableRefreshToken     // Catch: java.lang.Throwable -> L69
            r2.append(r3)     // Catch: java.lang.Throwable -> L69
            java.lang.String r2 = r2.toString()     // Catch: java.lang.Throwable -> L69
            r1.debug(r2)     // Catch: java.lang.Throwable -> L69
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$2 r1 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$2     // Catch: java.lang.Throwable -> L69
            r1.<init>(r4, r6, r5)     // Catch: java.lang.Throwable -> L69
            r4.obtainAccessToken(r5, r1)     // Catch: java.lang.Throwable -> L69
            monitor-exit(r0)
            return
        L69:
            r5 = move-exception
            monitor-exit(r0)
            throw r5
    }

    public final void removeTokenByScope(java.lang.String r2) {
            r1 = this;
            java.lang.String r2 = sortScope(r2)
            java.util.Map<java.lang.String, com.worklight.wlclient.auth.AccessToken> r0 = r1.scopeToToken
            r0.remove(r2)
            return
    }

    public void sendRequest(java.lang.String r7, java.util.Map<java.lang.String, java.lang.Object> r8, java.util.HashMap<java.lang.String, java.lang.String> r9, com.worklight.wlclient.RequestMethod r10, boolean r11, boolean r12, com.worklight.wlclient.api.WLResponseListener r13) {
            r6 = this;
            com.worklight.wlclient.api.WLRequestOptions r2 = new com.worklight.wlclient.api.WLRequestOptions
            r2.<init>()
            java.util.Set r9 = r8.keySet()
            java.util.Iterator r9 = r9.iterator()
        Ld:
            boolean r0 = r9.hasNext()
            if (r0 == 0) goto L27
            java.lang.Object r0 = r9.next()
            java.lang.String r0 = (java.lang.String) r0
            java.lang.Object r1 = r8.get(r0)
            java.lang.String r1 = r1.toString()
            java.util.Map<java.lang.String, java.lang.String> r3 = r2.parameters
            r3.put(r0, r1)
            goto Ld
        L27:
            int r8 = r6.timeOut
            if (r8 <= 0) goto L2d
            r2.timeout = r8
        L2d:
            com.worklight.wlclient.AsynchronousRequestSender r8 = com.worklight.wlclient.AsynchronousRequestSender.getInstance()
            java.util.Map<java.lang.String, java.lang.String> r8 = r8.globalHeaders
            if (r8 == 0) goto L5a
            java.util.Set r9 = r8.keySet()
            java.util.Iterator r9 = r9.iterator()
        L3d:
            boolean r0 = r9.hasNext()
            if (r0 == 0) goto L5a
            java.lang.Object r0 = r9.next()
            java.lang.String r0 = (java.lang.String) r0
            java.lang.Object r1 = r8.get(r0)
            java.lang.String r1 = (java.lang.String) r1
            java.util.List<java.lang.String> r3 = r2.okHeaders
            r3.add(r0)
            java.util.List<java.lang.String> r0 = r2.okHeaderValues
            r0.add(r1)
            goto L3d
        L5a:
            r2.isJsonContentType = r11
            r2.isAZRequest = r12
            r2.responseListener = r13
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal$8 r1 = new com.worklight.wlclient.auth.WLAuthorizationManagerInternal$8
            r1.<init>(r6, r13)
            java.lang.String r8 = r6.clientId
            if (r8 != 0) goto L75
            com.worklight.common.WLConfig r8 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r9 = "com.worklight.oauth.clientid"
            java.lang.String r8 = r8.readSecurityPref(r9)
            r6.clientId = r8
        L75:
            java.lang.String r8 = r6.clientId
            if (r8 == 0) goto L8b
            com.worklight.wlclient.WLRequest r8 = new com.worklight.wlclient.WLRequest
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()
            com.worklight.wlclient.api.WLClient r9 = com.worklight.wlclient.api.WLClient.getInstance()
            android.content.Context r4 = r9.context
            r5 = 1
            r0 = r8
            r0.<init>(r1, r2, r3, r4, r5)
            goto L9a
        L8b:
            com.worklight.wlclient.WLClientInstanceRegistrationRequest r8 = new com.worklight.wlclient.WLClientInstanceRegistrationRequest
            com.worklight.common.WLConfig r9 = com.worklight.common.WLConfig.getInstance()
            com.worklight.wlclient.api.WLClient r11 = com.worklight.wlclient.api.WLClient.getInstance()
            android.content.Context r11 = r11.context
            r8.<init>(r1, r2, r9, r11)
        L9a:
            r8.method = r10
            r9 = 1
            r8.makeRequest(r7, r9)
            return
    }

    public final void setAuthorizationServerUrl(java.net.URL r1) {
            r0 = this;
            r0.authorizationServerUrl = r1
            return
    }

    public final void setLoginTimeout(int r2) {
            r1 = this;
            int r2 = r2 * 1000
            r0 = 5000(0x1388, float:7.006E-42)
            if (r2 >= r0) goto L9
            r1.timeOut = r0
            return
        L9:
            r1.timeOut = r2
            return
    }

    public final boolean shouldRegister() {
            r3 = this;
            java.lang.String r0 = r3.clientId
            if (r0 != 0) goto L10
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r1 = "com.worklight.oauth.clientid"
            java.lang.String r0 = r0.readSecurityPref(r1)
            r3.clientId = r0
        L10:
            java.lang.String r0 = r3.clientId
            r1 = 1
            if (r0 != 0) goto L16
            return r1
        L16:
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r2 = "com.worklight.oauth.application.data"
            java.lang.String r0 = r0.readSecurityPref(r2)
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: org.json.JSONException -> L37
            org.json.JSONObject r2 = r2.getClientData()     // Catch: org.json.JSONException -> L37
            java.lang.String r2 = java.lang.String.valueOf(r2)     // Catch: org.json.JSONException -> L37
            if (r0 == 0) goto L36
            boolean r0 = r0.equalsIgnoreCase(r2)
            if (r0 != 0) goto L35
            goto L36
        L35:
            r1 = 0
        L36:
            return r1
        L37:
            java.lang.Error r0 = new java.lang.Error
            java.lang.String r1 = "Could not get current device data"
            r0.<init>(r1)
            throw r0
    }
}

package com.worklight.wlclient.api;

/* loaded from: classes4.dex */
public class WLClient {
    private static final java.lang.String AUTHENTICITY_REALM = "appAuthenticity";
    private static final java.lang.String CHALLENGE_HANDLER_NULL_ERROR = "Cannot register 'null' challenge handler";
    private static final java.lang.String CLOCK_SYNCHRONIZATION = "clockSynchronization";
    private static final java.lang.String HEART_BEAT_ERROR = "WLClient not initialized - cannot send heart beat message before connect";
    private static final java.lang.String INVOKE_PROCEDURE_INIT_ERROR = "invokeProcedure() will not be executed because WLCLient is not initialized, ensure WLCLient.connect function has been called.";
    private static final java.lang.String INVOKE_PROCEDURE_INVALID_INVOCATION_DATA = "Error during invocation of remote procedure, because invocation data can't be null.";
    private static final java.lang.String INVOKE_PROCEDURE_RUN_ERROR = "Error during invocation of remote procedure, because responseListener parameter can't be null.";
    private static final java.lang.String NO_REALM_REGISTER_ERROR = "Application will exit because the challengeHandler parameter for registerChallengeHandler (challengeHandler) has a null handlerName or securityCheck property. Call this API with a valid reference to challenge handler.";
    private static final java.lang.String REGISTRATION_CLIENT_ID = "registration-client-id";
    private static final java.lang.String REMOTE_DISABLE_REALM = "wl_remoteDisableRealm";
    private static final java.lang.String REQ_PATH_WL_TOKEN = "oauth/token";
    public static final java.lang.Object WAIT_LOCK = null;
    public static com.worklight.common.Logger logger;
    private static com.worklight.wlclient.api.WLClient wlClient;
    com.worklight.wlclient.api.WLClient.ActivityListener activityListener;
    private java.lang.String appUserId;
    public java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> chMap;
    public android.content.Context context;
    public int heartbeatInterval;
    private org.json.JSONObject notificationSubscriptionState;
    public java.util.Timer timer;

    /* renamed from: com.worklight.wlclient.api.WLClient$1 */
    /* loaded from: classes4.dex */
    final class C47641 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;
        final /* synthetic */ com.worklight.wlclient.api.WLResponseListener val$rl;
        final /* synthetic */ com.worklight.wlclient.api.WLRequestOptions val$ro;

        C47641(com.worklight.wlclient.api.WLClient r1, com.worklight.wlclient.api.WLRequestOptions r2, com.worklight.wlclient.api.WLResponseListener r3) {
                r0 = this;
                r0.this$0 = r1
                r0.val$ro = r2
                r0.val$rl = r3
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r4) {
                r3 = this;
                com.worklight.wlclient.api.WLRequestOptions r0 = r3.val$ro
                java.lang.Class r1 = r4.getClass()
                java.lang.String r1 = r1.getSimpleName()
                java.lang.String r2 = "setOptions"
                com.worklight.common.Logger.enter(r1, r2)
                r4.requestOptions = r0
                java.lang.Class r0 = r4.getClass()
                java.lang.String r0 = r0.getSimpleName()
                com.worklight.common.Logger.exit(r0, r2)
                com.worklight.wlclient.api.WLResponseListener r0 = r3.val$rl
                r0.onFailure(r4)
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.api.WLRequestOptions r0 = r3.val$ro
                java.lang.Class r1 = r4.getClass()
                java.lang.String r1 = r1.getSimpleName()
                java.lang.String r2 = "setOptions"
                com.worklight.common.Logger.enter(r1, r2)
                r4.requestOptions = r0
                java.lang.Class r0 = r4.getClass()
                java.lang.String r0 = r0.getSimpleName()
                com.worklight.common.Logger.exit(r0, r2)
                com.worklight.wlclient.api.WLResponseListener r0 = r3.val$rl
                r0.onSuccess(r4)
                return
        }
    }

    /* renamed from: com.worklight.wlclient.api.WLClient$2 */
    /* loaded from: classes4.dex */
    public class C47652 implements com.worklight.wlclient.api.WLResponseListener {
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;

        public C47652(com.worklight.wlclient.api.WLClient r1) {
                r0 = this;
                r0.this$0 = r1
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r1) {
                r0 = this;
                return
        }

        @Override // com.worklight.wlclient.api.WLResponseListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r1) {
                r0 = this;
                return
        }
    }

    /* renamed from: com.worklight.wlclient.api.WLClient$3 */
    /* loaded from: classes4.dex */
    public class C47663 implements com.worklight.wlclient.api.WLAccessTokenListener {
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;
        final /* synthetic */ com.worklight.wlclient.api.WLResponseListener val$wlresponseListener;

        public C47663(com.worklight.wlclient.api.WLClient r1, com.worklight.wlclient.api.WLResponseListener r2) {
                r0 = this;
                r0.this$0 = r1
                r0.val$wlresponseListener = r2
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.api.WLAccessTokenListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r2) {
                r1 = this;
                com.worklight.wlclient.api.WLResponseListener r0 = r1.val$wlresponseListener
                r0.onFailure(r2)
                return
        }

        @Override // com.worklight.wlclient.api.WLAccessTokenListener
        public final void onSuccess(com.worklight.wlclient.auth.AccessToken r4) {
                r3 = this;
                com.worklight.wlclient.api.WLResponse r0 = new com.worklight.wlclient.api.WLResponse
                java.lang.String r4 = r4.value
                r1 = 200(0xc8, float:2.8E-43)
                r2 = 0
                r0.<init>(r1, r4, r2)
                com.worklight.wlclient.api.WLResponseListener r4 = r3.val$wlresponseListener
                r4.onSuccess(r0)
                return
        }
    }

    /* loaded from: classes4.dex */
    class ActivityListener implements android.app.Application.ActivityLifecycleCallbacks {
        private int activityCount;
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;

        ActivityListener(com.worklight.wlclient.api.WLClient r1) {
                r0 = this;
                r0.this$0 = r1
                r0.<init>()
                r1 = 0
                r0.activityCount = r1
                return
        }

        public final boolean isAppInBackground() {
                r1 = this;
                int r0 = r1.activityCount
                if (r0 != 0) goto L6
                r0 = 1
                goto L7
            L6:
                r0 = 0
            L7:
                return r0
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivityCreated(android.app.Activity r3, android.os.Bundle r4) {
                r2 = this;
                com.worklight.common.Logger r4 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r0 = new java.lang.StringBuilder
                r0.<init>()
                java.lang.String r1 = "on activity created "
                r0.append(r1)
                java.lang.Class r3 = r3.getClass()
                java.lang.String r3 = r3.getName()
                r0.append(r3)
                java.lang.String r3 = r0.toString()
                r4.debug(r3)
                return
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivityDestroyed(android.app.Activity r4) {
                r3 = this;
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "on activity destroyed "
                r1.append(r2)
                java.lang.Class r4 = r4.getClass()
                java.lang.String r4 = r4.getName()
                r1.append(r4)
                java.lang.String r4 = r1.toString()
                r0.debug(r4)
                return
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivityPaused(android.app.Activity r4) {
                r3 = this;
                int r0 = r3.activityCount
                int r0 = r0 + (-1)
                r3.activityCount = r0
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "on activity paused "
                r1.append(r2)
                java.lang.Class r4 = r4.getClass()
                java.lang.String r4 = r4.getName()
                r1.append(r4)
                java.lang.String r4 = " . activity count = "
                r1.append(r4)
                int r4 = r3.activityCount
                r1.append(r4)
                java.lang.String r4 = r1.toString()
                r0.debug(r4)
                return
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivityResumed(android.app.Activity r4) {
                r3 = this;
                int r0 = r3.activityCount
                int r0 = r0 + 1
                r3.activityCount = r0
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "on activity resumed "
                r1.append(r2)
                java.lang.Class r4 = r4.getClass()
                java.lang.String r4 = r4.getName()
                r1.append(r4)
                java.lang.String r4 = " . activity count = "
                r1.append(r4)
                int r4 = r3.activityCount
                r1.append(r4)
                java.lang.String r4 = r1.toString()
                r0.debug(r4)
                return
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivitySaveInstanceState(android.app.Activity r3, android.os.Bundle r4) {
                r2 = this;
                com.worklight.common.Logger r4 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r0 = new java.lang.StringBuilder
                r0.<init>()
                java.lang.String r1 = "on activity save instance state "
                r0.append(r1)
                java.lang.Class r3 = r3.getClass()
                java.lang.String r3 = r3.getName()
                r0.append(r3)
                java.lang.String r3 = r0.toString()
                r4.debug(r3)
                return
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivityStarted(android.app.Activity r4) {
                r3 = this;
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "on activity started "
                r1.append(r2)
                java.lang.Class r4 = r4.getClass()
                java.lang.String r4 = r4.getName()
                r1.append(r4)
                java.lang.String r4 = r1.toString()
                r0.debug(r4)
                return
        }

        @Override // android.app.Application.ActivityLifecycleCallbacks
        public void onActivityStopped(android.app.Activity r4) {
                r3 = this;
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "on activity stopped "
                r1.append(r2)
                java.lang.Class r4 = r4.getClass()
                java.lang.String r4 = r4.getName()
                r1.append(r4)
                java.lang.String r4 = r1.toString()
                r0.debug(r4)
                return
        }
    }

    /* loaded from: classes4.dex */
    public class HeartBeatTask extends java.util.TimerTask {
        public static final java.lang.String CLIENT_ASSERTION = "client_assertion";
        public static final java.lang.String CLIENT_ASSERTION_TYPE = "client_assertion_type";
        public static final java.lang.String PARAM_CLIENT_ASSERTION_TYPE_VALUE = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer";
        private android.content.Context context;
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;

        public HeartBeatTask(com.worklight.wlclient.api.WLClient r1, android.content.Context r2) {
                r0 = this;
                r0.this$0 = r1
                r0.<init>()
                r1 = 0
                r0.context = r1
                r0.context = r2
                return
        }

        @Override // java.util.TimerTask, java.lang.Runnable
        public final void run() {
                r5 = this;
                com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.getInstance()
                java.lang.String r1 = r0.clientId
                if (r1 != 0) goto L14
                com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
                java.lang.String r2 = "com.worklight.oauth.clientid"
                java.lang.String r1 = r1.readSecurityPref(r2)
                r0.clientId = r1
            L14:
                java.lang.String r0 = r0.clientId
                boolean r1 = com.worklight.wlclient.api.WLClient.isApplicationSentToBackground()
                if (r1 != 0) goto L6c
                if (r0 == 0) goto L6c
                com.worklight.wlclient.api.WLRequestOptions r1 = new com.worklight.wlclient.api.WLRequestOptions
                r1.<init>()
                com.worklight.wlclient.auth.JWT r2 = new com.worklight.wlclient.auth.JWT     // Catch: java.lang.Exception -> L3c
                r2.<init>()     // Catch: java.lang.Exception -> L3c
                com.worklight.common.security.WLOAuthCertManager r3 = com.worklight.common.security.WLOAuthCertManager.getInstance()     // Catch: java.lang.Exception -> L3c
                org.json.JSONObject r2 = r2.toJson()     // Catch: java.lang.Exception -> L3c
                java.lang.String r0 = r3.signJWS(r2, r0)     // Catch: java.lang.Exception -> L3c
                java.lang.String r2 = "client_assertion"
                java.util.Map<java.lang.String, java.lang.String> r3 = r1.parameters     // Catch: java.lang.Exception -> L3c
                r3.put(r2, r0)     // Catch: java.lang.Exception -> L3c
                goto L45
            L3c:
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.String r2 = "unable to convert JWT to json"
                r0.debug(r2)
            L45:
                java.util.Map<java.lang.String, java.lang.String> r0 = r1.parameters
                java.lang.String r2 = "client_assertion_type"
                java.lang.String r3 = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
                r0.put(r2, r3)
                com.worklight.wlclient.api.WLClient$HeartbeatListener r0 = new com.worklight.wlclient.api.WLClient$HeartbeatListener
                com.worklight.wlclient.api.WLClient r2 = r5.this$0
                r0.<init>(r2)
                com.worklight.wlclient.api.WLClient r2 = com.worklight.wlclient.api.WLClient.getInstance()
                if (r2 == 0) goto L6c
                com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()
                com.worklight.wlclient.WLRequest r4 = new com.worklight.wlclient.WLRequest
                android.content.Context r2 = r2.context
                r4.<init>(r0, r1, r3, r2)
                r0 = 1
                java.lang.String r1 = "preauth/v1/heartbeat"
                r4.makeRequest(r1, r0)
            L6c:
                return
        }
    }

    /* loaded from: classes4.dex */
    class HeartbeatListener implements com.worklight.wlclient.WLRequestListener {
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;

        HeartbeatListener(com.worklight.wlclient.api.WLClient r1) {
                r0 = this;
                r0.this$0 = r1
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r4) {
                r3 = this;
                com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.StringBuilder r1 = new java.lang.StringBuilder
                r1.<init>()
                java.lang.String r2 = "Failed to send heartbeat. Response:  "
                r1.append(r2)
                java.lang.String r4 = r4.toString()
                r1.append(r4)
                java.lang.String r4 = r1.toString()
                r0.debug(r4)
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r2) {
                r1 = this;
                com.worklight.common.Logger r2 = com.worklight.wlclient.api.WLClient.access$000()
                java.lang.String r0 = "Heartbeat sent successfully"
                r2.debug(r0)
                return
        }
    }

    /* loaded from: classes4.dex */
    class InvokeProcedureRequestListener implements com.worklight.wlclient.WLRequestListener {
        final /* synthetic */ com.worklight.wlclient.api.WLClient this$0;

        private InvokeProcedureRequestListener(com.worklight.wlclient.api.WLClient r1) {
                r0 = this;
                r0.this$0 = r1
                r0.<init>()
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onFailure(com.worklight.wlclient.api.WLFailResponse r4) {
                r3 = this;
                com.worklight.wlclient.api.WLProcedureInvocationFailResponse r0 = new com.worklight.wlclient.api.WLProcedureInvocationFailResponse
                r0.<init>(r4)
                java.lang.Class r1 = r4.getClass()
                java.lang.String r1 = r1.getSimpleName()
                java.lang.String r2 = "getOptions"
                com.worklight.common.Logger.enter(r1, r2)
                java.lang.Class r1 = r4.getClass()
                java.lang.String r1 = r1.getSimpleName()
                com.worklight.common.Logger.exit(r1, r2)
                com.worklight.wlclient.api.WLRequestOptions r4 = r4.requestOptions
                com.worklight.wlclient.api.WLResponseListener r4 = r4.responseListener
                r4.onFailure(r0)
                return
        }

        @Override // com.worklight.wlclient.WLRequestListener
        public final void onSuccess(com.worklight.wlclient.api.WLResponse r4) {
                r3 = this;
                com.worklight.wlclient.api.WLProcedureInvocationResult r0 = new com.worklight.wlclient.api.WLProcedureInvocationResult
                r0.<init>(r4)
                boolean r1 = r0.isSuccessful()
                java.lang.String r2 = "getOptions"
                if (r1 == 0) goto L2b
                java.lang.Class r4 = r0.getClass()
                java.lang.String r4 = r4.getSimpleName()
                com.worklight.common.Logger.enter(r4, r2)
                java.lang.Class r4 = r0.getClass()
                java.lang.String r4 = r4.getSimpleName()
                com.worklight.common.Logger.exit(r4, r2)
                com.worklight.wlclient.api.WLRequestOptions r4 = r0.requestOptions
                com.worklight.wlclient.api.WLResponseListener r4 = r4.responseListener
                r4.onSuccess(r0)
                return
            L2b:
                com.worklight.wlclient.api.WLProcedureInvocationFailResponse r0 = new com.worklight.wlclient.api.WLProcedureInvocationFailResponse
                r0.<init>(r4)
                java.lang.Class r4 = r0.getClass()
                java.lang.String r4 = r4.getSimpleName()
                com.worklight.common.Logger.enter(r4, r2)
                java.lang.Class r4 = r0.getClass()
                java.lang.String r4 = r4.getSimpleName()
                com.worklight.common.Logger.exit(r4, r2)
                com.worklight.wlclient.api.WLRequestOptions r4 = r0.requestOptions
                com.worklight.wlclient.api.WLResponseListener r4 = r4.responseListener
                r4.onFailure(r0)
                return
        }
    }

    static {
            java.lang.Object r0 = new java.lang.Object
            r0.<init>()
            com.worklight.wlclient.api.WLClient.WAIT_LOCK = r0
            java.lang.Class<com.worklight.wlclient.api.WLClient> r0 = com.worklight.wlclient.api.WLClient.class
            java.lang.String r0 = r0.getSimpleName()
            com.worklight.common.Logger r0 = com.worklight.common.Logger.getInstance(r0)
            com.worklight.wlclient.api.WLClient.logger = r0
            r0 = 0
            com.worklight.wlclient.api.WLClient.wlClient = r0
            return
    }

    private WLClient(android.content.Context r3) {
            r2 = this;
            r2.<init>()
            r0 = 420(0x1a4, float:5.89E-43)
            r2.heartbeatInterval = r0
            r0 = 0
            r2.activityListener = r0
            r2.notificationSubscriptionState = r0
            r2.context = r3
            java.util.Hashtable r0 = new java.util.Hashtable
            r0.<init>()
            r2.chMap = r0
            com.worklight.wlclient.challengehandler.RemoteDisableChallengeHandler r0 = new com.worklight.wlclient.challengehandler.RemoteDisableChallengeHandler
            java.lang.String r1 = "wl_remoteDisableRealm"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            com.worklight.wlclient.challengehandler.AuthenticityChallengeHandler r0 = new com.worklight.wlclient.challengehandler.AuthenticityChallengeHandler
            java.lang.String r1 = "appAuthenticity"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            com.worklight.wlclient.challengehandler.RegistrationClientIdChallengeHandler r0 = new com.worklight.wlclient.challengehandler.RegistrationClientIdChallengeHandler
            java.lang.String r1 = "registration-client-id"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            com.worklight.wlclient.auth.ClockSyncChallengeHandler r0 = new com.worklight.wlclient.auth.ClockSyncChallengeHandler
            java.lang.String r1 = "clockSynchronization"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 14
            if (r0 < r1) goto L53
            android.content.Context r3 = r3.getApplicationContext()
            android.app.Application r3 = (android.app.Application) r3
            com.worklight.wlclient.api.WLClient$ActivityListener r0 = new com.worklight.wlclient.api.WLClient$ActivityListener
            r0.<init>(r2)
            r2.activityListener = r0
            r3.registerActivityLifecycleCallbacks(r0)
        L53:
            return
    }

    static /* synthetic */ com.worklight.common.Logger access$000() {
            com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.logger
            return r0
    }

    private static void addGlobalHeader(java.lang.String r1, java.lang.String r2) {
            com.worklight.wlclient.AsynchronousRequestSender r0 = com.worklight.wlclient.AsynchronousRequestSender.getInstance()
            java.util.Map<java.lang.String, java.lang.String> r0 = r0.globalHeaders
            r0.put(r1, r2)
            return
    }

    private void connect$5cf0da9b(com.worklight.wlclient.api.WLResponseListener r2) {
            r1 = this;
            if (r2 != 0) goto L7
            com.worklight.wlclient.api.WLClient$2 r2 = new com.worklight.wlclient.api.WLClient$2
            r2.<init>(r1)
        L7:
            com.worklight.wlclient.api.WLAuthorizationManager.getInstance()
            com.worklight.wlclient.api.WLClient$3 r0 = new com.worklight.wlclient.api.WLClient$3
            r0.<init>(r1, r2)
            java.lang.String r2 = ""
            com.worklight.wlclient.api.WLAuthorizationManager.obtainAccessToken(r2, r0)
            return
    }

    private static java.lang.String convertParametersToString(java.lang.Object[] r4) {
            if (r4 == 0) goto L48
            int r0 = r4.length
            if (r0 == 0) goto L48
            r0 = 0
            java.lang.String r1 = "["
        L8:
            int r2 = r4.length
            int r2 = r2 + (-1)
            java.lang.String r3 = "\""
            if (r0 >= r2) goto L2b
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r1)
            r2.append(r3)
            r1 = r4[r0]
            r2.append(r1)
            java.lang.String r1 = "\","
            r2.append(r1)
            java.lang.String r1 = r2.toString()
            int r0 = r0 + 1
            goto L8
        L2b:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r1)
            r0.append(r3)
            int r1 = r4.length
            int r1 = r1 + (-1)
            r4 = r4[r1]
            r0.append(r4)
            java.lang.String r4 = "\"]"
            r0.append(r4)
            java.lang.String r4 = r0.toString()
            return r4
        L48:
            java.lang.String r4 = "[]"
            return r4
    }

    public static com.worklight.wlclient.api.WLClient createInstance(android.content.Context r3) {
            com.worklight.wlclient.api.WLClient r0 = com.worklight.wlclient.api.WLClient.wlClient
            if (r0 == 0) goto Le
            com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.logger
            java.lang.String r1 = "WLClient has already been created."
            r0.debug(r1)
            r0 = 0
            com.worklight.wlclient.api.WLClient.wlClient = r0
        Le:
            com.worklight.wlclient.api.WLClient r0 = new com.worklight.wlclient.api.WLClient
            r0.<init>(r3)
            com.worklight.wlclient.api.WLClient.wlClient = r0
            com.worklight.common.WLConfig.createInstance(r3)
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r1 = "legacy_http"
            java.lang.String r2 = "false"
            r0.writeWLPref(r1, r2)
            com.worklight.wlclient.HttpClientManager.createInstance(r3)
            com.worklight.nativeandroid.common.WLUtils.m8260a()
            android.content.Context r3 = r3.getApplicationContext()
            android.app.Application r3 = (android.app.Application) r3
            com.worklight.common.WLAnalytics.init(r3)
            com.worklight.wlclient.api.WLClient r3 = com.worklight.wlclient.api.WLClient.wlClient
            return r3
    }

    private java.lang.String getAppUserId() {
            r1 = this;
            java.lang.String r0 = r1.appUserId
            return r0
    }

    private static java.security.cert.Certificate getCertificateFromStream(java.io.InputStream r2) {
            r0 = 0
            java.lang.String r1 = "X.509"
            java.security.cert.CertificateFactory r1 = java.security.cert.CertificateFactory.getInstance(r1)     // Catch: java.security.cert.CertificateException -> Lf
            java.security.cert.Certificate r2 = r1.generateCertificate(r2)     // Catch: java.security.cert.CertificateException -> Lf
            if (r2 == 0) goto Le
            return r2
        Le:
            return r0
        Lf:
            com.worklight.wlclient.HttpClientManager r2 = com.worklight.wlclient.HttpClientManager.getInstance()
            r2.pinTrustedCertificatePublicKey(r0)
            java.lang.IllegalArgumentException r2 = new java.lang.IllegalArgumentException
            r0 = 0
            java.lang.Object[] r0 = new java.lang.Object[r0]
            java.lang.String r1 = "The Certificate File is not in valid format. Make sure you’re supplying certificate in a DER format"
            java.lang.String r0 = java.lang.String.format(r1, r0)
            r2.<init>(r0)
            throw r2
    }

    public static java.net.CookieStore getCookieStore() {
            com.worklight.wlclient.HttpClientManager r0 = com.worklight.wlclient.HttpClientManager.getInstance()
            okhttp3.OkHttpClient r1 = r0.httpClient
            if (r1 != 0) goto Lf
            okhttp3.OkHttpClient$Builder r0 = r0.builder
            okhttp3.OkHttpClient r1 = new okhttp3.OkHttpClient
            r1.<init>(r0)
        Lf:
            okhttp3.CookieJar r0 = r1.onMessageChannelReady
            java.net.CookieManager r0 = (java.net.CookieManager) r0
            java.net.CookieStore r0 = r0.getCookieStore()
            return r0
    }

    private static void getDeviceDisplayName(com.worklight.wlclient.api.DeviceDisplayNameListener r1) {
            com.worklight.common.security.WLDeviceAuthManager r0 = com.worklight.common.security.WLDeviceAuthManager.getInstance()
            r0.getDeviceDisplayName(r1)
            return
    }

    private static java.util.Map<java.lang.String, java.lang.String> getGlobalHeaders() {
            com.worklight.wlclient.AsynchronousRequestSender r0 = com.worklight.wlclient.AsynchronousRequestSender.getInstance()
            java.util.Map<java.lang.String, java.lang.String> r0 = r0.globalHeaders
            return r0
    }

    public static com.worklight.wlclient.api.WLClient getInstance() {
            com.worklight.wlclient.api.WLClient r0 = com.worklight.wlclient.api.WLClient.wlClient
            if (r0 == 0) goto L5
            return r0
        L5:
            java.lang.RuntimeException r0 = new java.lang.RuntimeException
            java.lang.String r1 = "WLClient object has not been created. You must call WLClient.createInstance first."
            r0.<init>(r1)
            throw r0
    }

    public static com.worklight.wlclient.cookie.ClearableCookieJar getPersistentCookies() {
            com.worklight.wlclient.HttpClientManager r0 = com.worklight.wlclient.HttpClientManager.getInstance()
            okhttp3.OkHttpClient r1 = r0.httpClient
            if (r1 != 0) goto Lf
            okhttp3.OkHttpClient$Builder r0 = r0.builder
            okhttp3.OkHttpClient r1 = new okhttp3.OkHttpClient
            r1.<init>(r0)
        Lf:
            okhttp3.CookieJar r0 = r1.onMessageChannelReady
            com.worklight.wlclient.cookie.ClearableCookieJar r0 = (com.worklight.wlclient.cookie.ClearableCookieJar) r0
            return r0
    }

    public static java.net.URL getServerUrl() {
            java.net.URL r0 = new java.net.URL     // Catch: java.net.MalformedURLException -> Le
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()     // Catch: java.net.MalformedURLException -> Le
            java.lang.String r1 = r1.getRootURL()     // Catch: java.net.MalformedURLException -> Le
            r0.<init>(r1)     // Catch: java.net.MalformedURLException -> Le
            return r0
        Le:
            java.lang.RuntimeException r0 = new java.lang.RuntimeException
            java.lang.String r1 = "Invalid server url"
            r0.<init>(r1)
            throw r0
    }

    private static java.lang.String getWLServerURL() {
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r0 = r0.getServerContext()
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            java.net.URL r1 = r1.getAppURL()
            java.lang.String r1 = r1.getHost()
            if (r0 == 0) goto L30
            java.lang.String r2 = r0.trim()
            int r2 = r2.length()
            r3 = 1
            if (r2 <= r3) goto L30
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            r2.append(r1)
            r2.append(r0)
            java.lang.String r1 = r2.toString()
        L30:
            return r1
    }

    private java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> getchMap() {
            r1 = this;
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r0 = r1.chMap
            return r0
    }

    private void invokeProcedure(com.worklight.wlclient.api.WLProcedureInvocationData r9, com.worklight.wlclient.api.WLResponseListener r10) {
            r8 = this;
            if (r9 == 0) goto Le5
            if (r10 == 0) goto Ldd
            com.worklight.wlclient.api.WLRequestOptions r0 = new com.worklight.wlclient.api.WLRequestOptions
            r0.<init>()
            r0.responseListener = r10
            java.net.URI r1 = new java.net.URI     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.net.URISyntaxException -> Ld6
            r2.<init>()     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = "/adapters/"
            r2.append(r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = r9.adapter     // Catch: java.net.URISyntaxException -> Ld6
            r2.append(r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = "/"
            r2.append(r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = r9.procedure     // Catch: java.net.URISyntaxException -> Ld6
            r2.append(r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = r2.toString()     // Catch: java.net.URISyntaxException -> Ld6
            r1.<init>(r2)     // Catch: java.net.URISyntaxException -> Ld6
            com.worklight.wlclient.api.WLResourceRequest r2 = new com.worklight.wlclient.api.WLResourceRequest     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = "GET"
            int r4 = r0.timeout     // Catch: java.net.URISyntaxException -> Ld6
            r2.<init>(r1, r3, r4)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r1 = "params"
            java.lang.Object[] r9 = r9.parameters     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r9 = convertParametersToString(r9)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.lang.String> r3 = r0.parameters     // Catch: java.net.URISyntaxException -> Ld6
            r3.put(r1, r9)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.lang.String> r9 = r0.parameters     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Set r9 = r9.keySet()     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Iterator r9 = r9.iterator()     // Catch: java.net.URISyntaxException -> Ld6
        L4d:
            boolean r1 = r9.hasNext()     // Catch: java.net.URISyntaxException -> Ld6
            if (r1 == 0) goto L6f
            java.lang.Object r1 = r9.next()     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r1 = (java.lang.String) r1     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.lang.String> r3 = r0.parameters     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r3 = r3.get(r1)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = (java.lang.String) r3     // Catch: java.net.URISyntaxException -> Ld6
            java.util.LinkedList r4 = new java.util.LinkedList     // Catch: java.net.URISyntaxException -> Ld6
            r4.<init>()     // Catch: java.net.URISyntaxException -> Ld6
            r4.add(r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.util.List<java.lang.String>> r3 = r2.queryParameters     // Catch: java.net.URISyntaxException -> Ld6
            r3.put(r1, r4)     // Catch: java.net.URISyntaxException -> Ld6
            goto L4d
        L6f:
            android.util.Pair r9 = new android.util.Pair     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r1 = r0.okHeaders     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r3 = r0.okHeaderValues     // Catch: java.net.URISyntaxException -> Ld6
            r9.<init>(r1, r3)     // Catch: java.net.URISyntaxException -> Ld6
            r1 = 0
        L79:
            java.lang.Object r3 = r9.first     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List r3 = (java.util.List) r3     // Catch: java.net.URISyntaxException -> Ld6
            int r3 = r3.size()     // Catch: java.net.URISyntaxException -> Ld6
            if (r1 >= r3) goto Lcd
            java.lang.Object r3 = r9.first     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List r3 = (java.util.List) r3     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r3 = r3.get(r1)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = (java.lang.String) r3     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r4 = r9.second     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List r4 = (java.util.List) r4     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r4 = r4.get(r1)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r4 = (java.lang.String) r4     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Request r5 = r2.okRequest     // Catch: java.net.URISyntaxException -> Ld6
            if (r5 == 0) goto Lca
            okhttp3.Request$Builder r6 = new okhttp3.Request$Builder     // Catch: java.net.URISyntaxException -> Ld6
            r6.<init>(r5)     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Headers$Builder r5 = r6.f28631d     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Headers.m4868c(r3)     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Headers.$r8$backportedMethods$utility$Double$1$hashCode(r4, r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r7 = r5.f28586a     // Catch: java.net.URISyntaxException -> Ld6
            r7.add(r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r3 = r5.f28586a     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r4 = r4.trim()     // Catch: java.net.URISyntaxException -> Ld6
            r3.add(r4)     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.HttpUrl r3 = r6.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.net.URISyntaxException -> Ld6
            if (r3 == 0) goto Lc2
            okhttp3.Request r3 = new okhttp3.Request     // Catch: java.net.URISyntaxException -> Ld6
            r3.<init>(r6)     // Catch: java.net.URISyntaxException -> Ld6
            r2.okRequest = r3     // Catch: java.net.URISyntaxException -> Ld6
            goto Lca
        Lc2:
            java.lang.IllegalStateException r9 = new java.lang.IllegalStateException     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r10 = "url == null"
            r9.<init>(r10)     // Catch: java.net.URISyntaxException -> Ld6
            throw r9     // Catch: java.net.URISyntaxException -> Ld6
        Lca:
            int r1 = r1 + 1
            goto L79
        Lcd:
            com.worklight.wlclient.api.WLClient$1 r9 = new com.worklight.wlclient.api.WLClient$1     // Catch: java.net.URISyntaxException -> Ld6
            r9.<init>(r8, r0, r10)     // Catch: java.net.URISyntaxException -> Ld6
            r2.send(r9)     // Catch: java.net.URISyntaxException -> Ld6
            return
        Ld6:
            r9 = move-exception
            java.lang.RuntimeException r10 = new java.lang.RuntimeException
            r10.<init>(r9)
            throw r10
        Ldd:
            java.lang.IllegalArgumentException r9 = new java.lang.IllegalArgumentException
            java.lang.String r10 = "Error during invocation of remote procedure, because responseListener parameter can't be null."
            r9.<init>(r10)
            throw r9
        Le5:
            java.lang.IllegalArgumentException r9 = new java.lang.IllegalArgumentException
            java.lang.String r10 = "Error during invocation of remote procedure, because invocation data can't be null."
            r9.<init>(r10)
            goto Lee
        Led:
            throw r9
        Lee:
            goto Led
    }

    private void invokeProcedure(com.worklight.wlclient.api.WLProcedureInvocationData r8, com.worklight.wlclient.api.WLResponseListener r9, com.worklight.wlclient.api.WLRequestOptions r10) {
            r7 = this;
            if (r8 == 0) goto Le5
            if (r9 == 0) goto Ldd
            com.worklight.wlclient.api.WLRequestOptions r10 = new com.worklight.wlclient.api.WLRequestOptions
            r10.<init>()
            r10.responseListener = r9
            java.net.URI r0 = new java.net.URI     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.net.URISyntaxException -> Ld6
            r1.<init>()     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = "/adapters/"
            r1.append(r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = r8.adapter     // Catch: java.net.URISyntaxException -> Ld6
            r1.append(r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = "/"
            r1.append(r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = r8.procedure     // Catch: java.net.URISyntaxException -> Ld6
            r1.append(r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r1 = r1.toString()     // Catch: java.net.URISyntaxException -> Ld6
            r0.<init>(r1)     // Catch: java.net.URISyntaxException -> Ld6
            com.worklight.wlclient.api.WLResourceRequest r1 = new com.worklight.wlclient.api.WLResourceRequest     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = "GET"
            int r3 = r10.timeout     // Catch: java.net.URISyntaxException -> Ld6
            r1.<init>(r0, r2, r3)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r0 = "params"
            java.lang.Object[] r8 = r8.parameters     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r8 = convertParametersToString(r8)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.lang.String> r2 = r10.parameters     // Catch: java.net.URISyntaxException -> Ld6
            r2.put(r0, r8)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.lang.String> r8 = r10.parameters     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Set r8 = r8.keySet()     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Iterator r8 = r8.iterator()     // Catch: java.net.URISyntaxException -> Ld6
        L4d:
            boolean r0 = r8.hasNext()     // Catch: java.net.URISyntaxException -> Ld6
            if (r0 == 0) goto L6f
            java.lang.Object r0 = r8.next()     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r0 = (java.lang.String) r0     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.lang.String> r2 = r10.parameters     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r2 = r2.get(r0)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = (java.lang.String) r2     // Catch: java.net.URISyntaxException -> Ld6
            java.util.LinkedList r3 = new java.util.LinkedList     // Catch: java.net.URISyntaxException -> Ld6
            r3.<init>()     // Catch: java.net.URISyntaxException -> Ld6
            r3.add(r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.Map<java.lang.String, java.util.List<java.lang.String>> r2 = r1.queryParameters     // Catch: java.net.URISyntaxException -> Ld6
            r2.put(r0, r3)     // Catch: java.net.URISyntaxException -> Ld6
            goto L4d
        L6f:
            android.util.Pair r8 = new android.util.Pair     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r0 = r10.okHeaders     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r2 = r10.okHeaderValues     // Catch: java.net.URISyntaxException -> Ld6
            r8.<init>(r0, r2)     // Catch: java.net.URISyntaxException -> Ld6
            r0 = 0
        L79:
            java.lang.Object r2 = r8.first     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List r2 = (java.util.List) r2     // Catch: java.net.URISyntaxException -> Ld6
            int r2 = r2.size()     // Catch: java.net.URISyntaxException -> Ld6
            if (r0 >= r2) goto Lcd
            java.lang.Object r2 = r8.first     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List r2 = (java.util.List) r2     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r2 = r2.get(r0)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r2 = (java.lang.String) r2     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r3 = r8.second     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List r3 = (java.util.List) r3     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.Object r3 = r3.get(r0)     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = (java.lang.String) r3     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Request r4 = r1.okRequest     // Catch: java.net.URISyntaxException -> Ld6
            if (r4 == 0) goto Lca
            okhttp3.Request$Builder r5 = new okhttp3.Request$Builder     // Catch: java.net.URISyntaxException -> Ld6
            r5.<init>(r4)     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Headers$Builder r4 = r5.f28631d     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Headers.m4868c(r2)     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.Headers.$r8$backportedMethods$utility$Double$1$hashCode(r3, r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r6 = r4.f28586a     // Catch: java.net.URISyntaxException -> Ld6
            r6.add(r2)     // Catch: java.net.URISyntaxException -> Ld6
            java.util.List<java.lang.String> r2 = r4.f28586a     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r3 = r3.trim()     // Catch: java.net.URISyntaxException -> Ld6
            r2.add(r3)     // Catch: java.net.URISyntaxException -> Ld6
            okhttp3.HttpUrl r2 = r5.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.net.URISyntaxException -> Ld6
            if (r2 == 0) goto Lc2
            okhttp3.Request r2 = new okhttp3.Request     // Catch: java.net.URISyntaxException -> Ld6
            r2.<init>(r5)     // Catch: java.net.URISyntaxException -> Ld6
            r1.okRequest = r2     // Catch: java.net.URISyntaxException -> Ld6
            goto Lca
        Lc2:
            java.lang.IllegalStateException r8 = new java.lang.IllegalStateException     // Catch: java.net.URISyntaxException -> Ld6
            java.lang.String r9 = "url == null"
            r8.<init>(r9)     // Catch: java.net.URISyntaxException -> Ld6
            throw r8     // Catch: java.net.URISyntaxException -> Ld6
        Lca:
            int r0 = r0 + 1
            goto L79
        Lcd:
            com.worklight.wlclient.api.WLClient$1 r8 = new com.worklight.wlclient.api.WLClient$1     // Catch: java.net.URISyntaxException -> Ld6
            r8.<init>(r7, r10, r9)     // Catch: java.net.URISyntaxException -> Ld6
            r1.send(r8)     // Catch: java.net.URISyntaxException -> Ld6
            return
        Ld6:
            r8 = move-exception
            java.lang.RuntimeException r9 = new java.lang.RuntimeException
            r9.<init>(r8)
            throw r9
        Ldd:
            java.lang.IllegalArgumentException r8 = new java.lang.IllegalArgumentException
            java.lang.String r9 = "Error during invocation of remote procedure, because responseListener parameter can't be null."
            r8.<init>(r9)
            throw r8
        Le5:
            java.lang.IllegalArgumentException r8 = new java.lang.IllegalArgumentException
            java.lang.String r9 = "Error during invocation of remote procedure, because invocation data can't be null."
            r8.<init>(r9)
            goto Lee
        Led:
            throw r8
        Lee:
            goto Led
    }

    public static boolean isApplicationSentToBackground() {
            int r0 = android.os.Build.VERSION.SDK_INT
            r1 = 14
            if (r0 < r1) goto Lf
            com.worklight.wlclient.api.WLClient r0 = com.worklight.wlclient.api.WLClient.wlClient
            com.worklight.wlclient.api.WLClient$ActivityListener r0 = r0.activityListener
            boolean r0 = r0.isAppInBackground()
            return r0
        Lf:
            com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.logger
            java.lang.String r1 = "This version of Android SDK is not supported. Check MobileFirst documentation for the minimal Android SDK support."
            r0.error(r1)
            r0 = 1
            return r0
    }

    private void registerDefaultChallengeHandlers() {
            r2 = this;
            com.worklight.wlclient.challengehandler.RemoteDisableChallengeHandler r0 = new com.worklight.wlclient.challengehandler.RemoteDisableChallengeHandler
            java.lang.String r1 = "wl_remoteDisableRealm"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            com.worklight.wlclient.challengehandler.AuthenticityChallengeHandler r0 = new com.worklight.wlclient.challengehandler.AuthenticityChallengeHandler
            java.lang.String r1 = "appAuthenticity"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            com.worklight.wlclient.challengehandler.RegistrationClientIdChallengeHandler r0 = new com.worklight.wlclient.challengehandler.RegistrationClientIdChallengeHandler
            java.lang.String r1 = "registration-client-id"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            com.worklight.wlclient.auth.ClockSyncChallengeHandler r0 = new com.worklight.wlclient.auth.ClockSyncChallengeHandler
            java.lang.String r1 = "clockSynchronization"
            r0.<init>(r1)
            r2.registerChallengeHandler(r0)
            return
    }

    private static void releaseInstance() {
            r0 = 0
            com.worklight.wlclient.api.WLClient.wlClient = r0
            return
    }

    private static void removeGlobalHeader(java.lang.String r1) {
            com.worklight.wlclient.AsynchronousRequestSender r0 = com.worklight.wlclient.AsynchronousRequestSender.getInstance()
            java.util.Map<java.lang.String, java.lang.String> r0 = r0.globalHeaders
            r0.remove(r1)
            return
    }

    private void sendHeartBeat() {
            r7 = this;
            java.util.Timer r0 = r7.timer
            if (r0 != 0) goto L1f
            int r0 = r7.heartbeatInterval
            if (r0 <= 0) goto L1f
            java.util.Timer r1 = new java.util.Timer
            r1.<init>()
            r7.timer = r1
            com.worklight.wlclient.api.WLClient$HeartBeatTask r2 = new com.worklight.wlclient.api.WLClient$HeartBeatTask
            android.content.Context r0 = r7.context
            r2.<init>(r7, r0)
            int r0 = r7.heartbeatInterval
            int r0 = r0 * 1000
            long r5 = (long) r0
            r3 = r5
            r1.scheduleAtFixedRate(r2, r3, r5)
        L1f:
            return
    }

    private static void setDeviceDisplayName(java.lang.String r1, com.worklight.wlclient.WLRequestListener r2) {
            com.worklight.common.security.WLDeviceAuthManager r0 = com.worklight.common.security.WLDeviceAuthManager.getInstance()
            r0.setDeviceDisplayName(r1, r2)
            return
    }

    public final void connect(com.worklight.wlclient.api.WLResponseListener r1) {
            r0 = this;
            r0.connect$5cf0da9b(r1)
            return
    }

    public final com.worklight.wlclient.api.challengehandler.BaseChallengeHandler getBaseChallengeHandler(java.lang.String r2) {
            r1 = this;
            if (r2 != 0) goto L4
            r2 = 0
            return r2
        L4:
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r0 = r1.chMap
            java.lang.Object r2 = r0.get(r2)
            com.worklight.wlclient.api.challengehandler.BaseChallengeHandler r2 = (com.worklight.wlclient.api.challengehandler.BaseChallengeHandler) r2
            return r2
    }

    public final android.content.Context getContext() {
            r1 = this;
            android.content.Context r0 = r1.context
            return r0
    }

    public final com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler getGatewayChallengeHandler(com.worklight.wlclient.api.WLResponse r4) {
            r3 = this;
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r0 = r3.chMap
            java.util.Set r0 = r0.entrySet()
            java.util.Iterator r0 = r0.iterator()
        La:
            boolean r1 = r0.hasNext()
            if (r1 == 0) goto L29
            java.lang.Object r1 = r0.next()
            java.util.Map$Entry r1 = (java.util.Map.Entry) r1
            java.lang.Object r1 = r1.getValue()
            com.worklight.wlclient.api.challengehandler.BaseChallengeHandler r1 = (com.worklight.wlclient.api.challengehandler.BaseChallengeHandler) r1
            boolean r2 = r1 instanceof com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler
            if (r2 == 0) goto La
            com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler r1 = (com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler) r1
            boolean r2 = r1.canHandleResponse(r4)
            if (r2 == 0) goto La
            return r1
        L29:
            r4 = 0
            return r4
    }

    public final com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler getGatewayChallengeHandler(java.lang.String r3) {
            r2 = this;
            r0 = 0
            if (r3 != 0) goto L5
            r3 = r0
            goto Ld
        L5:
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r1 = r2.chMap
            java.lang.Object r3 = r1.get(r3)
            com.worklight.wlclient.api.challengehandler.BaseChallengeHandler r3 = (com.worklight.wlclient.api.challengehandler.BaseChallengeHandler) r3
        Ld:
            if (r3 == 0) goto L16
            boolean r1 = r3 instanceof com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler
            if (r1 == 0) goto L16
            com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler r3 = (com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler) r3
            return r3
        L16:
            return r0
    }

    public final com.worklight.wlclient.api.challengehandler.SecurityCheckChallengeHandler getSecurityCheckChallengeHandler(java.lang.String r3) {
            r2 = this;
            r0 = 0
            if (r3 != 0) goto L5
            r3 = r0
            goto Ld
        L5:
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r1 = r2.chMap
            java.lang.Object r3 = r1.get(r3)
            com.worklight.wlclient.api.challengehandler.BaseChallengeHandler r3 = (com.worklight.wlclient.api.challengehandler.BaseChallengeHandler) r3
        Ld:
            if (r3 == 0) goto L16
            boolean r1 = r3 instanceof com.worklight.wlclient.api.challengehandler.SecurityCheckChallengeHandler
            if (r1 == 0) goto L16
            com.worklight.wlclient.api.challengehandler.SecurityCheckChallengeHandler r3 = (com.worklight.wlclient.api.challengehandler.SecurityCheckChallengeHandler) r3
            return r3
        L16:
            return r0
    }

    public final boolean isGatewayResponse(com.worklight.wlclient.api.WLResponse r1) {
            r0 = this;
            com.worklight.wlclient.api.challengehandler.GatewayChallengeHandler r1 = r0.getGatewayChallengeHandler(r1)
            if (r1 == 0) goto L8
            r1 = 1
            goto L9
        L8:
            r1 = 0
        L9:
            return r1
    }

    public final void pinTrustedCertificatePublicKey(java.lang.String r4) {
            r3 = this;
            r0 = 0
            com.worklight.wlclient.HttpClientManager r1 = com.worklight.wlclient.HttpClientManager.getInstance()     // Catch: java.lang.Exception -> L62
            r2 = 0
            r1.pinTrustedCertificatePublicKey(r2)     // Catch: java.lang.Exception -> L62
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L62
            boolean r1 = r1.isEncrypted()     // Catch: java.lang.Exception -> L62
            if (r1 == 0) goto L35
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L62
            r1.<init>()     // Catch: java.lang.Exception -> L62
            com.worklight.common.WLConfig r2 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L62
            java.lang.String r2 = r2.getApplicationAbsolutePathToExternalAppFiles()     // Catch: java.lang.Exception -> L62
            r1.append(r2)     // Catch: java.lang.Exception -> L62
            java.lang.String r2 = "/"
            r1.append(r2)     // Catch: java.lang.Exception -> L62
            r1.append(r4)     // Catch: java.lang.Exception -> L62
            java.lang.String r1 = r1.toString()     // Catch: java.lang.Exception -> L62
            java.io.FileInputStream r2 = new java.io.FileInputStream     // Catch: java.lang.Exception -> L62
            r2.<init>(r1)     // Catch: java.lang.Exception -> L62
            goto L3f
        L35:
            android.content.Context r1 = r3.context     // Catch: java.lang.Exception -> L62
            android.content.res.AssetManager r1 = r1.getAssets()     // Catch: java.lang.Exception -> L62
            java.io.InputStream r2 = r1.open(r4)     // Catch: java.lang.Exception -> L62
        L3f:
            java.security.cert.Certificate r4 = getCertificateFromStream(r2)     // Catch: java.lang.Throwable -> L4e java.lang.Exception -> L50
            com.worklight.wlclient.HttpClientManager r1 = com.worklight.wlclient.HttpClientManager.getInstance()     // Catch: java.lang.Throwable -> L4e java.lang.Exception -> L50
            r1.pinTrustedCertificatePublicKey(r4)     // Catch: java.lang.Throwable -> L4e java.lang.Exception -> L50
            r2.close()     // Catch: java.lang.Exception -> L4d
        L4d:
            return
        L4e:
            r4 = move-exception
            goto L5e
        L50:
            java.lang.IllegalArgumentException r4 = new java.lang.IllegalArgumentException     // Catch: java.lang.Throwable -> L4e
            java.lang.String r1 = "The Certificate File is not in valid format. Make sure you’re supplying certificate in a DER format"
            java.lang.Object[] r0 = new java.lang.Object[r0]     // Catch: java.lang.Throwable -> L4e
            java.lang.String r0 = java.lang.String.format(r1, r0)     // Catch: java.lang.Throwable -> L4e
            r4.<init>(r0)     // Catch: java.lang.Throwable -> L4e
            throw r4     // Catch: java.lang.Throwable -> L4e
        L5e:
            r2.close()     // Catch: java.lang.Exception -> L61
        L61:
            throw r4
        L62:
            java.lang.IllegalArgumentException r1 = new java.lang.IllegalArgumentException
            r2 = 1
            java.lang.Object[] r2 = new java.lang.Object[r2]
            r2[r0] = r4
            java.lang.String r4 = "Cannot find %s, make sure that certificate file name is correct"
            java.lang.String r4 = java.lang.String.format(r4, r2)
            r1.<init>(r4)
            throw r1
    }

    public final void pinTrustedCertificatePublicKey(java.lang.String[] r13) {
            r12 = this;
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.ArrayList r1 = new java.util.ArrayList
            r1.<init>()
            java.util.ArrayList r2 = new java.util.ArrayList
            r2.<init>()
            if (r13 == 0) goto Leb
            int r3 = r13.length
            r4 = 0
            r5 = 0
            r7 = r4
            r8 = r7
            r6 = 0
        L17:
            if (r6 >= r3) goto L73
            r9 = r13[r6]
            com.worklight.common.WLConfig r10 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L53
            boolean r10 = r10.isEncrypted()     // Catch: java.lang.Exception -> L53
            if (r10 == 0) goto L48
            java.lang.StringBuilder r10 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> L53
            r10.<init>()     // Catch: java.lang.Exception -> L53
            com.worklight.common.WLConfig r11 = com.worklight.common.WLConfig.getInstance()     // Catch: java.lang.Exception -> L53
            java.lang.String r11 = r11.getApplicationAbsolutePathToExternalAppFiles()     // Catch: java.lang.Exception -> L53
            r10.append(r11)     // Catch: java.lang.Exception -> L53
            java.lang.String r11 = "/"
            r10.append(r11)     // Catch: java.lang.Exception -> L53
            r10.append(r9)     // Catch: java.lang.Exception -> L53
            java.lang.String r10 = r10.toString()     // Catch: java.lang.Exception -> L53
            java.io.FileInputStream r11 = new java.io.FileInputStream     // Catch: java.lang.Exception -> L53
            r11.<init>(r10)     // Catch: java.lang.Exception -> L53
            r8 = r11
            goto L56
        L48:
            android.content.Context r10 = r12.context     // Catch: java.lang.Exception -> L53
            android.content.res.AssetManager r10 = r10.getAssets()     // Catch: java.lang.Exception -> L53
            java.io.InputStream r8 = r10.open(r9)     // Catch: java.lang.Exception -> L53
            goto L56
        L53:
            r2.add(r9)
        L56:
            java.security.cert.Certificate r7 = getCertificateFromStream(r8)     // Catch: java.lang.Throwable -> L64 java.lang.Exception -> L66
            if (r7 == 0) goto L69
            boolean r9 = r7 instanceof java.security.cert.X509Certificate
            if (r9 == 0) goto L69
            r0.add(r7)     // Catch: java.lang.Throwable -> L64 java.lang.Exception -> L66
            goto L69
        L64:
            r13 = move-exception
            goto L6f
        L66:
            r1.add(r7)     // Catch: java.lang.Throwable -> L64
        L69:
            r8.close()     // Catch: java.lang.Exception -> L6c
        L6c:
            int r6 = r6 + 1
            goto L17
        L6f:
            r8.close()     // Catch: java.lang.Exception -> L72
        L72:
            throw r13
        L73:
            com.worklight.wlclient.HttpClientManager r13 = com.worklight.wlclient.HttpClientManager.getInstance()     // Catch: java.lang.Exception -> Lae
            java.security.cert.Certificate[] r3 = new java.security.cert.Certificate[r5]     // Catch: java.lang.Exception -> Lae
            java.lang.Object[] r3 = r0.toArray(r3)     // Catch: java.lang.Exception -> Lae
            java.security.cert.Certificate[] r3 = (java.security.cert.Certificate[]) r3     // Catch: java.lang.Exception -> Lae
            r13.pinMultipleTrustedCertificatePublicKey(r3)     // Catch: java.lang.Exception -> Lae
            int r13 = r1.size()     // Catch: java.lang.Exception -> Lae
            if (r13 != 0) goto L97
            int r13 = r2.size()     // Catch: java.lang.Exception -> Lae
            if (r13 != 0) goto L8f
            return
        L8f:
            java.lang.IllegalArgumentException r13 = new java.lang.IllegalArgumentException     // Catch: java.lang.Exception -> Lae
            java.lang.String r1 = "Cannot find , make sure that certificate file name is correct"
            r13.<init>(r1)     // Catch: java.lang.Exception -> Lae
            throw r13     // Catch: java.lang.Exception -> Lae
        L97:
            java.lang.IllegalArgumentException r13 = new java.lang.IllegalArgumentException     // Catch: java.lang.Exception -> Lae
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Exception -> Lae
            r2.<init>()     // Catch: java.lang.Exception -> Lae
            java.lang.String r3 = "No valid certificates were found"
            r2.append(r3)     // Catch: java.lang.Exception -> Lae
            r2.append(r1)     // Catch: java.lang.Exception -> Lae
            java.lang.String r1 = r2.toString()     // Catch: java.lang.Exception -> Lae
            r13.<init>(r1)     // Catch: java.lang.Exception -> Lae
            throw r13     // Catch: java.lang.Exception -> Lae
        Lae:
            r13 = move-exception
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto Lca
            com.worklight.wlclient.HttpClientManager r13 = com.worklight.wlclient.HttpClientManager.getInstance()
            r13.pinTrustedCertificatePublicKey(r4)
            java.lang.IllegalArgumentException r13 = new java.lang.IllegalArgumentException
            java.lang.Object[] r0 = new java.lang.Object[r5]
            java.lang.String r1 = "No valid certificates found to pin"
            java.lang.String r0 = java.lang.String.format(r1, r0)
            r13.<init>(r0)
            throw r13
        Lca:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = "Some Certificate file does not contain a valid certificate. Make sure you’re supplying certificate in a DER format"
            r0.append(r1)
            java.lang.String r13 = r13.toString()
            r0.append(r13)
            java.lang.IllegalArgumentException r13 = new java.lang.IllegalArgumentException
            java.lang.String r0 = r0.toString()
            java.lang.Object[] r1 = new java.lang.Object[r5]
            java.lang.String r0 = java.lang.String.format(r0, r1)
            r13.<init>(r0)
            throw r13
        Leb:
            return
    }

    public final void registerChallengeHandler(com.worklight.wlclient.api.challengehandler.BaseChallengeHandler r3) {
            r2 = this;
            java.lang.String r0 = r3.handlerName
            if (r0 == 0) goto La
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r1 = r2.chMap
            r1.put(r0, r3)
            return
        La:
            com.worklight.common.Logger r3 = com.worklight.wlclient.api.WLClient.logger
            java.lang.String r0 = "Application will exit because the challengeHandler parameter for registerChallengeHandler (challengeHandler) has a null handlerName or securityCheck property. Call this API with a valid reference to challenge handler."
            r3.error(r0)
            java.lang.RuntimeException r3 = new java.lang.RuntimeException
            r3.<init>(r0)
            throw r3
    }

    public final java.lang.String resetDeviceID() {
            r2 = this;
            com.worklight.common.security.WLDeviceAuthManager r0 = com.worklight.common.security.WLDeviceAuthManager.getInstance()
            android.content.Context r1 = r2.context
            java.lang.String r0 = r0.regenerateDeviceID(r1)
            return r0
    }

    public void resetServerContext() {
            r2 = this;
            com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.logger
            java.lang.String r1 = "reset HTTP client context"
            r0.debug(r1)
            android.content.Context r0 = r2.context
            com.worklight.wlclient.AsynchronousRequestSender.reset(r0)
            java.util.Hashtable<java.lang.String, com.worklight.wlclient.api.challengehandler.BaseChallengeHandler> r0 = r2.chMap
            java.util.Collection r0 = r0.values()
            java.util.Iterator r0 = r0.iterator()
        L16:
            boolean r1 = r0.hasNext()
            if (r1 == 0) goto L26
            java.lang.Object r1 = r0.next()
            com.worklight.wlclient.api.challengehandler.BaseChallengeHandler r1 = (com.worklight.wlclient.api.challengehandler.BaseChallengeHandler) r1
            r1.clearChallengeRequests()
            goto L16
        L26:
            com.worklight.wlclient.auth.WLAuthorizationManagerInternal r0 = com.worklight.wlclient.auth.WLAuthorizationManagerInternal.getInstance()
            r0.clearRegistration()
            return
    }

    public final void setDeviceID(java.lang.String r3) {
            r2 = this;
            com.worklight.common.security.WLDeviceAuthManager r0 = com.worklight.common.security.WLDeviceAuthManager.getInstance()
            android.content.Context r1 = r2.context
            r0.overrideDeviceID(r3, r1)
            return
    }

    public final void setHeartBeatInterval(int r1) {
            r0 = this;
            r0.heartbeatInterval = r1
            java.util.Timer r1 = r0.timer
            if (r1 == 0) goto Lc
            r1.cancel()
            r1 = 0
            r0.timer = r1
        Lc:
            r0.sendHeartBeat()
            return
    }

    public final void setServerUrl(java.net.URL r4) {
            r3 = this;
            java.lang.String r4 = r4.toString()
            com.worklight.common.Logger r0 = com.worklight.wlclient.api.WLClient.logger
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "set MobileFirst Platform server URL To:"
            r1.append(r2)
            r1.append(r4)
            java.lang.String r1 = r1.toString()
            r0.debug(r1)
            java.lang.String r0 = "/"
            boolean r0 = r4.endsWith(r0)
            if (r0 == 0) goto L34
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r4)
            java.lang.String r4 = "api"
            r0.append(r4)
            java.lang.String r4 = r0.toString()
            goto L45
        L34:
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            r0.append(r4)
            java.lang.String r4 = "/api"
            r0.append(r4)
            java.lang.String r4 = r0.toString()
        L45:
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.getInstance()
            r0.setServerUrl(r4)
            r3.resetServerContext()
            return
    }
}

package com.worklight.common.security;

/* loaded from: classes4.dex */
public class WLOAuthCertManager extends com.worklight.common.security.WLCertManager {
    private static java.lang.String KEYSTORE_FILENAME = ".oauthkeystore";
    private static final java.lang.String PROVISIONING_ENTITY_FOR_KEYS = "WLAuthorizationManagerProvisioningEntity";
    private static final int RSA_KEY_SIZE = 512;
    private static com.worklight.common.security.WLOAuthCertManager instance;
    private static char[] keyStorePassword;

    static {
            return
    }

    protected WLOAuthCertManager() {
            r2 = this;
            java.lang.String r0 = com.worklight.common.security.WLOAuthCertManager.KEYSTORE_FILENAME
            char[] r1 = com.worklight.common.security.WLOAuthCertManager.keyStorePassword
            r2.<init>(r0, r1)
            return
    }

    public static com.worklight.common.security.WLOAuthCertManager getInstance() {
            java.lang.Class<com.worklight.common.security.WLOAuthCertManager> r0 = com.worklight.common.security.WLOAuthCertManager.class
            monitor-enter(r0)
            com.worklight.common.security.WLOAuthCertManager r1 = com.worklight.common.security.WLOAuthCertManager.instance     // Catch: java.lang.Throwable -> L1b
            if (r1 != 0) goto L17
            com.worklight.common.security.WLOAuthCertManager r1 = new com.worklight.common.security.WLOAuthCertManager     // Catch: java.lang.Throwable -> L1b
            r1.<init>()     // Catch: java.lang.Throwable -> L1b
            com.worklight.common.security.WLOAuthCertManager.instance = r1     // Catch: java.lang.Throwable -> L1b
            com.worklight.wlclient.api.WLClient r2 = com.worklight.wlclient.api.WLClient.getInstance()     // Catch: java.lang.Throwable -> L1b
            android.content.Context r2 = r2.context     // Catch: java.lang.Throwable -> L1b
            r1.init(r2)     // Catch: java.lang.Throwable -> L1b
        L17:
            com.worklight.common.security.WLOAuthCertManager r1 = com.worklight.common.security.WLOAuthCertManager.instance     // Catch: java.lang.Throwable -> L1b
            monitor-exit(r0)
            return r1
        L1b:
            r1 = move-exception
            monitor-exit(r0)
            throw r1
    }

    public void deleteKeyPair() {
            r3 = this;
            java.lang.String r0 = "WLAuthorizationManagerProvisioningEntity"
            java.lang.String r1 = r3.getAlias(r0)
            java.util.HashMap<java.lang.String, java.security.KeyPair> r2 = r3.keyPairHash
            r2.remove(r1)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r0 = r3.getAlias(r0)
            r2 = 0
            r1.writeSecurityPref(r0, r2)
            return
    }

    public void generateKeyPair() {
            r2 = this;
            java.security.KeyPair r0 = r2.getKeyPair()
            if (r0 != 0) goto Lc
            r0 = 0
            r1 = 512(0x200, float:7.17E-43)
            r2.generateKeyPair(r0, r1)
        Lc:
            return
    }

    @Override // com.worklight.common.security.WLCertManager
    protected java.lang.String getAlias(java.lang.String r1) {
            r0 = this;
            java.lang.String r1 = "WLAuthorizationManagerProvisioningEntity"
            return r1
    }

    public java.security.KeyPair getKeyPair() {
            r1 = this;
            java.lang.String r0 = "WLAuthorizationManagerProvisioningEntity"
            java.security.KeyPair r0 = r1.getKeyPair(r0)
            return r0
    }

    @Override // com.worklight.common.security.WLCertManager
    protected java.security.KeyStore.PrivateKeyEntry getPrivateKeyEntry(java.lang.String r6) {
            r5 = this;
            java.lang.String r0 = java.security.KeyStore.getDefaultType()
            java.security.KeyStore r0 = java.security.KeyStore.getInstance(r0)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            android.content.Context r2 = r5.context
            java.io.File r2 = r2.getFilesDir()
            java.lang.String r2 = r2.getAbsolutePath()
            r1.append(r2)
            java.lang.String r2 = "/"
            r1.append(r2)
            java.lang.String r2 = com.worklight.common.security.WLOAuthCertManager.KEYSTORE_FILENAME
            r1.append(r2)
            java.io.File r2 = new java.io.File
            java.lang.String r1 = r1.toString()
            r2.<init>(r1)
            java.lang.String r6 = r5.getAlias(r6)
            boolean r1 = r2.exists()
            r3 = 0
            if (r1 == 0) goto L83
            java.io.FileInputStream r1 = new java.io.FileInputStream     // Catch: java.lang.Throwable -> L59 java.io.IOException -> L5b
            r1.<init>(r2)     // Catch: java.lang.Throwable -> L59 java.io.IOException -> L5b
            char[] r2 = com.worklight.common.security.WLOAuthCertManager.keyStorePassword     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            r0.load(r1, r2)     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            java.security.KeyStore$PasswordProtection r2 = new java.security.KeyStore$PasswordProtection     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            char[] r4 = com.worklight.common.security.WLOAuthCertManager.keyStorePassword     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            r2.<init>(r4)     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            java.security.KeyStore$Entry r6 = r0.getEntry(r6, r2)     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            java.security.KeyStore$PrivateKeyEntry r6 = (java.security.KeyStore.PrivateKeyEntry) r6     // Catch: java.lang.Throwable -> L54 java.io.IOException -> L57
            r1.close()
            r3 = r6
            goto L83
        L54:
            r6 = move-exception
            r3 = r1
            goto L7d
        L57:
            r6 = move-exception
            goto L5d
        L59:
            r6 = move-exception
            goto L7d
        L5b:
            r6 = move-exception
            r1 = r3
        L5d:
            com.worklight.common.Logger r0 = com.worklight.common.security.WLOAuthCertManager.logger     // Catch: java.lang.Throwable -> L54
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L54
            r2.<init>()     // Catch: java.lang.Throwable -> L54
            java.lang.String r4 = "Failed to determine the existence of certificate for client registration with "
            r2.append(r4)     // Catch: java.lang.Throwable -> L54
            java.lang.String r4 = r6.getMessage()     // Catch: java.lang.Throwable -> L54
            r2.append(r4)     // Catch: java.lang.Throwable -> L54
            java.lang.String r2 = r2.toString()     // Catch: java.lang.Throwable -> L54
            r0.error(r2, r6)     // Catch: java.lang.Throwable -> L54
            if (r1 == 0) goto L83
            r1.close()
            goto L83
        L7d:
            if (r3 == 0) goto L82
            r3.close()
        L82:
            throw r6
        L83:
            return r3
    }

    public java.lang.String signJWS(org.json.JSONObject r2, java.lang.String r3) {
            r1 = this;
            java.security.KeyPair r0 = r1.getKeyPair()
            if (r0 == 0) goto Lb
            java.lang.String r2 = r1.signJWS(r2, r0, r3)
            return r2
        Lb:
            java.lang.Exception r2 = new java.lang.Exception
            java.lang.String r3 = "Not found keypair in the keystore"
            r2.<init>(r3)
            throw r2
    }

    public java.lang.String signJWS(org.json.JSONObject r2, java.security.KeyPair r3, java.lang.String r4) {
            r1 = this;
            java.security.PublicKey r0 = r3.getPublic()
            java.security.interfaces.RSAPublicKey r0 = (java.security.interfaces.RSAPublicKey) r0
            java.security.PrivateKey r3 = r3.getPrivate()
            java.lang.String r2 = r1.signJWS(r2, r0, r3, r4)
            return r2
    }
}

package com.worklight.common.security;

/* loaded from: classes4.dex */
public abstract class WLCertManager {
    protected static final java.lang.String ALG = "alg";
    private static final java.lang.String ANDROID_OPENSSL_CRYPTO_PROVIDER = "AndroidOpenSSL";
    private static final java.lang.String APPLICATION = "application";

    /* renamed from: E */
    protected static final java.lang.String f23978E = "e";
    protected static final java.lang.String JWK = "jwk";
    protected static final java.lang.String KTY = "kty";

    /* renamed from: N */
    protected static final java.lang.String f23979N = "n";
    protected static final java.lang.String RSA = "RSA";
    protected static final java.lang.String X5C = "x5c";
    private static boolean first;
    protected static com.worklight.common.Logger logger;
    private java.lang.String KEYSTORE_FILENAME;
    protected android.content.Context context;
    protected java.util.HashMap<java.lang.String, java.security.KeyPair> keyPairHash;
    private char[] keyStorePassword;

    static {
            java.lang.String r0 = "wl.certManager"
            com.worklight.common.Logger r0 = com.worklight.common.Logger.getInstance(r0)
            com.worklight.common.security.WLCertManager.logger = r0
            r0 = 1
            com.worklight.common.security.WLCertManager.first = r0
            return
    }

    protected WLCertManager(java.lang.String r2, char[] r3) {
            r1 = this;
            r1.<init>()
            java.util.HashMap r0 = new java.util.HashMap
            r0.<init>()
            r1.keyPairHash = r0
            r1.KEYSTORE_FILENAME = r2
            r1.keyStorePassword = r3
            return
    }

    private java.security.KeyStore loadKeystore() {
            r3 = this;
            java.lang.String r0 = java.security.KeyStore.getDefaultType()
            java.security.KeyStore r0 = java.security.KeyStore.getInstance(r0)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            android.content.Context r2 = r3.context
            java.io.File r2 = r2.getFilesDir()
            java.lang.String r2 = r2.getAbsolutePath()
            r1.append(r2)
            java.lang.String r2 = "/"
            r1.append(r2)
            java.lang.String r2 = r3.KEYSTORE_FILENAME
            r1.append(r2)
            java.io.File r2 = new java.io.File
            java.lang.String r1 = r1.toString()
            r2.<init>(r1)
            boolean r1 = r2.exists()
            if (r1 == 0) goto L53
            java.io.FileInputStream r1 = new java.io.FileInputStream     // Catch: java.security.cert.CertificateException -> L3e java.security.NoSuchAlgorithmException -> L45 java.io.IOException -> L4c
            r1.<init>(r2)     // Catch: java.security.cert.CertificateException -> L3e java.security.NoSuchAlgorithmException -> L45 java.io.IOException -> L4c
            char[] r2 = r3.keyStorePassword     // Catch: java.security.cert.CertificateException -> L3e java.security.NoSuchAlgorithmException -> L45 java.io.IOException -> L4c
            r0.load(r1, r2)     // Catch: java.security.cert.CertificateException -> L3e java.security.NoSuchAlgorithmException -> L45 java.io.IOException -> L4c
            goto L53
        L3e:
            r0 = move-exception
            java.lang.Error r1 = new java.lang.Error
            r1.<init>(r0)
            throw r1
        L45:
            r0 = move-exception
            java.lang.Error r1 = new java.lang.Error
            r1.<init>(r0)
            throw r1
        L4c:
            r0 = move-exception
            java.lang.Error r1 = new java.lang.Error
            r1.<init>(r0)
            throw r1
        L53:
            return r0
    }

    private byte[] signCsrData(java.lang.String r2, java.security.PrivateKey r3) {
            r1 = this;
            java.lang.String r0 = "SHA256withRSA"
            java.security.Signature r0 = java.security.Signature.getInstance(r0)
            r0.initSign(r3)
            byte[] r2 = r2.getBytes()
            r0.update(r2)
            byte[] r2 = r0.sign()
            return r2
    }

    public void clearKeystore(java.lang.String r7) {
            r6 = this;
            java.lang.String r0 = ": "
            java.lang.String r1 = java.security.KeyStore.getDefaultType()
            java.security.KeyStore r1 = java.security.KeyStore.getInstance(r1)
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            android.content.Context r3 = r6.context
            java.io.File r3 = r3.getFilesDir()
            java.lang.String r3 = r3.getAbsolutePath()
            r2.append(r3)
            java.lang.String r3 = "/"
            r2.append(r3)
            java.lang.String r3 = r6.KEYSTORE_FILENAME
            r2.append(r3)
            java.io.File r3 = new java.io.File
            java.lang.String r2 = r2.toString()
            r3.<init>(r2)
            r2 = 0
            boolean r4 = r3.exists()     // Catch: java.lang.Throwable -> Laa java.lang.Exception -> Laf
            if (r4 == 0) goto L46
            java.io.FileInputStream r4 = new java.io.FileInputStream     // Catch: java.lang.Throwable -> Laa java.lang.Exception -> Laf
            r4.<init>(r3)     // Catch: java.lang.Throwable -> Laa java.lang.Exception -> Laf
            char[] r5 = r6.keyStorePassword     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            r1.load(r4, r5)     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            r4.close()     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            goto L4c
        L44:
            r7 = move-exception
            goto La8
        L46:
            char[] r4 = r6.keyStorePassword     // Catch: java.lang.Throwable -> Laa java.lang.Exception -> Laf
            r1.load(r2, r4)     // Catch: java.lang.Throwable -> Laa java.lang.Exception -> Laf
            r4 = r2
        L4c:
            java.lang.String r7 = r6.getAlias(r7)     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            boolean r5 = r1.containsAlias(r7)     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            if (r5 == 0) goto L6c
            r1.deleteEntry(r7)     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            java.io.FileOutputStream r7 = new java.io.FileOutputStream     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            r7.<init>(r3)     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            char[] r2 = r6.keyStorePassword     // Catch: java.lang.Throwable -> L65 java.lang.Exception -> L69
            r1.store(r7, r2)     // Catch: java.lang.Throwable -> L65 java.lang.Exception -> L69
            r2 = r7
            goto L6c
        L65:
            r1 = move-exception
            r2 = r7
            goto L11f
        L69:
            r1 = move-exception
            r2 = r7
            goto Lb2
        L6c:
            com.worklight.common.Logger r7 = com.worklight.common.security.WLCertManager.logger     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            java.lang.String r1 = "Key store cleared."
            r7.debug(r1)     // Catch: java.lang.Exception -> L44 java.lang.Throwable -> L119
            if (r2 == 0) goto L99
            r2.close()     // Catch: java.io.IOException -> L79
            goto L99
        L79:
            r7 = move-exception
            com.worklight.common.Logger r1 = com.worklight.common.security.WLCertManager.logger
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            java.lang.Class r3 = r7.getClass()
            r2.append(r3)
            r2.append(r0)
            java.lang.String r3 = r7.getMessage()
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            r1.error(r2, r7)
        L99:
            if (r4 == 0) goto L118
            r4.close()     // Catch: java.io.IOException -> L9f
            return
        L9f:
            r7 = move-exception
            com.worklight.common.Logger r1 = com.worklight.common.security.WLCertManager.logger
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            goto L100
        La8:
            r1 = r7
            goto Lb2
        Laa:
            r7 = move-exception
            r1 = r7
            r4 = r2
            goto L11f
        Laf:
            r7 = move-exception
            r1 = r7
            r4 = r2
        Lb2:
            com.worklight.common.Logger r7 = com.worklight.common.security.WLCertManager.logger     // Catch: java.lang.Throwable -> L119
            java.lang.StringBuilder r3 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L119
            r3.<init>()     // Catch: java.lang.Throwable -> L119
            java.lang.String r5 = "Error deleting the keystore containing the certificate "
            r3.append(r5)     // Catch: java.lang.Throwable -> L119
            java.lang.String r5 = r1.getMessage()     // Catch: java.lang.Throwable -> L119
            r3.append(r5)     // Catch: java.lang.Throwable -> L119
            java.lang.String r3 = r3.toString()     // Catch: java.lang.Throwable -> L119
            r7.error(r3, r1)     // Catch: java.lang.Throwable -> L119
            if (r2 == 0) goto Lf2
            r2.close()     // Catch: java.io.IOException -> Ld2
            goto Lf2
        Ld2:
            r7 = move-exception
            com.worklight.common.Logger r1 = com.worklight.common.security.WLCertManager.logger
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
            java.lang.Class r3 = r7.getClass()
            r2.append(r3)
            r2.append(r0)
            java.lang.String r3 = r7.getMessage()
            r2.append(r3)
            java.lang.String r2 = r2.toString()
            r1.error(r2, r7)
        Lf2:
            if (r4 == 0) goto L118
            r4.close()     // Catch: java.io.IOException -> Lf8
            return
        Lf8:
            r7 = move-exception
            com.worklight.common.Logger r1 = com.worklight.common.security.WLCertManager.logger
            java.lang.StringBuilder r2 = new java.lang.StringBuilder
            r2.<init>()
        L100:
            java.lang.Class r3 = r7.getClass()
            r2.append(r3)
            r2.append(r0)
            java.lang.String r0 = r7.getMessage()
            r2.append(r0)
            java.lang.String r0 = r2.toString()
            r1.error(r0, r7)
        L118:
            return
        L119:
            r7 = move-exception
            r1 = r2
            r2 = r4
            r4 = r2
            r2 = r1
            r1 = r7
        L11f:
            if (r2 == 0) goto L145
            r2.close()     // Catch: java.io.IOException -> L125
            goto L145
        L125:
            r7 = move-exception
            com.worklight.common.Logger r2 = com.worklight.common.security.WLCertManager.logger
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.Class r5 = r7.getClass()
            r3.append(r5)
            r3.append(r0)
            java.lang.String r5 = r7.getMessage()
            r3.append(r5)
            java.lang.String r3 = r3.toString()
            r2.error(r3, r7)
        L145:
            if (r4 == 0) goto L16b
            r4.close()     // Catch: java.io.IOException -> L14b
            goto L16b
        L14b:
            r7 = move-exception
            com.worklight.common.Logger r2 = com.worklight.common.security.WLCertManager.logger
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            java.lang.Class r4 = r7.getClass()
            r3.append(r4)
            r3.append(r0)
            java.lang.String r0 = r7.getMessage()
            r3.append(r0)
            java.lang.String r0 = r3.toString()
            r2.error(r0, r7)
        L16b:
            throw r1
    }

    public java.security.KeyPair generateKeyPair(java.lang.String r6, int r7) {
            r5 = this;
            int r0 = android.os.Build.VERSION.SDK_INT
            java.lang.String r1 = "RSA"
            r2 = 17
            if (r0 > r2) goto Lf
            java.lang.String r0 = "BC"
            java.security.KeyPairGenerator r0 = java.security.KeyPairGenerator.getInstance(r1, r0)
            goto L15
        Lf:
            java.lang.String r0 = "AndroidOpenSSL"
            java.security.KeyPairGenerator r0 = java.security.KeyPairGenerator.getInstance(r1, r0)
        L15:
            r0.initialize(r7)
            java.security.KeyPair r7 = r0.genKeyPair()
            if (r7 == 0) goto L4e
            java.io.ByteArrayOutputStream r0 = new java.io.ByteArrayOutputStream
            r0.<init>()
            java.io.ObjectOutputStream r1 = new java.io.ObjectOutputStream
            r1.<init>(r0)
            r1.writeObject(r7)
            byte[] r2 = r0.toByteArray()
            r3 = 0
            java.lang.String r2 = android.util.Base64.encodeToString(r2, r3)
            com.worklight.common.WLConfig r3 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r4 = r5.getAlias(r6)
            r3.writeSecurityPref(r4, r2)
            r1.close()
            r0.close()
            java.util.HashMap<java.lang.String, java.security.KeyPair> r0 = r5.keyPairHash
            java.lang.String r6 = r5.getAlias(r6)
            r0.put(r6, r7)
        L4e:
            return r7
    }

    protected abstract java.lang.String getAlias(java.lang.String r1);

    public java.security.KeyPair getKeyPair(java.lang.String r6) {
            r5 = this;
            java.lang.String r0 = r5.getAlias(r6)
            java.util.HashMap<java.lang.String, java.security.KeyPair> r1 = r5.keyPairHash
            java.lang.Object r1 = r1.get(r0)
            java.security.KeyPair r1 = (java.security.KeyPair) r1
            if (r1 != 0) goto L4f
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.getInstance()
            java.lang.String r6 = r5.getAlias(r6)
            java.lang.String r6 = r1.readSecurityPref(r6)
            r1 = 0
            if (r6 != 0) goto L25
            com.worklight.common.Logger r6 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r0 = "There is no KeyPair in memory-getKeyPair"
            r6.debug(r0)
            return r1
        L25:
            r2 = 0
            byte[] r6 = android.util.Base64.decode(r6, r2)
            java.io.ByteArrayInputStream r2 = new java.io.ByteArrayInputStream     // Catch: java.io.IOException -> L4a
            r2.<init>(r6)     // Catch: java.io.IOException -> L4a
            java.io.ObjectInputStream r6 = new java.io.ObjectInputStream     // Catch: java.io.IOException -> L4a
            r6.<init>(r2)     // Catch: java.io.IOException -> L4a
            java.lang.Object r3 = r6.readObject()     // Catch: java.io.IOException -> L4a
            boolean r4 = r3 instanceof java.security.KeyPair
            if (r4 == 0) goto L43
            java.security.KeyPair r3 = (java.security.KeyPair) r3     // Catch: java.io.IOException -> L4a
            java.util.HashMap<java.lang.String, java.security.KeyPair> r4 = r5.keyPairHash     // Catch: java.io.IOException -> L4a
            r4.put(r0, r3)     // Catch: java.io.IOException -> L4a
        L43:
            r6.close()     // Catch: java.io.IOException -> L4a
            r2.close()     // Catch: java.io.IOException -> L4a
            goto L4f
        L4a:
            r6 = move-exception
            r6.printStackTrace()
            return r1
        L4f:
            java.util.HashMap<java.lang.String, java.security.KeyPair> r6 = r5.keyPairHash
            java.lang.Object r6 = r6.get(r0)
            java.security.KeyPair r6 = (java.security.KeyPair) r6
            return r6
    }

    protected java.security.KeyStore.PrivateKeyEntry getPrivateKeyEntry(java.lang.String r17) {
            r16 = this;
            r1 = r16
            r0 = r17
            java.lang.String r2 = java.security.KeyStore.getDefaultType()
            java.security.KeyStore r2 = java.security.KeyStore.getInstance(r2)
            java.lang.StringBuilder r3 = new java.lang.StringBuilder
            r3.<init>()
            android.content.Context r4 = r1.context
            java.io.File r4 = r4.getFilesDir()
            java.lang.String r4 = r4.getAbsolutePath()
            r3.append(r4)
            java.lang.String r4 = "/"
            r3.append(r4)
            java.lang.String r5 = r1.KEYSTORE_FILENAME
            r3.append(r5)
            java.io.File r5 = new java.io.File
            java.lang.String r3 = r3.toString()
            r5.<init>(r3)
            java.lang.String r3 = r16.getAlias(r17)
            boolean r6 = r5.exists()
            java.lang.String r7 = "application"
            r8 = 0
            if (r6 == 0) goto L94
            java.io.FileInputStream r6 = new java.io.FileInputStream     // Catch: java.lang.Throwable -> L6a java.io.IOException -> L6c
            r6.<init>(r5)     // Catch: java.lang.Throwable -> L6a java.io.IOException -> L6c
            char[] r9 = r1.keyStorePassword     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            r2.load(r6, r9)     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            java.security.KeyStore$PasswordProtection r9 = new java.security.KeyStore$PasswordProtection     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            char[] r10 = r1.keyStorePassword     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            r9.<init>(r10)     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            java.security.KeyStore$Entry r9 = r2.getEntry(r3, r9)     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            java.security.KeyStore$PrivateKeyEntry r9 = (java.security.KeyStore.PrivateKeyEntry) r9     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            if (r9 == 0) goto L5b
            r6.close()
            return r9
        L5b:
            boolean r0 = r7.equalsIgnoreCase(r0)     // Catch: java.lang.Throwable -> L65 java.io.IOException -> L68
            if (r0 == 0) goto L8a
            r6.close()
            return r8
        L65:
            r0 = move-exception
            r8 = r6
            goto L8e
        L68:
            r0 = move-exception
            goto L6e
        L6a:
            r0 = move-exception
            goto L8e
        L6c:
            r0 = move-exception
            r6 = r8
        L6e:
            com.worklight.common.Logger r7 = com.worklight.common.security.WLCertManager.logger     // Catch: java.lang.Throwable -> L65
            java.lang.StringBuilder r9 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L65
            r9.<init>()     // Catch: java.lang.Throwable -> L65
            java.lang.String r10 = "Failed to determine the existence of certificate for device authentication with "
            r9.append(r10)     // Catch: java.lang.Throwable -> L65
            java.lang.String r10 = r0.getMessage()     // Catch: java.lang.Throwable -> L65
            r9.append(r10)     // Catch: java.lang.Throwable -> L65
            java.lang.String r9 = r9.toString()     // Catch: java.lang.Throwable -> L65
            r7.error(r9, r0)     // Catch: java.lang.Throwable -> L65
            if (r6 == 0) goto La0
        L8a:
            r6.close()
            goto La0
        L8e:
            if (r8 == 0) goto L93
            r8.close()
        L93:
            throw r0
        L94:
            boolean r0 = r7.equalsIgnoreCase(r0)
            if (r0 == 0) goto L9b
            return r8
        L9b:
            char[] r0 = r1.keyStorePassword
            r2.load(r8, r0)
        La0:
            android.content.Context r0 = r1.context
            android.content.pm.PackageManager r0 = r0.getPackageManager()
            android.content.Context r6 = r1.context
            android.content.pm.ApplicationInfo r6 = r6.getApplicationInfo()
            int r6 = r6.uid
            java.lang.String[] r6 = r0.getPackagesForUid(r6)
            java.lang.String r0 = java.security.KeyStore.getDefaultType()
            java.security.KeyStore r7 = java.security.KeyStore.getInstance(r0)
            int r9 = r6.length
            r10 = 0
            r11 = 0
        Lbd:
            if (r11 >= r9) goto L17e
            r0 = r6[r11]
            java.lang.StringBuilder r12 = new java.lang.StringBuilder
            r12.<init>()
            android.content.Context r13 = r1.context
            android.content.Context r0 = r13.createPackageContext(r0, r10)
            java.io.File r0 = r0.getFilesDir()
            java.lang.String r0 = r0.getAbsolutePath()
            r12.append(r0)
            r12.append(r4)
            java.lang.String r0 = r1.KEYSTORE_FILENAME
            r12.append(r0)
            java.io.File r0 = new java.io.File
            java.lang.String r12 = r12.toString()
            r0.<init>(r12)
            boolean r12 = r0.exists()
            if (r12 == 0) goto L179
            java.io.FileInputStream r12 = new java.io.FileInputStream     // Catch: java.lang.Throwable -> L13c java.io.IOException -> L13f
            r12.<init>(r0)     // Catch: java.lang.Throwable -> L13c java.io.IOException -> L13f
            char[] r0 = r1.keyStorePassword     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            r7.load(r12, r0)     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            java.security.KeyStore$PasswordProtection r0 = new java.security.KeyStore$PasswordProtection     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            char[] r13 = r1.keyStorePassword     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            r0.<init>(r13)     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            java.security.KeyStore$Entry r0 = r7.getEntry(r3, r0)     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            java.security.KeyStore$PrivateKeyEntry r0 = (java.security.KeyStore.PrivateKeyEntry) r0     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            if (r0 != 0) goto L10f
            r12.close()     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            r12.close()
            goto L179
        L10f:
            java.io.FileOutputStream r13 = new java.io.FileOutputStream     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            r13.<init>(r5)     // Catch: java.lang.Throwable -> L135 java.io.IOException -> L139
            java.security.PrivateKey r14 = r0.getPrivateKey()     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            char[] r15 = r1.keyStorePassword     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            java.security.cert.Certificate[] r10 = r0.getCertificateChain()     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            r2.setKeyEntry(r3, r14, r15, r10)     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            char[] r10 = r1.keyStorePassword     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            r2.store(r13, r10)     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            r13.close()     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            r12.close()     // Catch: java.io.IOException -> L133 java.lang.Throwable -> L16c
            r12.close()
            r13.close()
            return r0
        L133:
            r0 = move-exception
            goto L142
        L135:
            r0 = move-exception
            r13 = r8
        L137:
            r8 = r12
            goto L16e
        L139:
            r0 = move-exception
            r13 = r8
            goto L142
        L13c:
            r0 = move-exception
            r13 = r8
            goto L16e
        L13f:
            r0 = move-exception
            r12 = r8
            r13 = r12
        L142:
            com.worklight.common.Logger r10 = com.worklight.common.security.WLCertManager.logger     // Catch: java.lang.Throwable -> L16c
            java.lang.StringBuilder r14 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L16c
            r14.<init>()     // Catch: java.lang.Throwable -> L16c
            java.lang.String r15 = "Failed copying certificate for device authentication with "
            r14.append(r15)     // Catch: java.lang.Throwable -> L16c
            java.lang.String r15 = r0.getMessage()     // Catch: java.lang.Throwable -> L16c
            r14.append(r15)     // Catch: java.lang.Throwable -> L16c
            java.lang.String r15 = " , device authentication certificate will recreate."
            r14.append(r15)     // Catch: java.lang.Throwable -> L16c
            java.lang.String r14 = r14.toString()     // Catch: java.lang.Throwable -> L16c
            r10.error(r14, r0)     // Catch: java.lang.Throwable -> L16c
            if (r12 == 0) goto L166
            r12.close()
        L166:
            if (r13 == 0) goto L179
            r13.close()
            goto L179
        L16c:
            r0 = move-exception
            goto L137
        L16e:
            if (r8 == 0) goto L173
            r8.close()
        L173:
            if (r13 == 0) goto L178
            r13.close()
        L178:
            throw r0
        L179:
            int r11 = r11 + 1
            r10 = 0
            goto Lbd
        L17e:
            return r8
    }

    public void init(android.content.Context r1) {
            r0 = this;
            r0.context = r1
            return
    }

    public void removeEntityKeyStoreValues(java.lang.String r15) {
            r14 = this;
            java.lang.String r0 = java.security.KeyStore.getDefaultType()
            java.security.KeyStore r0 = java.security.KeyStore.getInstance(r0)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            android.content.Context r2 = r14.context
            java.io.File r2 = r2.getFilesDir()
            java.lang.String r2 = r2.getAbsolutePath()
            r1.append(r2)
            java.lang.String r2 = "/"
            r1.append(r2)
            java.lang.String r3 = r14.KEYSTORE_FILENAME
            r1.append(r3)
            java.io.File r3 = new java.io.File
            java.lang.String r1 = r1.toString()
            r3.<init>(r1)
            r1 = 0
            java.lang.String r4 = r14.getAlias(r15)     // Catch: java.lang.Throwable -> L15b java.lang.Exception -> L15e
            boolean r5 = r3.exists()     // Catch: java.lang.Throwable -> L15b java.lang.Exception -> L15e
            if (r5 == 0) goto L5e
            java.io.FileInputStream r5 = new java.io.FileInputStream     // Catch: java.lang.Throwable -> L15b java.lang.Exception -> L15e
            r5.<init>(r3)     // Catch: java.lang.Throwable -> L15b java.lang.Exception -> L15e
            char[] r6 = r14.keyStorePassword     // Catch: java.lang.Exception -> L5b java.lang.Throwable -> L19b
            r0.load(r5, r6)     // Catch: java.lang.Exception -> L5b java.lang.Throwable -> L19b
            boolean r6 = r0.containsAlias(r4)     // Catch: java.lang.Exception -> L5b java.lang.Throwable -> L19b
            if (r6 == 0) goto L56
            r0.deleteEntry(r4)     // Catch: java.lang.Exception -> L5b java.lang.Throwable -> L19b
            java.io.FileOutputStream r6 = new java.io.FileOutputStream     // Catch: java.lang.Exception -> L5b java.lang.Throwable -> L19b
            r6.<init>(r3)     // Catch: java.lang.Exception -> L5b java.lang.Throwable -> L19b
            char[] r3 = r14.keyStorePassword     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r0.store(r6, r3)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            goto L57
        L56:
            r6 = r1
        L57:
            r5.close()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            goto L60
        L5b:
            r15 = move-exception
            goto L160
        L5e:
            r5 = r1
            r6 = r5
        L60:
            java.lang.String r3 = "application"
            boolean r3 = r15.equals(r3)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            if (r3 == 0) goto L89
            if (r6 == 0) goto L78
            r6.close()     // Catch: java.io.IOException -> L6e
            goto L78
        L6e:
            r15 = move-exception
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r1 = r15.getMessage()
            r0.error(r1, r15)
        L78:
            if (r5 == 0) goto L88
            r5.close()     // Catch: java.io.IOException -> L7e
            return
        L7e:
            r15 = move-exception
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r1 = r15.getMessage()
            r0.error(r1, r15)
        L88:
            return
        L89:
            android.content.Context r3 = r14.context     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            android.content.pm.PackageManager r3 = r3.getPackageManager()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            android.content.Context r7 = r14.context     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            android.content.pm.ApplicationInfo r7 = r7.getApplicationInfo()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            int r7 = r7.uid     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.String[] r3 = r3.getPackagesForUid(r7)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            int r7 = r3.length     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r8 = 0
            r9 = 0
        L9e:
            if (r9 >= r7) goto L124
            r10 = r3[r9]     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.io.File r11 = new java.io.File     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.StringBuilder r12 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r12.<init>()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            android.content.Context r13 = r14.context     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            android.content.Context r10 = r13.createPackageContext(r10, r8)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.io.File r10 = r10.getFilesDir()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.String r10 = r10.getAbsolutePath()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r12.append(r10)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r12.append(r2)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.String r10 = r14.KEYSTORE_FILENAME     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r12.append(r10)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.String r10 = r12.toString()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r11.<init>(r10)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            boolean r5 = r11.exists()     // Catch: java.lang.Throwable -> L15b java.lang.Exception -> L15e
            if (r5 == 0) goto L11e
            java.io.FileInputStream r5 = new java.io.FileInputStream     // Catch: java.lang.Throwable -> Lfb java.io.IOException -> L111
            r5.<init>(r11)     // Catch: java.lang.Throwable -> Lfb java.io.IOException -> L111
            char[] r6 = r14.keyStorePassword     // Catch: java.lang.Throwable -> Lf5 java.io.IOException -> Lf9
            r0.load(r5, r6)     // Catch: java.lang.Throwable -> Lf5 java.io.IOException -> Lf9
            r0.deleteEntry(r4)     // Catch: java.lang.Throwable -> Lf5 java.io.IOException -> Lf9
            java.io.FileOutputStream r6 = new java.io.FileOutputStream     // Catch: java.lang.Throwable -> Lf5 java.io.IOException -> Lf9
            r6.<init>(r11)     // Catch: java.lang.Throwable -> Lf5 java.io.IOException -> Lf9
            char[] r10 = r14.keyStorePassword     // Catch: java.lang.Throwable -> Lf0 java.io.IOException -> Lf3
            r0.store(r6, r10)     // Catch: java.lang.Throwable -> Lf0 java.io.IOException -> Lf3
            r6.close()     // Catch: java.lang.Throwable -> Lf0 java.io.IOException -> Lf3
            r5.close()     // Catch: java.lang.Throwable -> Lf0 java.io.IOException -> Lf3
            r5.close()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            goto L11a
        Lf0:
            r15 = move-exception
            r1 = r6
            goto Lf6
        Lf3:
            goto L113
        Lf5:
            r15 = move-exception
        Lf6:
            r0 = r1
            r1 = r5
            goto Lfd
        Lf9:
            r6 = r1
            goto L113
        Lfb:
            r15 = move-exception
            r0 = r1
        Lfd:
            if (r1 == 0) goto L107
            r1.close()     // Catch: java.lang.Throwable -> L103 java.lang.Exception -> L105
            goto L107
        L103:
            r15 = move-exception
            goto L10d
        L105:
            r15 = move-exception
            goto L158
        L107:
            if (r0 == 0) goto L10c
            r0.close()     // Catch: java.lang.Throwable -> L103 java.lang.Exception -> L105
        L10c:
            throw r15     // Catch: java.lang.Throwable -> L103 java.lang.Exception -> L105
        L10d:
            r5 = r1
            r1 = r0
            goto L19c
        L111:
            r5 = r1
            r6 = r5
        L113:
            if (r5 == 0) goto L118
            r5.close()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
        L118:
            if (r6 == 0) goto L120
        L11a:
            r6.close()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            goto L120
        L11e:
            r5 = r1
            r6 = r5
        L120:
            int r9 = r9 + 1
            goto L9e
        L124:
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r1.<init>()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.String r2 = "certificate cleared for entity: "
            r1.append(r2)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r1.append(r15)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            java.lang.String r15 = r1.toString()     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            r0.debug(r15)     // Catch: java.lang.Throwable -> L150 java.lang.Exception -> L155
            if (r6 == 0) goto L14a
            r6.close()     // Catch: java.io.IOException -> L140
            goto L14a
        L140:
            r15 = move-exception
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r1 = r15.getMessage()
            r0.error(r1, r15)
        L14a:
            if (r5 == 0) goto L19a
            r5.close()     // Catch: java.io.IOException -> L190
            return
        L150:
            r15 = move-exception
            r1 = r5
            r5 = r1
            r1 = r6
            goto L19c
        L155:
            r15 = move-exception
            r1 = r5
            r0 = r6
        L158:
            r5 = r1
            r1 = r0
            goto L160
        L15b:
            r15 = move-exception
            r5 = r1
            goto L19c
        L15e:
            r15 = move-exception
            r5 = r1
        L160:
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger     // Catch: java.lang.Throwable -> L19b
            java.lang.StringBuilder r2 = new java.lang.StringBuilder     // Catch: java.lang.Throwable -> L19b
            r2.<init>()     // Catch: java.lang.Throwable -> L19b
            java.lang.String r3 = "Error deleting the keystore containing the certificate "
            r2.append(r3)     // Catch: java.lang.Throwable -> L19b
            java.lang.String r3 = r15.getMessage()     // Catch: java.lang.Throwable -> L19b
            r2.append(r3)     // Catch: java.lang.Throwable -> L19b
            java.lang.String r2 = r2.toString()     // Catch: java.lang.Throwable -> L19b
            r0.error(r2, r15)     // Catch: java.lang.Throwable -> L19b
            if (r1 == 0) goto L18a
            r1.close()     // Catch: java.io.IOException -> L180
            goto L18a
        L180:
            r15 = move-exception
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r1 = r15.getMessage()
            r0.error(r1, r15)
        L18a:
            if (r5 == 0) goto L19a
            r5.close()     // Catch: java.io.IOException -> L190
            return
        L190:
            r15 = move-exception
            com.worklight.common.Logger r0 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r1 = r15.getMessage()
            r0.error(r1, r15)
        L19a:
            return
        L19b:
            r15 = move-exception
        L19c:
            if (r1 == 0) goto L1ac
            r1.close()     // Catch: java.io.IOException -> L1a2
            goto L1ac
        L1a2:
            r0 = move-exception
            com.worklight.common.Logger r1 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r2 = r0.getMessage()
            r1.error(r2, r0)
        L1ac:
            if (r5 == 0) goto L1bc
            r5.close()     // Catch: java.io.IOException -> L1b2
            goto L1bc
        L1b2:
            r0 = move-exception
            com.worklight.common.Logger r1 = com.worklight.common.security.WLCertManager.logger
            java.lang.String r2 = r0.getMessage()
            r1.error(r2, r0)
        L1bc:
            goto L1be
        L1bd:
            throw r15
        L1be:
            goto L1bd
    }

    public java.lang.String signCsr(org.json.JSONObject r3, java.lang.String r4) {
            r2 = this;
            java.lang.String r4 = r2.getAlias(r4)
            java.util.HashMap<java.lang.String, java.security.KeyPair> r0 = r2.keyPairHash
            java.lang.Object r4 = r0.get(r4)
            java.security.KeyPair r4 = (java.security.KeyPair) r4
            java.security.PublicKey r0 = r4.getPublic()
            java.security.interfaces.RSAPublicKey r0 = (java.security.interfaces.RSAPublicKey) r0
            java.security.PrivateKey r4 = r4.getPrivate()
            r1 = 0
            java.lang.String r3 = r2.signJWS(r3, r0, r4, r1)
            return r3
    }

    protected byte[] signData(java.lang.String r2, java.security.PrivateKey r3) {
            r1 = this;
            java.lang.String r0 = "SHA256withRSA"
            java.security.Signature r0 = java.security.Signature.getInstance(r0)
            r0.initSign(r3)
            byte[] r2 = r2.getBytes()
            r0.update(r2)
            byte[] r2 = r0.sign()
            return r2
    }

    public java.lang.String signJWS(org.json.JSONObject r6, java.security.interfaces.RSAPublicKey r7, java.security.PrivateKey r8, java.lang.String r9) {
            r5 = this;
            org.json.JSONObject r0 = new org.json.JSONObject
            r0.<init>()
            java.lang.String r1 = "alg"
            java.lang.String r2 = "RS256"
            r0.put(r1, r2)
            org.json.JSONObject r1 = new org.json.JSONObject
            r1.<init>()
            java.lang.String r2 = "kty"
            java.lang.String r3 = "RSA"
            r1.put(r2, r3)
            java.math.BigInteger r2 = r7.getModulus()
            byte[] r2 = r2.toByteArray()
            java.lang.String r3 = "UTF-8"
            java.lang.String r2 = com.worklight.utils.WLBase64.$r8$backportedMethods$utility$Double$1$hashCode(r2, r3)
            java.lang.String r4 = "n"
            r1.put(r4, r2)
            java.math.BigInteger r7 = r7.getPublicExponent()
            byte[] r7 = r7.toByteArray()
            java.lang.String r7 = com.worklight.utils.WLBase64.$r8$backportedMethods$utility$Double$1$hashCode(r7, r3)
            java.lang.String r2 = "e"
            r1.put(r2, r7)
            if (r9 == 0) goto L43
            java.lang.String r7 = "kid"
            r1.put(r7, r9)
        L43:
            java.lang.String r7 = "jwk"
            r0.put(r7, r1)
            java.lang.String r7 = r0.toString()
            java.lang.String r6 = r6.toString()
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            byte[] r7 = r7.getBytes()
            java.lang.String r7 = com.worklight.utils.WLBase64.$r8$backportedMethods$utility$Double$1$hashCode(r7, r3)
            r9.append(r7)
            java.lang.String r7 = "."
            r9.append(r7)
            byte[] r6 = r6.getBytes()
            java.lang.String r6 = com.worklight.utils.WLBase64.$r8$backportedMethods$utility$Double$1$hashCode(r6, r3)
            r9.append(r6)
            java.lang.String r6 = r9.toString()
            byte[] r8 = r5.signCsrData(r6, r8)
            java.lang.String r8 = com.worklight.utils.WLBase64.$r8$backportedMethods$utility$Double$1$hashCode(r8, r3)
            java.lang.StringBuilder r9 = new java.lang.StringBuilder
            r9.<init>()
            r9.append(r6)
            r9.append(r7)
            r9.append(r8)
            java.lang.String r6 = r9.toString()
            return r6
    }
}

package com.worklight.common;

/* loaded from: classes4.dex */
public class WLConfig {
    private static final java.lang.String ANDROID_ASSET = "/android_asset";
    public static final java.lang.String APP_ID = "id";
    private static final java.lang.String APP_ID_PREF_KEY = "appIdPref";
    private static final java.lang.String APP_INSTALL_TIME_KEY = "appInstallTime";
    private static final java.lang.String CLEAR_CACHE_NEXT_LOAD = "com.worklight.clearCacheNextLoad";
    public static final java.lang.String CLIENT_PLATFORM = "clientPlatform";
    public static final java.lang.String ENABLE_LEGACY_HTTP = "legacy_http";
    private static final java.lang.String IGNORED_FILE_EXTENSIONS = "ignoredFileExtensions";
    private static final java.lang.String IN_PROGRESS_CHECKSUM = "inProgressChecksum";
    private static final java.lang.String LANGUAGE_PREFS = "languagePreferences";
    private static final java.lang.String MFP_PLATFORM_VERSION = "8.0.0.00.2015-12-11T23:31:24Z";
    public static final java.lang.String SDK_PROTOCOL_VERSION_KEY = "sdk_protocol_version";
    private static final java.lang.String SECURITY_PREFS = "SecurityPrefs";
    private static final java.lang.String SECURITY_TOKEN_PREFS = "SecurityTokenPrefs";
    private static final java.lang.String USE_CUSTOM_SERVER_URL = "useCustomServerUrl";
    public static final java.lang.String VERSION = "version";
    public static final java.lang.String WL_APP_ID = "wlAppId";
    public static final java.lang.String WL_APP_VERSION = "wlAppVersion";
    public static final java.lang.String WL_CLIENT_PROPS_NAME = "mfpclient.properties";
    private static final java.lang.String WL_DEFAULT_SERVER_URL = "WLDefaultServerURL";
    private static final java.lang.String WL_DEVICE_ID_STRENGTH = "wlDeviceIdStrength";
    private static final java.lang.String WL_DIRECT_UPDATE_PUBLIC_KEY = "wlSecureDirectUpdatePublicKey";
    public static final java.lang.String WL_DIRECT_UPDATE_TEMP_FOLDER = "wlDirectUppdateTempFolder";
    public static final java.lang.String WL_ENABLE_REFRESH_TOKEN = "wlEnableRefreshToken";
    private static final java.lang.String WL_ENVIRONMENT = "wlEnvironment";
    public static final java.lang.String WL_GCM_SENDER = "GcmSenderId";
    private static final java.lang.String WL_IS_ENCRYPTED = "WLIsEncrypted";
    private static final java.lang.String WL_IS_EXTERNAL_WEBRESOURCES = "WLIsExternalWebResources";
    public static final java.lang.String WL_PLATFORM_VERSION = "wlPlatformVersion";
    private static final java.lang.String WL_PREFS = "WLPrefs";
    private static final java.lang.String WL_RESOURCES_CHECKSUM_PREF_KEY = "wlResourcesChecksum";
    public static final java.lang.String WL_SERVER_CONTEXT = "wlServerContext";
    public static final java.lang.String WL_SERVER_HOST = "wlServerHost";
    public static final java.lang.String WL_SERVER_PORT = "wlServerPort";
    public static final java.lang.String WL_SERVER_PROTOCOL = "wlServerProtocol";
    public static final java.lang.String WL_SERVER_URI = "serverUri";
    private static final java.lang.String WL_SERVER_URL = "WLServerURL";
    public static final java.lang.String WL_SHARE_COOKIES = "wlShareCookies";
    public static final java.lang.String WL_SHARE_USER_CERT = "wlShareUserCert";
    private static final java.lang.String WL_SHOW_ALL_NOTIFICATIONS_IN_TRAY = "showAllNotificationsInTray";
    private static final java.lang.String WL_TEST_WEB_RESOURCES_CHECKSUM = "testWebResourcesChecksum";
    public static final java.lang.String WL_WEB_RESOURCES_UNPACKD_SIZE = "webResourcesSize";
    public static final java.lang.String WL_X_PLATFORM_VERSION = "x-wl-platform-version";
    public static final java.lang.String WL_X_VERSION_HEADER = "x-wl-app-version";
    private static com.worklight.common.WLConfig singleton;
    private java.lang.String absolutePathToExternalAppFiles;
    private android.content.Context con;
    private com.worklight.utils.AESStringEncryption encrypter;
    private boolean isApplicationForeground;
    private boolean isInitComplete;
    private java.lang.String mainFile;
    private java.lang.String oldAbsolutePathToExternalAppFiles;
    private android.content.SharedPreferences prefs;
    private long serverRelativeTime;
    private java.lang.String uuid;
    private java.util.Properties wlProperties;

    static {
            return
    }

    private WLConfig(android.content.Context r11) {
            r10 = this;
            java.lang.String r0 = "/mfp/"
            java.lang.String r1 = "serverUri"
            r10.<init>()
            java.util.Properties r2 = new java.util.Properties
            r2.<init>()
            r10.wlProperties = r2
            r2 = 0
            r10.prefs = r2
            r2 = 0
            r10.isInitComplete = r2
            r10.isApplicationForeground = r2
            boolean r3 = r10.isBOMPresent(r11)
            if (r3 != 0) goto L152
            java.util.Properties r3 = r10.wlProperties     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            android.content.res.AssetManager r4 = r11.getAssets()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r5 = "mfpclient.properties"
            java.io.InputStream r4 = r4.open(r5)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r3.load(r4)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            android.content.pm.PackageManager r3 = r11.getPackageManager()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r4 = r11.getPackageName()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            android.content.pm.PackageInfo r3 = r3.getPackageInfo(r4, r2)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r4 = r10.wlProperties     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r5 = "wlAppId"
            java.lang.String r6 = r3.packageName     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r4.setProperty(r5, r6)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r4 = r10.wlProperties     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.StringBuilder r5 = new java.lang.StringBuilder     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r5.<init>()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = r3.versionName     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r5.append(r3)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = "wlAppVersion"
            java.lang.String r5 = r5.toString()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r4.setProperty(r3, r5)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r3 = r10.wlProperties     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r4 = "wlPlatformVersion"
            java.lang.String r5 = "8.0.0.00.2015-12-11T23:31:24Z"
            r3.setProperty(r4, r5)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = "WLPrefs"
            android.content.SharedPreferences r3 = r11.getSharedPreferences(r3, r2)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r10.prefs = r3     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r10.con = r11     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = ""
            r10.mainFile = r3     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.io.File r3 = r11.getFilesDir()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = r3.getAbsolutePath()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r10.oldAbsolutePathToExternalAppFiles = r3     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.io.File r3 = com.worklight.nativeandroid.common.WLUtils.m8243e(r11)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = r3.getAbsolutePath()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r10.absolutePathToExternalAppFiles = r3     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            android.content.ContentResolver r11 = r11.getContentResolver()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r3 = "android_id"
            java.lang.String r11 = android.provider.Settings.Secure.getString(r11, r3)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r10.uuid = r11     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            com.worklight.utils.AESStringEncryption r3 = new com.worklight.utils.AESStringEncryption     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r3.<init>(r11)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r10.encrypter = r3     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r11 = r10.wlProperties     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r11 = r11.getProperty(r1)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r11 == 0) goto L127
            boolean r3 = r11.isEmpty()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r3 != 0) goto L127
            java.net.URL r3 = new java.net.URL     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r3.<init>(r11)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r11 = r3.getProtocol()     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r4 = r3.getHost()     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            int r5 = r3.getPort()     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r6 = -1
            if (r5 != r6) goto Lc2
            java.lang.String r5 = "https"
            boolean r5 = r11.equals(r5)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r5 == 0) goto Lc0
            r5 = 443(0x1bb, float:6.21E-43)
            goto Lc2
        Lc0:
            r5 = 80
        Lc2:
            java.lang.String r3 = r3.getPath()     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r3 == 0) goto L117
            boolean r6 = r3.isEmpty()     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r6 != 0) goto L117
            int r6 = r3.length()     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r7 = 1
            java.lang.String r3 = r3.substring(r7, r6)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r6 = r10.wlProperties     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r8 = "wlServerProtocol"
            r6.setProperty(r8, r11)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r6 = r10.wlProperties     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r8 = "wlServerHost"
            r6.setProperty(r8, r4)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r6 = r10.wlProperties     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r8 = "wlServerPort"
            java.lang.String r9 = java.lang.String.valueOf(r5)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r6.setProperty(r8, r9)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r6 = r10.wlProperties     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r8 = "wlServerContext"
            r6.setProperty(r8, r0)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r6 = "%s://%s:%d/%s%s"
            r8 = 5
            java.lang.Object[] r8 = new java.lang.Object[r8]     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r8[r2] = r11     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r8[r7] = r4     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r11 = 2
            java.lang.Integer r2 = java.lang.Integer.valueOf(r5)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r8[r11] = r2     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r11 = 3
            r8[r11] = r3     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r11 = 4
            r8[r11] = r0     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r11 = java.lang.String.format(r6, r8)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.util.Properties r0 = r10.wlProperties     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            r0.setProperty(r1, r11)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            goto L127
        L117:
            java.lang.RuntimeException r11 = new java.lang.RuntimeException     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r0 = "The serverUri property does not contain an instanceID. Provide a valid instanceID"
            r11.<init>(r0)     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            throw r11     // Catch: java.net.MalformedURLException -> L11f android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
        L11f:
            java.lang.RuntimeException r11 = new java.lang.RuntimeException     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r0 = "The URI provided in the serverUri property is not valid. Provide a valid URI"
            r11.<init>(r0)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            throw r11     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
        L127:
            if (r11 != 0) goto L142
            java.lang.String r11 = r10.getDefaultHost()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r11 == 0) goto L13a
            java.lang.String r11 = r10.getDefaultHost()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            boolean r11 = r11.isEmpty()     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            if (r11 != 0) goto L13a
            return
        L13a:
            java.lang.RuntimeException r11 = new java.lang.RuntimeException     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            java.lang.String r0 = "You must specify the server host (wlServerHost or serverUri) in the client configuration file (mfpclient.properties)."
            r11.<init>(r0)     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
            throw r11     // Catch: android.content.pm.PackageManager.NameNotFoundException -> L143 java.io.IOException -> L14a
        L142:
            return
        L143:
            r11 = move-exception
            java.lang.Error r0 = new java.lang.Error
            r0.<init>(r11)
            throw r0
        L14a:
            java.lang.RuntimeException r11 = new java.lang.RuntimeException
            java.lang.String r0 = "Client configuration file mfpclient.properties not found in application assets. Use the MFP CLI command 'mfpdev app register' to create the file."
            r11.<init>(r0)
            throw r11
        L152:
            java.lang.RuntimeException r11 = new java.lang.RuntimeException
            java.lang.String r0 = "Client configuration file mfpclient.properties contains a BOM (Byte Order Mark). Save the file without a BOM"
            r11.<init>(r0)
            throw r11
    }

    public static void createInstance(android.content.Context r2) {
            java.lang.Class<com.worklight.common.WLConfig> r0 = com.worklight.common.WLConfig.class
            monitor-enter(r0)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.singleton     // Catch: java.lang.Throwable -> L14
            if (r1 != 0) goto L12
            com.worklight.common.WLConfig r1 = new com.worklight.common.WLConfig     // Catch: java.lang.Throwable -> L14
            android.content.Context r2 = r2.getApplicationContext()     // Catch: java.lang.Throwable -> L14
            r1.<init>(r2)     // Catch: java.lang.Throwable -> L14
            com.worklight.common.WLConfig.singleton = r1     // Catch: java.lang.Throwable -> L14
        L12:
            monitor-exit(r0)
            return
        L14:
            r2 = move-exception
            monitor-exit(r0)
            throw r2
    }

    private java.lang.String getDefaultHost() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlServerHost"
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    private java.lang.String getDefaultPort() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlServerPort"
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    private java.lang.String getDefaultProtocol() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlServerProtocol"
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    private java.lang.String getDefaultRootUrl() {
            r7 = this;
            java.util.Properties r0 = r7.wlProperties
            java.lang.String r1 = "serverUri"
            java.lang.String r0 = r0.getProperty(r1)
            if (r0 == 0) goto L22
            boolean r1 = r0.isEmpty()
            if (r1 != 0) goto L22
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r1.append(r0)
            java.lang.String r0 = "api"
            r1.append(r0)
            java.lang.String r0 = r1.toString()
            return r0
        L22:
            java.lang.String r0 = r7.getDefaultProtocol()
            java.lang.String r1 = "https"
            boolean r0 = r1.equalsIgnoreCase(r0)
            r1 = 1
            r2 = 0
            if (r0 == 0) goto L3e
            java.lang.String r0 = r7.getDefaultPort()
            java.lang.String r3 = "443"
            boolean r0 = r3.equals(r0)
            if (r0 == 0) goto L3e
            r0 = 1
            goto L3f
        L3e:
            r0 = 0
        L3f:
            java.lang.String r3 = r7.getDefaultPort()
            boolean r3 = com.worklight.nativeandroid.common.WLUtils.SuppressLint(r3)
            java.lang.String r4 = ""
            if (r3 != 0) goto L63
            if (r0 != 0) goto L63
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r3 = ":"
            r0.append(r3)
            java.lang.String r3 = r7.getDefaultPort()
            r0.append(r3)
            java.lang.String r0 = r0.toString()
            goto L64
        L63:
            r0 = r4
        L64:
            java.lang.String r3 = r7.getDefaultProtocol()
            boolean r3 = com.worklight.nativeandroid.common.WLUtils.SuppressLint(r3)
            java.lang.String r5 = "/"
            if (r3 != 0) goto L7f
            java.lang.String r3 = r7.getDefaultServerContext()
            boolean r3 = r3.equals(r5)
            if (r3 == 0) goto L7b
            goto L7f
        L7b:
            java.lang.String r4 = r7.getDefaultServerContext()
        L7f:
            r3 = 4
            java.lang.Object[] r3 = new java.lang.Object[r3]
            java.lang.String r6 = r7.getDefaultProtocol()
            r3[r2] = r6
            java.lang.String r6 = r7.getDefaultHost()
            r3[r1] = r6
            r6 = 2
            r3[r6] = r0
            r0 = 3
            r3[r0] = r4
            java.lang.String r0 = "%s://%s%s%sapi/"
            java.lang.String r0 = java.lang.String.format(r0, r3)
            boolean r3 = r0.endsWith(r5)
            if (r3 == 0) goto La9
            int r3 = r0.length()
            int r3 = r3 - r1
            java.lang.String r0 = r0.substring(r2, r3)
        La9:
            return r0
    }

    private java.lang.String getDefaultServerContext() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlServerContext"
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    public static com.worklight.common.WLConfig getInstance() {
            com.worklight.common.WLConfig r0 = com.worklight.common.WLConfig.singleton
            if (r0 == 0) goto L5
            return r0
        L5:
            java.lang.IllegalStateException r0 = new java.lang.IllegalStateException
            java.lang.String r1 = "getInstance can't be called before createInstance"
            r0.<init>(r1)
            throw r0
    }

    private java.lang.String getPropertyOrPref(java.lang.String r3, java.lang.String r4) {
            r2 = this;
            android.content.SharedPreferences r0 = r2.prefs
            r1 = 0
            java.lang.String r4 = r0.getString(r4, r1)
            if (r4 != 0) goto L12
            java.util.Properties r4 = r2.wlProperties
            java.lang.Object r3 = r4.get(r3)
            r4 = r3
            java.lang.String r4 = (java.lang.String) r4
        L12:
            return r4
    }

    private int getSDKProtocolVersion() {
            r1 = this;
            r0 = 1
            return r0
    }

    private boolean isBOMPresent(android.content.Context r4) {
            r3 = this;
            android.content.res.AssetManager r4 = r4.getAssets()     // Catch: java.lang.Exception -> L29
            java.lang.String r0 = "mfpclient.properties"
            java.io.InputStream r4 = r4.open(r0)     // Catch: java.lang.Exception -> L29
            java.io.BufferedReader r0 = new java.io.BufferedReader     // Catch: java.lang.Exception -> L29
            java.io.InputStreamReader r1 = new java.io.InputStreamReader     // Catch: java.lang.Exception -> L29
            java.lang.String r2 = "UTF8"
            r1.<init>(r4, r2)     // Catch: java.lang.Exception -> L29
            r0.<init>(r1)     // Catch: java.lang.Exception -> L29
            r4 = 4
            r0.mark(r4)     // Catch: java.lang.Exception -> L29
            r4 = 65279(0xfeff, float:9.1475E-41)
            int r1 = r0.read()     // Catch: java.lang.Exception -> L29
            if (r4 != r1) goto L25
            r4 = 1
            return r4
        L25:
            r0.reset()     // Catch: java.lang.Exception -> L29
            goto L2d
        L29:
            r4 = move-exception
            r4.printStackTrace()
        L2d:
            r4 = 0
            return r4
    }

    public void clearSecurityTokenPref() {
            r3 = this;
            android.content.Context r0 = r3.con
            java.lang.String r1 = "SecurityTokenPrefs"
            r2 = 0
            android.content.SharedPreferences r0 = r0.getSharedPreferences(r1, r2)
            android.content.SharedPreferences$Editor r0 = r0.edit()
            r0.clear()
            r0.commit()
            return
    }

    public void clearWLPref() {
            r1 = this;
            android.content.SharedPreferences r0 = r1.prefs
            android.content.SharedPreferences$Editor r0 = r0.edit()
            r0.clear()
            r0.commit()
            return
    }

    public java.lang.String getAppId() {
            r2 = this;
            java.lang.String r0 = "wlAppId"
            java.lang.String r1 = "appIdPref"
            java.lang.String r0 = r2.getPropertyOrPref(r0, r1)
            return r0
    }

    public java.net.URL getAppURL() {
            r3 = this;
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch: java.net.MalformedURLException -> L27
            r0.<init>()     // Catch: java.net.MalformedURLException -> L27
            java.lang.String r1 = r3.getRootURL()     // Catch: java.net.MalformedURLException -> L27
            r0.append(r1)     // Catch: java.net.MalformedURLException -> L27
            java.lang.String r1 = "/apps/services/api/"
            r0.append(r1)     // Catch: java.net.MalformedURLException -> L27
            java.lang.String r1 = r3.getAppId()     // Catch: java.net.MalformedURLException -> L27
            r0.append(r1)     // Catch: java.net.MalformedURLException -> L27
            java.lang.String r1 = "/android/"
            r0.append(r1)     // Catch: java.net.MalformedURLException -> L27
            java.net.URL r1 = new java.net.URL     // Catch: java.net.MalformedURLException -> L27
            java.lang.String r0 = r0.toString()     // Catch: java.net.MalformedURLException -> L27
            r1.<init>(r0)     // Catch: java.net.MalformedURLException -> L27
            return r1
        L27:
            r0 = move-exception
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = "Could not parse URL; check assets/mfpclient.properties. "
            r1.append(r2)
            java.lang.String r2 = r0.getMessage()
            r1.append(r2)
            java.lang.RuntimeException r2 = new java.lang.RuntimeException
            java.lang.String r1 = r1.toString()
            r2.<init>(r1, r0)
            throw r2
    }

    public java.lang.String getAppWebUrl() {
            r3 = this;
            java.lang.String r0 = r3.getMainFileFromDescriptor()
            java.lang.String r1 = "http:"
            boolean r1 = r0.startsWith(r1)
            if (r1 != 0) goto L2d
            java.lang.String r1 = "https:"
            boolean r1 = r0.startsWith(r1)
            if (r1 == 0) goto L15
            goto L2d
        L15:
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            java.lang.String r2 = r3.getWebUrl()
            r1.append(r2)
            java.lang.String r2 = "/"
            r1.append(r2)
            r1.append(r0)
            java.lang.String r0 = r1.toString()
        L2d:
            return r0
    }

    public java.lang.String getApplicationAbsolutePathToExternalAppFiles() {
            r1 = this;
            java.lang.String r0 = r1.absolutePathToExternalAppFiles
            return r0
    }

    public java.lang.String getApplicationAbsolutePathToExternalWWWFiles() {
            r2 = this;
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = r2.absolutePathToExternalAppFiles
            r0.append(r1)
            java.lang.String r1 = "/www"
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            return r0
    }

    public org.json.JSONObject getApplicationData() {
            r3 = this;
            org.json.JSONObject r0 = new org.json.JSONObject
            r0.<init>()
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.singleton
            java.lang.String r1 = r1.getPackageName()
            java.lang.String r2 = "id"
            r0.put(r2, r1)
            java.lang.String r1 = "clientPlatform"
            java.lang.String r2 = "android"
            r0.put(r1, r2)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.singleton
            java.lang.String r1 = r1.getApplicationVersion()
            java.lang.String r2 = "version"
            r0.put(r2, r1)
            return r0
    }

    public long getApplicationInstallTime() {
            r2 = this;
            java.lang.String r0 = "appInstallTime"
            long r0 = r2.readLongWLPref(r0)
            return r0
    }

    public java.lang.String getApplicationOldAbsolutePathToExternalWWWFiles() {
            r2 = this;
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = r2.oldAbsolutePathToExternalAppFiles
            r0.append(r1)
            java.lang.String r1 = "/www"
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            return r0
    }

    public java.lang.String getApplicationVersion() {
            r2 = this;
            java.lang.String r0 = "wlAppVersion"
            java.lang.String r1 = "appIdPref"
            java.lang.String r0 = r2.getPropertyOrPref(r0, r1)
            return r0
    }

    public org.json.JSONObject getClientData() {
            r3 = this;
            com.worklight.common.security.WLDeviceAuthManager r0 = com.worklight.common.security.WLDeviceAuthManager.getInstance()
            org.json.JSONObject r0 = r0.getDeviceData()
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.singleton
            java.lang.String r1 = r1.getPackageName()
            java.lang.String r2 = "id"
            r0.put(r2, r1)
            java.lang.String r1 = "clientPlatform"
            java.lang.String r2 = "android"
            r0.put(r1, r2)
            com.worklight.common.WLConfig r1 = com.worklight.common.WLConfig.singleton
            java.lang.String r1 = r1.getApplicationVersion()
            java.lang.String r2 = "version"
            r0.put(r2, r1)
            int r1 = r3.getSDKProtocolVersion()
            java.lang.String r2 = "sdk_protocol_version"
            r0.put(r2, r1)
            return r0
    }

    public long getCurrentWithRelativeTime() {
            r4 = this;
            long r0 = java.lang.System.currentTimeMillis()
            long r2 = r4.serverRelativeTime
            long r0 = r0 + r2
            return r0
    }

    public java.lang.String getDirectUpdatePublicKey() {
            r3 = this;
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r1 = "wlSecureDirectUpdatePublicKey"
            java.lang.String r2 = ""
            java.lang.String r0 = r0.getProperty(r1, r2)
            return r0
    }

    public java.lang.String getHost() {
            r3 = this;
            java.lang.String r0 = r3.getRootURL()
            java.lang.String r1 = "wlServerHost"
            if (r0 == 0) goto L1d
            java.net.URL r2 = new java.net.URL     // Catch: java.net.MalformedURLException -> L12
            r2.<init>(r0)     // Catch: java.net.MalformedURLException -> L12
            java.lang.String r0 = r2.getHost()     // Catch: java.net.MalformedURLException -> L12
            return r0
        L12:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
        L1d:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    public long getInProgressChecksumPref() {
            r2 = this;
            java.lang.String r0 = "inProgressChecksum"
            long r0 = r2.readLongWLPref(r0)
            return r0
    }

    public java.lang.String getLanguagePreferences() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "languagePreferences"
            java.lang.String r0 = r0.getProperty(r1)
            return r0
    }

    public java.lang.String getLocalStorageRoot() {
            r1 = this;
            boolean r0 = r1.isExternalWebResources()
            if (r0 == 0) goto Lb
            java.lang.String r0 = r1.getApplicationAbsolutePathToExternalAppFiles()
            goto Ld
        Lb:
            java.lang.String r0 = "/android_asset"
        Ld:
            return r0
    }

    public java.lang.String getMainFileFromDescriptor() {
            r5 = this;
            java.lang.String r0 = r5.mainFile
            java.lang.String r1 = ""
            boolean r0 = r0.equals(r1)
            if (r0 == 0) goto L63
            android.content.Context r0 = r5.con
            android.content.res.Resources r0 = r0.getResources()
            android.content.Context r2 = r5.con
            java.lang.String r2 = r2.getPackageName()
            java.lang.String r3 = "config"
            java.lang.String r4 = "xml"
            int r0 = r0.getIdentifier(r3, r4, r2)
            android.content.Context r2 = r5.con     // Catch: java.lang.Exception -> L5c
            android.content.res.Resources r2 = r2.getResources()     // Catch: java.lang.Exception -> L5c
            android.content.res.XmlResourceParser r0 = r2.getXml(r0)     // Catch: java.lang.Exception -> L5c
            r0.next()     // Catch: java.lang.Exception -> L5c
            int r2 = r0.getEventType()     // Catch: java.lang.Exception -> L5c
        L2f:
            r3 = 1
            if (r2 == r3) goto L4f
            r3 = 2
            if (r2 != r3) goto L4a
            java.lang.String r2 = r0.getName()     // Catch: java.lang.Exception -> L5c
            java.lang.String r3 = "content"
            boolean r2 = r2.equals(r3)     // Catch: java.lang.Exception -> L5c
            if (r2 == 0) goto L4a
            r2 = 0
            java.lang.String r3 = "src"
            java.lang.String r2 = r0.getAttributeValue(r2, r3)     // Catch: java.lang.Exception -> L5c
            r5.mainFile = r2     // Catch: java.lang.Exception -> L5c
        L4a:
            int r2 = r0.next()     // Catch: java.lang.Exception -> L5c
            goto L2f
        L4f:
            java.lang.String r0 = r5.mainFile     // Catch: java.lang.Exception -> L5c
            boolean r0 = r0.equals(r1)     // Catch: java.lang.Exception -> L5c
            if (r0 == 0) goto L63
            java.lang.String r0 = "index.html"
            r5.mainFile = r0     // Catch: java.lang.Exception -> L5c
            goto L63
        L5c:
            r0 = move-exception
            r0.getMessage()
            r0.printStackTrace()
        L63:
            java.lang.String r0 = r5.mainFile
            return r0
    }

    public java.lang.String getMainFilePath() {
            r2 = this;
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = r2.getAppId()
            r0.append(r1)
            java.lang.String r1 = ".html"
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            return r0
    }

    public java.lang.String[] getMediaExtensions() {
            r3 = this;
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r1 = "ignoredFileExtensions"
            java.lang.String r0 = r0.getProperty(r1)
            if (r0 == 0) goto L19
            java.lang.String r1 = " "
            java.lang.String r2 = ""
            java.lang.String r0 = r0.replaceAll(r1, r2)
            java.lang.String r1 = ","
            java.lang.String[] r0 = r0.split(r1)
            return r0
        L19:
            r0 = 0
            return r0
    }

    public java.lang.String getPackageName() {
            r1 = this;
            android.content.Context r0 = r1.con
            java.lang.String r0 = r0.getPackageName()
            return r0
    }

    public java.lang.String getPlatformVersion() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlPlatformVersion"
            java.lang.String r0 = r0.getProperty(r1)
            return r0
    }

    public java.lang.String getPort() {
            r3 = this;
            java.lang.String r0 = r3.getRootURL()
            java.lang.String r1 = "wlServerPort"
            if (r0 == 0) goto L29
            java.net.URL r2 = new java.net.URL     // Catch: java.net.MalformedURLException -> L1e
            r2.<init>(r0)     // Catch: java.net.MalformedURLException -> L1e
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch: java.net.MalformedURLException -> L1e
            r0.<init>()     // Catch: java.net.MalformedURLException -> L1e
            int r2 = r2.getPort()     // Catch: java.net.MalformedURLException -> L1e
            r0.append(r2)     // Catch: java.net.MalformedURLException -> L1e
            java.lang.String r0 = r0.toString()     // Catch: java.net.MalformedURLException -> L1e
            return r0
        L1e:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
        L29:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    public java.lang.String getProtocol() {
            r3 = this;
            java.lang.String r0 = r3.getRootURL()
            java.lang.String r1 = "wlServerProtocol"
            if (r0 == 0) goto L1d
            java.net.URL r2 = new java.net.URL     // Catch: java.net.MalformedURLException -> L12
            r2.<init>(r0)     // Catch: java.net.MalformedURLException -> L12
            java.lang.String r0 = r2.getProtocol()     // Catch: java.net.MalformedURLException -> L12
            return r0
        L12:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
        L1d:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.String r0 = r0.trim()
            return r0
    }

    public org.json.JSONObject getRegistrationAttributesData() {
            r3 = this;
            org.json.JSONObject r0 = new org.json.JSONObject
            r0.<init>()
            int r1 = r3.getSDKProtocolVersion()
            java.lang.String r2 = "sdk_protocol_version"
            r0.put(r2, r1)
            return r0
    }

    public java.lang.String getResourceChecksumPref() {
            r1 = this;
            java.lang.String r0 = "wlResourcesChecksum"
            java.lang.String r0 = r1.readWLPref(r0)
            return r0
    }

    public java.lang.String getRootURL() {
            r3 = this;
            boolean r0 = r3.shouldUseCustomServerUrl()
            if (r0 != 0) goto Lb
            java.lang.String r0 = r3.getDefaultRootUrl()
            return r0
        Lb:
            android.content.SharedPreferences r0 = r3.prefs
            r1 = 0
            java.lang.String r2 = "WLServerURL"
            java.lang.String r0 = r0.getString(r2, r1)
            if (r0 != 0) goto L1a
            java.lang.String r0 = r3.getDefaultRootUrl()
        L1a:
            return r0
    }

    public java.lang.String getServerContext() {
            r3 = this;
            java.lang.String r0 = r3.getRootURL()
            java.util.Properties r1 = r3.wlProperties
            java.lang.String r2 = "serverUri"
            java.lang.String r1 = r1.getProperty(r2)
            java.lang.String r2 = "wlServerContext"
            if (r1 == 0) goto L2e
            boolean r1 = r1.isEmpty()
            if (r1 != 0) goto L2e
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r2)
            java.lang.StringBuilder r1 = new java.lang.StringBuilder
            r1.<init>()
            r1.append(r0)
            java.lang.String r0 = "api"
            r1.append(r0)
            java.lang.String r0 = r1.toString()
            return r0
        L2e:
            if (r0 == 0) goto L45
            java.net.URL r1 = new java.net.URL     // Catch: java.net.MalformedURLException -> L3a
            r1.<init>(r0)     // Catch: java.net.MalformedURLException -> L3a
            java.lang.String r0 = r1.getPath()     // Catch: java.net.MalformedURLException -> L3a
            return r0
        L3a:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r2)
            java.lang.String r0 = r0.trim()
            return r0
        L45:
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r0 = r0.getProperty(r2)
            java.lang.String r0 = r0.trim()
            return r0
    }

    public java.util.List<java.lang.String> getShareCookies() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlShareCookies"
            java.lang.String r0 = r0.getProperty(r1)
            if (r0 != 0) goto Lc
            java.lang.String r0 = ""
        Lc:
            java.lang.String r1 = ","
            java.lang.String[] r0 = r0.split(r1)
            java.util.List r0 = java.util.Arrays.asList(r0)
            return r0
    }

    public java.lang.String getTestWebResourcesChecksumFlag() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "testWebResourcesChecksum"
            java.lang.String r0 = r0.getProperty(r1)
            return r0
    }

    public java.lang.String getWebResourcesUnpackedSize() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "webResourcesSize"
            java.lang.String r0 = r0.getProperty(r1)
            return r0
    }

    public java.lang.String getWebResourcesUrl() {
            r2 = this;
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = r2.getLocalStorageRoot()
            r0.append(r1)
            java.lang.String r1 = "/www"
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            return r0
    }

    public java.lang.String getWebUrl() {
            r2 = this;
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = "file://"
            r0.append(r1)
            java.lang.String r1 = r2.getWebResourcesUrl()
            r0.append(r1)
            java.lang.String r0 = r0.toString()
            return r0
    }

    public java.lang.String getWlGenerateDeviceIdStrong() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlDeviceIdStrength"
            java.lang.String r0 = r0.getProperty(r1)
            return r0
    }

    public boolean isClearCacheNextLoad() {
            r3 = this;
            android.content.SharedPreferences r0 = r3.prefs
            java.lang.String r1 = "com.worklight.clearCacheNextLoad"
            r2 = 0
            boolean r0 = r0.getBoolean(r1, r2)
            return r0
    }

    public boolean isEncrypted() {
            r1 = this;
            java.lang.String r0 = "WLIsEncrypted"
            java.lang.String r0 = r1.readWLPref(r0)
            java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)
            boolean r0 = r0.booleanValue()
            return r0
    }

    public boolean isExternalWebResources() {
            r1 = this;
            java.lang.String r0 = "WLIsExternalWebResources"
            java.lang.String r0 = r1.readWLPref(r0)
            java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)
            boolean r0 = r0.booleanValue()
            return r0
    }

    public boolean isHybridActivityInForeground() {
            r1 = this;
            boolean r0 = r1.isApplicationForeground
            return r0
    }

    public boolean isInitComplete() {
            r1 = this;
            boolean r0 = r1.isInitComplete
            return r0
    }

    public boolean isRefreshTokenEnabled() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlEnableRefreshToken"
            java.lang.String r0 = r0.getProperty(r1)
            if (r0 == 0) goto L18
            java.lang.String r0 = r0.trim()
            java.lang.String r1 = "true"
            boolean r0 = r0.equalsIgnoreCase(r1)
            if (r0 == 0) goto L18
            r0 = 1
            return r0
        L18:
            r0 = 0
            return r0
    }

    public boolean isShareUserCert() {
            r2 = this;
            java.util.Properties r0 = r2.wlProperties
            java.lang.String r1 = "wlShareUserCert"
            java.lang.String r0 = r0.getProperty(r1)
            java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)
            boolean r0 = r0.booleanValue()
            return r0
    }

    public boolean isShouldTestWebResourcesChecksum() {
            r2 = this;
            java.lang.String r0 = r2.getTestWebResourcesChecksumFlag()
            java.lang.String r1 = "true"
            boolean r0 = r0.equals(r1)
            return r0
    }

    public boolean isShowAllNotificationsInTray() {
            r3 = this;
            java.util.Properties r0 = r3.wlProperties
            java.lang.String r1 = "showAllNotificationsInTray"
            java.lang.String r2 = "false"
            java.lang.String r0 = r0.getProperty(r1, r2)
            java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)
            boolean r0 = r0.booleanValue()
            return r0
    }

    public long readLongWLPref(java.lang.String r4) {
            r3 = this;
            android.content.SharedPreferences r0 = r3.prefs
            r1 = 0
            long r0 = r0.getLong(r4, r1)
            return r0
    }

    public java.lang.String readPref(java.lang.String r3, java.lang.String r4) {
            r2 = this;
            android.content.Context r0 = r2.con
            r1 = 0
            android.content.SharedPreferences r3 = r0.getSharedPreferences(r3, r1)
            r0 = 0
            java.lang.String r3 = r3.getString(r4, r0)
            return r3
    }

    public java.lang.String readPrefEncrypted(java.lang.String r2, java.lang.String r3) {
            r1 = this;
            java.lang.String r2 = r1.readPref(r2, r3)
            if (r2 == 0) goto L1b
            com.worklight.utils.AESStringEncryption r3 = r1.encrypter
            byte[] r2 = r2.getBytes()
            r0 = 2
            byte[] r2 = android.util.Base64.decode(r2, r0)
            byte[] r2 = r3.m8236e(r0, r2)
            java.lang.String r3 = new java.lang.String
            r3.<init>(r2)
            r2 = r3
        L1b:
            return r2
    }

    public java.lang.String readSecurityPref(java.lang.String r2) {
            r1 = this;
            java.lang.String r0 = "SecurityPrefs"
            java.lang.String r2 = r1.readPrefEncrypted(r0, r2)
            return r2
    }

    public java.lang.String readSecurityTokenPref(java.lang.String r2) {
            r1 = this;
            java.lang.String r0 = "SecurityTokenPrefs"
            java.lang.String r2 = r1.readPrefEncrypted(r0, r2)
            return r2
    }

    public java.lang.String readWLPref(java.lang.String r2) {
            r1 = this;
            java.lang.String r0 = "WLPrefs"
            java.lang.String r2 = r1.readPref(r0, r2)
            return r2
    }

    public java.lang.String readWLPrefEncrypted(java.lang.String r2) {
            r1 = this;
            java.lang.String r0 = "WLPrefs"
            java.lang.String r2 = r1.readPrefEncrypted(r0, r2)
            return r2
    }

    public void removeSecurityTokenPref(java.lang.String r4) {
            r3 = this;
            android.content.Context r0 = r3.con
            java.lang.String r1 = "SecurityTokenPrefs"
            r2 = 0
            android.content.SharedPreferences r0 = r0.getSharedPreferences(r1, r2)
            android.content.SharedPreferences$Editor r0 = r0.edit()
            r0.remove(r4)
            r0.commit()
            return
    }

    public void setApplicationInstallTime(long r2) {
            r1 = this;
            java.lang.String r0 = "appInstallTime"
            r1.writeLongWLPref(r0, r2)
            return
    }

    public void setClearCacheNextLoadPref(boolean r3) {
            r2 = this;
            android.content.SharedPreferences r0 = r2.prefs
            android.content.SharedPreferences$Editor r0 = r0.edit()
            java.lang.String r1 = "com.worklight.clearCacheNextLoad"
            r0.putBoolean(r1, r3)
            r0.commit()
            return
    }

    public void setDefaultRootUrlPref() {
            r2 = this;
            java.lang.String r0 = r2.getDefaultRootUrl()
            java.lang.String r1 = "WLDefaultServerURL"
            r2.writeWLPref(r1, r0)
            return
    }

    public void setExternalWebResourcesPref(boolean r2) {
            r1 = this;
            java.lang.String r2 = java.lang.Boolean.toString(r2)
            java.lang.String r0 = "WLIsExternalWebResources"
            r1.writeWLPref(r0, r2)
            return
    }

    public void setHybridActivityInForeground(boolean r1) {
            r0 = this;
            r0.isApplicationForeground = r1
            return
    }

    public void setInProgressChecksumPref(long r2) {
            r1 = this;
            java.lang.String r0 = "inProgressChecksum"
            r1.writeLongWLPref(r0, r2)
            return
    }

    public void setInitComplete(boolean r1) {
            r0 = this;
            r0.isInitComplete = r1
            return
    }

    public void setIsEncrypted(boolean r2) {
            r1 = this;
            java.lang.String r2 = java.lang.Boolean.toString(r2)
            java.lang.String r0 = "WLIsEncrypted"
            r1.writeWLPref(r0, r2)
            return
    }

    public void setResourceChecksumPref(java.lang.String r2) {
            r1 = this;
            java.lang.String r0 = "wlResourcesChecksum"
            r1.writeWLPref(r0, r2)
            return
    }

    public void setServerRelativeTime(long r1) {
            r0 = this;
            r0.serverRelativeTime = r1
            return
    }

    public void setServerUrl(java.lang.String r2) {
            r1 = this;
            r0 = 1
            r1.useCustomServerUrl(r0)
            java.lang.String r0 = "WLServerURL"
            r1.writeWLPref(r0, r2)
            return
    }

    public boolean shouldUseCustomServerUrl() {
            r3 = this;
            android.content.SharedPreferences r0 = r3.prefs
            java.lang.String r1 = "useCustomServerUrl"
            r2 = 0
            java.lang.String r0 = r0.getString(r1, r2)
            java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)
            boolean r0 = r0.booleanValue()
            return r0
    }

    public void useCustomServerUrl(boolean r2) {
            r1 = this;
            java.lang.String r2 = java.lang.Boolean.toString(r2)
            java.lang.String r0 = "useCustomServerUrl"
            r1.writeWLPref(r0, r2)
            return
    }

    public void writeLongWLPref(java.lang.String r2, long r3) {
            r1 = this;
            android.content.SharedPreferences r0 = r1.prefs
            android.content.SharedPreferences$Editor r0 = r0.edit()
            r0.putLong(r2, r3)
            r0.commit()
            return
    }

    public void writePref(java.lang.String r3, java.lang.String r4, java.lang.String r5) {
            r2 = this;
            android.content.Context r0 = r2.con
            r1 = 0
            android.content.SharedPreferences r3 = r0.getSharedPreferences(r3, r1)
            android.content.SharedPreferences$Editor r3 = r3.edit()
            r3.putString(r4, r5)
            r3.commit()
            return
    }

    public void writePrefEncrypted(java.lang.String r3, java.lang.String r4, java.lang.String r5) {
            r2 = this;
            if (r5 == 0) goto L12
            com.worklight.utils.AESStringEncryption r0 = r2.encrypter
            r1 = 1
            byte[] r5 = r5.getBytes()
            byte[] r5 = r0.m8236e(r1, r5)
            r0 = 2
            java.lang.String r5 = android.util.Base64.encodeToString(r5, r0)
        L12:
            r2.writePref(r3, r4, r5)
            return
    }

    public void writeSecurityPref(java.lang.String r2, java.lang.String r3) {
            r1 = this;
            java.lang.String r0 = "SecurityPrefs"
            r1.writePrefEncrypted(r0, r2, r3)
            return
    }

    public void writeSecurityTokenPref(java.lang.String r2, java.lang.String r3) {
            r1 = this;
            java.lang.String r0 = "SecurityTokenPrefs"
            r1.writePrefEncrypted(r0, r2, r3)
            return
    }

    public void writeWLPref(java.lang.String r2, java.lang.String r3) {
            r1 = this;
            java.lang.String r0 = "WLPrefs"
            r1.writePref(r0, r2, r3)
            return
    }

    public void writeWLPrefEncrypted(java.lang.String r2, java.lang.String r3) {
            r1 = this;
            java.lang.String r0 = "WLPrefs"
            r1.writePrefEncrypted(r0, r2, r3)
            return
    }
}

package br.com.original.common.cryptography;

@kotlin.Metadata(m7317a = {1, 1, 15}, m7316d = {"\u0000:\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0000\n\u0002\u0010\b\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0012\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0005\bÆ\u0002\u0018\u00002\u00020\u0001B\u0007\b\u0002¢\u0006\u0002\u0010\u0002J\u001a\u0010\b\u001a\u0004\u0018\u00010\u00042\u0006\u0010\t\u001a\u00020\u00042\b\u0010\n\u001a\u0004\u0018\u00010\u000bJ\u0018\u0010\b\u001a\u0004\u0018\u00010\u00042\u0006\u0010\t\u001a\u00020\u00042\u0006\u0010\n\u001a\u00020\u0004J\u001a\u0010\f\u001a\u0004\u0018\u00010\u00042\u0006\u0010\t\u001a\u00020\u00042\b\u0010\r\u001a\u0004\u0018\u00010\u000eJ\u0018\u0010\f\u001a\u0004\u0018\u00010\u00042\u0006\u0010\t\u001a\u00020\u00042\u0006\u0010\r\u001a\u00020\u000fJ\u0018\u0010\f\u001a\u0004\u0018\u00010\u00042\u0006\u0010\t\u001a\u00020\u00042\u0006\u0010\r\u001a\u00020\u0004J\u0006\u0010\u0010\u001a\u00020\u0011J\u0010\u0010\u0012\u001a\n \u0014*\u0004\u0018\u00010\u00130\u0013H\u0002J\u0012\u0010\u0015\u001a\u0004\u0018\u00010\u000b2\u0006\u0010\t\u001a\u00020\u0004H\u0002J\u0012\u0010\u0016\u001a\u0004\u0018\u00010\u000e2\u0006\u0010\t\u001a\u00020\u000fH\u0002J\u0012\u0010\u0017\u001a\u0004\u0018\u00010\u000e2\u0006\u0010\t\u001a\u00020\u0004H\u0002R\u000e\u0010\u0003\u001a\u00020\u0004X\u0082T¢\u0006\u0002\n\u0000R\u000e\u0010\u0005\u001a\u00020\u0006X\u0082T¢\u0006\u0002\n\u0000R\u000e\u0010\u0007\u001a\u00020\u0006X\u0082T¢\u0006\u0002\n\u0000¨\u0006\u0018"}, m7315e = {"Lbr/com/original/common/cryptography/AsymmetricCryptography;", "", "()V", "ALGORITHM", "", "CRYPTO_BITS", "", "base64Flag", "decrypt", "value", "privateKey", "Ljava/security/PrivateKey;", "encrypt", "publicKey", "Ljava/security/PublicKey;", "", "generateKeyPair", "Ljava/security/KeyPair;", "getCipher", "Ljavax/crypto/Cipher;", "kotlin.jvm.PlatformType", "privateKeyFromString", "publicKeyFromByteArray", "publicKeyFromString", "common_prodRelease"})
/* loaded from: classes3.dex */
public final class AsymmetricCryptography {
    private static int $r8$backportedMethods$utility$Double$1$hashCode = 0;
    private static final java.lang.String ALGORITHM = "RSA";
    private static final int CRYPTO_BITS = 2048;
    public static final br.com.original.common.cryptography.AsymmetricCryptography INSTANCE = null;
    private static int SuppressLint = 1;

    /* renamed from: a */
    private static byte[] f20234a = null;
    private static final int base64Flag = 2;

    /* renamed from: c */
    private static int f20235c;

    /* renamed from: d */
    private static int f20236d;

    /* renamed from: e */
    private static char[] f20237e;
    private static short[] extraCallback;
    private static int value;

    static {
            m11360d()     // Catch: java.lang.NullPointerException -> L2d
            br.com.original.common.cryptography.AsymmetricCryptography r0 = new br.com.original.common.cryptography.AsymmetricCryptography     // Catch: java.lang.NullPointerException -> L2d
            r0.<init>()     // Catch: java.lang.NullPointerException -> L2d
            br.com.original.common.cryptography.AsymmetricCryptography.INSTANCE = r0     // Catch: java.lang.IllegalStateException -> L2b java.lang.NullPointerException -> L2d
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value     // Catch: java.lang.NumberFormatException -> L29
            r1 = r0 & 45
            r0 = r0 | 45
            int r1 = r1 + r0
            int r0 = r1 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0     // Catch: java.lang.IllegalArgumentException -> L27
            int r1 = r1 % 2
            r0 = 1
            if (r1 != 0) goto L1c
            r1 = 0
            goto L1d
        L1c:
            r1 = 1
        L1d:
            if (r1 == r0) goto L26
            r0 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L24
            return
        L24:
            r0 = move-exception
            throw r0
        L26:
            return
        L27:
            r0 = move-exception
            goto L2a
        L29:
            r0 = move-exception
        L2a:
            throw r0
        L2b:
            r0 = move-exception
            goto L2e
        L2d:
            r0 = move-exception
        L2e:
            throw r0
    }

    private AsymmetricCryptography() {
            r0 = this;
            r0.<init>()
            return
    }

    /* renamed from: c */
    private static java.lang.String m11361c(short r6, int r7, byte r8, int r9, int r10) {
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.f20235c
            int r7 = r7 + r1
            r1 = -1
            r2 = 0
            r3 = 1
            if (r7 != r1) goto Lf
            r1 = 1
            goto L10
        Lf:
            r1 = 0
        L10:
            if (r1 == 0) goto L42
            int r7 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r7 = r7 + 31
            int r4 = r7 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r4
            int r7 = r7 % 2
            byte[] r7 = br.com.original.common.cryptography.AsymmetricCryptography.f20234a
            if (r7 == 0) goto L2a
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.$r8$backportedMethods$utility$Double$1$hashCode
            int r4 = r4 + r9
            r7 = r7[r4]
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.f20235c
            int r7 = r7 + r4
            byte r7 = (byte) r7
            goto L42
        L2a:
            short[] r7 = br.com.original.common.cryptography.AsymmetricCryptography.extraCallback     // Catch: java.lang.Exception -> L40
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.$r8$backportedMethods$utility$Double$1$hashCode     // Catch: java.lang.Exception -> L40
            int r4 = r4 + r9
            short r7 = r7[r4]     // Catch: java.lang.Exception -> L40
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.f20235c     // Catch: java.lang.Exception -> L40
            int r7 = r7 + r4
            short r7 = (short) r7
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r4 = r4 + 101
            int r5 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r5
            int r4 = r4 % 2
            goto L42
        L40:
            r6 = move-exception
            throw r6
        L42:
            if (r7 <= 0) goto Lb0
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.value
            int r4 = r4 + 9
            int r5 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r5
            int r4 = r4 % 2
            if (r4 != 0) goto L5f
            int r9 = r9 - r7
            int r9 = r9 + (-4)
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.$r8$backportedMethods$utility$Double$1$hashCode
            int r9 = r9 * r4
            if (r1 == 0) goto L5b
            r1 = 0
            goto L5c
        L5b:
            r1 = 1
        L5c:
            if (r1 == 0) goto L67
            goto L69
        L5f:
            int r9 = r9 + r7
            int r9 = r9 + (-2)
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.$r8$backportedMethods$utility$Double$1$hashCode
            int r9 = r9 + r4
            if (r1 == 0) goto L69
        L67:
            r1 = 1
            goto L6a
        L69:
            r1 = 0
        L6a:
            int r9 = r9 + r1
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.f20236d
            int r10 = r10 + r1
            char r10 = (char) r10
            r0.append(r10)
            r1 = 1
        L73:
            if (r1 >= r7) goto L77
            r4 = 0
            goto L78
        L77:
            r4 = 1
        L78:
            if (r4 == 0) goto L7b
            goto Lb0
        L7b:
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.value
            int r4 = r4 + 119
            int r5 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r5
            int r4 = r4 % 2
            byte[] r4 = br.com.original.common.cryptography.AsymmetricCryptography.f20234a     // Catch: java.lang.Exception -> Lae
            r5 = 28
            if (r4 == 0) goto L8e
            r4 = 81
            goto L90
        L8e:
            r4 = 28
        L90:
            if (r4 == r5) goto L9b
            byte[] r4 = br.com.original.common.cryptography.AsymmetricCryptography.f20234a     // Catch: java.lang.Exception -> Lae
            int r5 = r9 + (-1)
            r9 = r4[r9]
            int r9 = r9 + r6
            byte r9 = (byte) r9
            goto La3
        L9b:
            short[] r4 = br.com.original.common.cryptography.AsymmetricCryptography.extraCallback
            int r5 = r9 + (-1)
            short r9 = r4[r9]
            int r9 = r9 + r6
            short r9 = (short) r9
        La3:
            r9 = r9 ^ r8
            int r10 = r10 + r9
            char r9 = (char) r10
            r10 = r9
            r9 = r5
            r0.append(r10)
            int r1 = r1 + 1
            goto L73
        Lae:
            r6 = move-exception
            throw r6
        Lb0:
            java.lang.String r6 = r0.toString()
            return r6
    }

    /* renamed from: d */
    private static java.lang.String m11359d(byte[] r11, int[] r12, boolean r13) {
            r0 = 0
            r1 = r12[r0]
            r2 = 1
            r3 = r12[r2]
            r4 = 2
            r5 = r12[r4]
            r6 = 3
            r6 = r12[r6]
            char[] r7 = br.com.original.common.cryptography.AsymmetricCryptography.f20237e
            char[] r8 = new char[r3]
            java.lang.System.arraycopy(r7, r1, r8, r0, r3)
            if (r11 == 0) goto L17
            r1 = 1
            goto L18
        L17:
            r1 = 0
        L18:
            if (r1 == 0) goto L3a
            char[] r1 = new char[r3]
            r7 = 0
            r9 = 0
        L1e:
            if (r7 >= r3) goto L39
            r10 = r11[r7]
            if (r10 != r2) goto L2d
            char r10 = r8[r7]
            int r10 = r10 << r2
            int r10 = r10 + r2
            int r10 = r10 - r9
            char r9 = (char) r10
            r1[r7] = r9
            goto L34
        L2d:
            char r10 = r8[r7]
            int r10 = r10 << r2
            int r10 = r10 - r9
            char r9 = (char) r10
            r1[r7] = r9
        L34:
            char r9 = r1[r7]
            int r7 = r7 + 1
            goto L1e
        L39:
            r8 = r1
        L3a:
            if (r6 <= 0) goto L49
            char[] r11 = new char[r3]
            java.lang.System.arraycopy(r8, r0, r11, r0, r3)
            int r1 = r3 - r6
            java.lang.System.arraycopy(r11, r0, r8, r1, r6)
            java.lang.System.arraycopy(r11, r6, r8, r0, r1)
        L49:
            r11 = 41
            if (r13 == 0) goto L50
            r13 = 41
            goto L52
        L50:
            r13 = 35
        L52:
            if (r13 == r11) goto L55
            goto L65
        L55:
            char[] r11 = new char[r3]
            r13 = 0
        L58:
            if (r13 >= r3) goto L64
            int r1 = r3 - r13
            int r1 = r1 - r2
            char r1 = r8[r1]
            r11[r13] = r1
            int r13 = r13 + 1
            goto L58
        L64:
            r8 = r11
        L65:
            if (r5 <= 0) goto L68
            goto L69
        L68:
            r2 = 0
        L69:
            if (r2 == 0) goto L96
        L6b:
            r11 = 80
            if (r0 >= r3) goto L72
            r13 = 75
            goto L74
        L72:
            r13 = 80
        L74:
            if (r13 == r11) goto L96
            int r11 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r11 = r11 + 91
            int r13 = r11 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r13
            int r11 = r11 % r4
            char r11 = r8[r0]
            r13 = r12[r4]
            int r11 = r11 - r13
            char r11 = (char) r11
            r8[r0] = r11
            int r0 = r0 + 1
            int r11 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint     // Catch: java.lang.Exception -> L94
            int r11 = r11 + 85
            int r13 = r11 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r13     // Catch: java.lang.Exception -> L94
            int r11 = r11 % 2
            goto L6b
        L94:
            r11 = move-exception
            throw r11
        L96:
            java.lang.String r11 = new java.lang.String
            r11.<init>(r8)
            int r12 = br.com.original.common.cryptography.AsymmetricCryptography.value
            int r12 = r12 + 87
            int r13 = r12 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r13
            int r12 = r12 % r4
            if (r12 != 0) goto Lad
            r12 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> Lab
            return r11
        Lab:
            r11 = move-exception
            throw r11
        Lad:
            return r11
    }

    /* renamed from: d */
    static void m11360d() {
            r0 = 229(0xe5, float:3.21E-43)
            char[] r0 = new char[r0]
            r0 = {x0022: FILL_ARRAY_DATA  , data: [51, 106, 107, 102, 100, 98, 88, 64, 59, 70, 74, 88, 105, 87, 57, 57, 68, 77, 93, 110, 110, 96, 83, 74, 67, 72, 63, 56, 66, 68, 58, 56, 74, 82, 71, 143, 174, 202, 204, 191, 163, 155, 179, 210, 208, 199, 167, 140, 174, 211, 214, 204, 209, 181, 172, 202, 207, 207, 202, 202, 175, 151, 155, 179, 210, 208, 183, 155, 176, 204, 205, 209, 189, 192, 207, 175, 182, 209, 204, 210, 210, 204, 37, 87, 102, 106, 103, 107, 114, 116, 111, 89, 103, 104, 65, 134, 135, 120, 134, 133, 116, 123, 86, 119, 133, 116, 119, 129, 116, 135, 102, 75, 114, 20, 78, 110, 104, 110, 73, 64, 106, 73, 69, 101, 107, 107, 71, 77, 102, 103, 106, 74, 64, 99, 115, 109, 107, 106, 72, 43, 74, 102, 108, 91, 93, 118, 108, 108, 77, 69, 101, 100, 105, 114, 108, 108, 78, 111, 222, 229, 256, 263, 258, 265, 246, 261, 296, 289, 289, 295, 286, 281, 266, 264, 288, 286, 279, 286, 284, 287, 280, 242, 4316, 4329, 269, 294, 262, 254, 290, 293, 283, 288, 260, 255, 283, 284, 288, 268, 271, 286, 254, 261, 288, 283, 289, 289, 283, 113, 226, 229, 229, 231, 229, 230, 237, 236, 204, 198, 226, 229, 216, 212, 235, 224, 212, 225, 233, 201, 164} // fill-array
            br.com.original.common.cryptography.AsymmetricCryptography.f20237e = r0
            r0 = 1125762116(0x4319c444, float:153.76666)
            br.com.original.common.cryptography.AsymmetricCryptography.$r8$backportedMethods$utility$Double$1$hashCode = r0
            r0 = 50
            byte[] r0 = new byte[r0]
            r0 = {x010c: FILL_ARRAY_DATA  , data: [-68, -10, -70, 45, -38, -58, 50, 9, 38, -58, 51, 118, 44, -5, 40, -63, -65, 31, -126, -9, -71, 45, -60, 50, -71, -22, 46, 50, 9, 38, -58, -45, -97, -117, -8, -95, -19, -10, -12, -44, -90, -125, -119, -43, -34, -128, -40, 122, -28, 113} // fill-array
            br.com.original.common.cryptography.AsymmetricCryptography.f20234a = r0
            r0 = 100
            br.com.original.common.cryptography.AsymmetricCryptography.f20235c = r0
            r0 = -1364036284(0xffffffffaeb27544, float:-8.1153334E-11)
            br.com.original.common.cryptography.AsymmetricCryptography.f20236d = r0
            return
    }

    private static javax.crypto.Cipher getCipher() {
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r1 = r0 & 67
            r2 = r1 ^ (-1)
            r0 = r0 | 67
            r0 = r0 & r2
            r2 = 1
            int r1 = r1 << r2
            r3 = r0 | r1
            int r3 = r3 << r2
            r0 = r0 ^ r1
            int r3 = r3 - r0
            int r0 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0
            int r3 = r3 % 2
            r0 = 34
            byte[] r0 = new byte[r0]
            r0 = {x006a: FILL_ARRAY_DATA  , data: [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1} // fill-array
            r1 = 4
            int[] r1 = new int[r1]
            r1 = {x0080: FILL_ARRAY_DATA  , data: [0, 34, 0, 0} // fill-array
            r3 = 0
            boolean r4 = android.view.Gravity.isHorizontal(r3)
            r5 = r4 & 1
            r6 = r5 & 0
            r5 = r5 ^ (-1)
            r5 = r5 & (-1)
            r5 = r5 | r6
            r4 = r4 | r2
            r4 = r4 & r5
            java.lang.String r0 = m11359d(r0, r1, r4)
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r4 = r1 ^ 35
            r1 = r1 & 35
            r1 = r1 | r4
            int r1 = r1 << r2
            int r4 = -r4
            r5 = r1 & r4
            r1 = r1 | r4
            int r5 = r5 + r1
            int r1 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r1
            int r5 = r5 % 2
            java.lang.String r0 = r0.intern()
            javax.crypto.Cipher r0 = javax.crypto.Cipher.getInstance(r0)
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r4 = r1 & 69
            r1 = r1 | 69
            int r4 = r4 + r1
            int r1 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r1
            int r4 = r4 % 2
            if (r4 == 0) goto L62
            r2 = 0
        L62:
            if (r2 == 0) goto L65
            return r0
        L65:
            r1 = 0
            int r1 = r1.length     // Catch: java.lang.Throwable -> L68
            return r0
        L68:
            r0 = move-exception
            throw r0
    }

    private static java.security.PrivateKey privateKeyFromString(java.lang.String r14) {
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r1 = 7
            r2 = r0 & (-8)
            r3 = r0 ^ (-1)
            r3 = r3 & r1
            r2 = r2 | r3
            r0 = r0 & r1
            r1 = 1
            int r0 = r0 << r1
            r3 = r2 & r0
            r0 = r0 | r2
            int r3 = r3 + r0
            int r0 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r0
            r0 = 2
            int r3 = r3 % r0
            r2 = 69
            if (r3 == 0) goto L1d
            r3 = 69
            goto L1f
        L1d:
            r3 = 54
        L1f:
            r4 = -101(0xffffffffffffff9b, float:NaN)
            r5 = 0
            r6 = 0
            r8 = 0
            if (r3 == r2) goto L46
            byte[] r14 = android.util.Base64.decode(r14, r0)     // Catch: java.lang.Throwable -> L1b3
            long r2 = android.os.SystemClock.elapsedRealtime()     // Catch: java.lang.Throwable -> L1b3
            int r9 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1))
            int r2 = -r9
            r3 = r2 ^ (-1)
            r3 = r3 & (-117(0xffffffffffffff8b, float:NaN))
            r9 = r2 & 116(0x74, float:1.63E-43)
            r3 = r3 | r9
            r2 = r2 & (-117(0xffffffffffffff8b, float:NaN))
            int r2 = r2 << r1
            int r2 = -r2
            int r2 = -r2
            r2 = r2 ^ (-1)
            int r3 = r3 - r2
            int r3 = r3 - r1
            short r2 = (short) r3     // Catch: java.lang.Throwable -> L1b3
            r3 = -101(0xffffffffffffff9b, float:NaN)
            goto L59
        L46:
            r2 = 5
            byte[] r14 = android.util.Base64.decode(r14, r2)     // Catch: java.lang.Throwable -> L1b3
            long r2 = android.os.SystemClock.elapsedRealtime()     // Catch: java.lang.Throwable -> L1b3
            int r9 = (r2 > r6 ? 1 : (r2 == r6 ? 0 : -1))
            r2 = r9 & 1
            r3 = r9 | 1
            int r2 = r2 + r3
            short r2 = (short) r2
            r3 = 74
        L59:
            int r9 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r10 = 109(0x6d, float:1.53E-43)
            r11 = r9 & (-110(0xffffffffffffff92, float:NaN))
            r12 = r9 ^ (-1)
            r12 = r12 & r10
            r11 = r11 | r12
            r9 = r9 & r10
            int r9 = r9 << r1
            int r9 = -r9
            int r9 = -r9
            r9 = r9 ^ (-1)
            int r11 = r11 - r9
            int r11 = r11 - r1
            int r9 = r11 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r9
            int r11 = r11 % r0
            int r9 = android.os.Process.myPid()     // Catch: java.lang.Throwable -> L1b3
            int r9 = r9 >> 22
            int r9 = -r9
            r10 = r3 & r9
            r3 = r3 ^ r9
            r3 = r3 | r10
            r9 = r10 | r3
            int r9 = r9 << r1
            r3 = r3 ^ r10
            int r9 = r9 - r3
            int r3 = android.widget.ExpandableListView.getPackedPositionType(r6)     // Catch: java.lang.Throwable -> L1b3
            r10 = r3 | 66
            int r11 = r10 << 1
            r3 = r3 & 66
            r3 = r3 ^ (-1)
            r3 = r3 & r10
            int r11 = r11 - r3
            byte r3 = (byte) r11
            r10 = -1125762115(0xffffffffbce63bbd, float:-0.028104657)
            int r11 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r12 = r11 ^ 21
            r11 = r11 & 21
            r11 = r11 | r12
            int r11 = r11 << r1
            int r12 = -r12
            r13 = r11 | r12
            int r13 = r13 << r1
            r11 = r11 ^ r12
            int r13 = r13 - r11
            int r11 = r13 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r11
            int r13 = r13 % r0
            int r6 = android.widget.ExpandableListView.getPackedPositionChild(r6)     // Catch: java.lang.Throwable -> L1b3
            r6 = r6 ^ (-1)
            int r6 = -r6
            r7 = r6 ^ r10
            r6 = r6 & r10
            int r6 = r6 << r1
            int r7 = r7 + r6
            r6 = r7 | (-1)
            int r6 = r6 << r1
            r7 = r7 ^ (-1)
            int r6 = r6 - r7
            r7 = 1364036350(0x514d8afe, float:5.5175012E10)
            r10 = 0
            float r11 = android.graphics.PointF.length(r10, r10)     // Catch: java.lang.Throwable -> L1b3
            int r10 = (r11 > r10 ? 1 : (r11 == r10 ? 0 : -1))
            int r10 = r10 + r7
            java.lang.String r2 = m11361c(r2, r9, r3, r6, r10)     // Catch: java.lang.Throwable -> L1b3
            java.lang.String r2 = r2.intern()     // Catch: java.lang.Throwable -> L1b3
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r14, r2)     // Catch: java.lang.Throwable -> L1b3
            java.security.spec.PKCS8EncodedKeySpec r2 = new java.security.spec.PKCS8EncodedKeySpec     // Catch: java.lang.Throwable -> L1b3
            r2.<init>(r14)     // Catch: java.lang.Throwable -> L1b3
            r14 = -74
            int r3 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r3 = r3 + 112
            int r3 = r3 - r1
            int r6 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r6
            int r3 = r3 % r0
            if (r3 == 0) goto Le2
            r3 = 1
            goto Le3
        Le2:
            r3 = 0
        Le3:
            r6 = 24
            if (r3 == r1) goto L115
            int r3 = android.view.View.getDefaultSize(r8, r8)     // Catch: java.lang.Throwable -> L1b3
            int r3 = -r3
            r7 = r3 & 0
            r3 = r3 ^ (-1)
            r3 = r3 & (-1)
            r3 = r3 | r7
            int r3 = -r3
            r7 = r3 | (-74)
            int r7 = r7 << r1
            r14 = r14 ^ r3
            int r7 = r7 - r14
            r14 = r7 ^ (-1)
            r3 = r7 & (-1)
            int r3 = r3 << r1
            int r14 = r14 + r3
            short r14 = (short) r14     // Catch: java.lang.Throwable -> L1b3
            int r3 = android.view.ViewConfiguration.getTouchSlop()     // Catch: java.lang.Throwable -> L1b3
            int r3 = r3 >> 8
            int r3 = -r3
            int r3 = -r3
            r3 = r3 ^ (-1)
            int r3 = -r3
            r7 = r3 | (-101(0xffffffffffffff9b, float:NaN))
            int r7 = r7 << r1
            r3 = r3 ^ r4
            int r7 = r7 - r3
            int r7 = r7 - r8
            int r7 = r7 - r1
            r3 = -81
            goto L127
        L115:
            int r3 = android.view.View.getDefaultSize(r8, r1)     // Catch: java.lang.Throwable -> L1b3
            int r14 = r14 << r3
            short r14 = (short) r14     // Catch: java.lang.Throwable -> L1b3
            r3 = 39
            int r4 = android.view.ViewConfiguration.getTouchSlop()     // Catch: java.lang.Throwable -> L1b3
            int r4 = r4 >> 18
            int r7 = r3 >>> r4
            r3 = 24
        L127:
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r9 = r4 & 85
            r10 = r9 ^ (-1)
            r4 = r4 | 85
            r4 = r4 & r10
            int r9 = r9 << r1
            int r4 = r4 + r9
            int r9 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r9
            int r4 = r4 % r0
            r9 = 14
            if (r4 != 0) goto L13e
            r4 = 14
            goto L140
        L13e:
            r4 = 45
        L140:
            if (r4 == r9) goto L15a
            int r4 = android.view.ViewConfiguration.getMaximumDrawingCacheSize()     // Catch: java.lang.Throwable -> L1b3
            int r4 = r4 >> r6
            int r4 = -r4
            r6 = r3 & r4
            r3 = r3 ^ r4
            r3 = r3 | r6
            int r3 = -r3
            int r3 = -r3
            r4 = r6 & r3
            r3 = r3 | r6
            int r4 = r4 + r3
            byte r3 = (byte) r4     // Catch: java.lang.Throwable -> L1b3
            int r4 = android.view.ViewConfiguration.getDoubleTapTimeout()     // Catch: java.lang.Throwable -> L1b3
            int r4 = r4 >> 16
            goto L168
        L15a:
            int r4 = android.view.ViewConfiguration.getMaximumDrawingCacheSize()     // Catch: java.lang.Throwable -> L1b3
            int r4 = r4 >> 49
            int r3 = r3 >>> r4
            byte r3 = (byte) r3     // Catch: java.lang.Throwable -> L1b3
            int r4 = android.view.ViewConfiguration.getDoubleTapTimeout()     // Catch: java.lang.Throwable -> L1b3
            int r4 = r4 >> 104
        L168:
            r6 = -1125762084(0xffffffffbce63bdc, float:-0.028104715)
            int r4 = -r4
            int r4 = -r4
            r9 = r6 | r4
            int r9 = r9 << r1
            r4 = r4 ^ r6
            int r9 = r9 - r4
            r4 = 1364036237(0x514d8a8d, float:5.517455E10)
            java.lang.String r6 = ""
            int r6 = android.telephony.PhoneNumberUtils.toaFromString(r6)     // Catch: java.lang.Throwable -> L1b3
            int r6 = -r6
            int r6 = -r6
            r10 = r6 & r4
            r4 = r4 | r6
            int r10 = r10 + r4
            java.lang.String r14 = m11361c(r14, r7, r3, r9, r10)     // Catch: java.lang.Throwable -> L1b3
            java.lang.String r14 = r14.intern()     // Catch: java.lang.Throwable -> L1b3
            int r3 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r4 = r3 ^ 46
            r3 = r3 & 46
            int r3 = r3 << r1
            int r4 = r4 + r3
            r3 = r4 ^ (-1)
            r4 = r4 & (-1)
            int r4 = r4 << r1
            int r3 = r3 + r4
            int r4 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r4
            int r3 = r3 % r0
            java.security.KeyFactory r14 = java.security.KeyFactory.getInstance(r14)     // Catch: java.lang.Throwable -> L1b3
            java.security.spec.KeySpec r2 = (java.security.spec.KeySpec) r2     // Catch: java.lang.Throwable -> L1b3
            java.security.PrivateKey r14 = r14.generatePrivate(r2)     // Catch: java.lang.Throwable -> L1b3
            int r2 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r3 = r2 & 33
            r2 = r2 | 33
            int r3 = r3 + r2
            int r2 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r2
            int r3 = r3 % r0
            goto L1b4
        L1b3:
            r14 = r5
        L1b4:
            int r2 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r3 = r2 & 17
            r2 = r2 ^ 17
            r2 = r2 | r3
            int r3 = r3 + r2
            int r2 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r2
            int r3 = r3 % r0
            if (r3 != 0) goto L1c4
            r1 = 0
        L1c4:
            if (r1 == 0) goto L1c7
            return r14
        L1c7:
            int r0 = r5.length     // Catch: java.lang.Throwable -> L1c9
            return r14
        L1c9:
            r14 = move-exception
            throw r14
    }

    private static java.security.PublicKey publicKeyFromByteArray(byte[] r13) {
            r0 = 0
            r1 = 2
            r2 = 1
            byte[] r13 = android.util.Base64.decode(r13, r1)     // Catch: java.lang.Throwable -> Ld2
            java.security.spec.X509EncodedKeySpec r3 = new java.security.spec.X509EncodedKeySpec     // Catch: java.lang.Throwable -> Ld2
            r3.<init>(r13)     // Catch: java.lang.Throwable -> Ld2
            int r13 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r4 = 5
            r5 = r13 & (-6)
            r6 = r13 ^ (-1)
            r6 = r6 & r4
            r5 = r5 | r6
            r13 = r13 & r4
            int r13 = r13 << r2
            r4 = r5 & r13
            r13 = r13 | r5
            int r4 = r4 + r13
            int r13 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r13
            int r4 = r4 % r1
            r13 = 0
            int r4 = android.view.KeyEvent.normalizeMetaState(r13)     // Catch: java.lang.Throwable -> Ld2
            int r4 = -r4
            r5 = r4 ^ (-74)
            r4 = r4 & (-74)
            int r4 = r4 << r2
            int r4 = -r4
            int r4 = -r4
            r6 = r5 | r4
            int r6 = r6 << r2
            r4 = r4 ^ r5
            int r6 = r6 - r4
            short r4 = (short) r6     // Catch: java.lang.Throwable -> Ld2
            r5 = -101(0xffffffffffffff9b, float:NaN)
            r6 = 0
            int r6 = android.widget.ExpandableListView.getPackedPositionType(r6)     // Catch: java.lang.Throwable -> Ld2
            int r7 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r8 = r7 & 121(0x79, float:1.7E-43)
            r7 = r7 ^ 121(0x79, float:1.7E-43)
            r7 = r7 | r8
            r9 = r8 | r7
            int r9 = r9 << r2
            r7 = r7 ^ r8
            int r9 = r9 - r7
            int r7 = r9 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r7
            int r9 = r9 % r1
            if (r9 == 0) goto L50
            r7 = 0
            goto L51
        L50:
            r7 = 1
        L51:
            if (r7 == r2) goto L5e
            int r5 = r5 % r6
            int r6 = android.view.ViewConfiguration.getMinimumFlingVelocity()     // Catch: java.lang.Throwable -> Ld2
            int r6 = r6 >> 88
            int r6 = r6 * 91
            byte r6 = (byte) r6     // Catch: java.lang.Throwable -> Ld2
            goto L7d
        L5e:
            r7 = r6 ^ (-101(0xffffffffffffff9b, float:NaN))
            r8 = r6 & (-101(0xffffffffffffff9b, float:NaN))
            r7 = r7 | r8
            int r7 = r7 << r2
            r8 = r6 ^ (-1)
            r5 = r5 & r8
            r6 = r6 & 100
            r5 = r5 | r6
            int r5 = -r5
            r6 = r7 ^ r5
            r5 = r5 & r7
            int r5 = r5 << r2
            int r5 = r5 + r6
            int r6 = android.view.ViewConfiguration.getMinimumFlingVelocity()     // Catch: java.lang.Throwable -> Ld2
            int r6 = r6 >> 16
            int r6 = -r6
            r7 = r6 & (-81)
            r6 = r6 | (-81)
            int r7 = r7 + r6
            byte r6 = (byte) r7     // Catch: java.lang.Throwable -> Ld2
        L7d:
            r7 = -1125762084(0xffffffffbce63bdc, float:-0.028104715)
            int r8 = android.view.ViewConfiguration.getMinimumFlingVelocity()     // Catch: java.lang.Throwable -> Ld2
            int r8 = r8 >> 16
            int r7 = r7 + r8
            r8 = 1364036495(0x514d8b8f, float:5.5175606E10)
            java.lang.String r9 = ""
            int r10 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r11 = r10 & 59
            r12 = r11 ^ (-1)
            r10 = r10 | 59
            r10 = r10 & r12
            int r11 = r11 << r2
            int r10 = r10 + r11
            int r11 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r11
            int r10 = r10 % r1
            int r9 = android.telephony.PhoneNumberUtils.toaFromString(r9)     // Catch: java.lang.Throwable -> Ld2
            int r8 = r8 - r9
            java.lang.String r4 = m11361c(r4, r5, r6, r7, r8)     // Catch: java.lang.Throwable -> Ld2
            java.lang.String r4 = r4.intern()     // Catch: java.lang.Throwable -> Ld2
            java.security.KeyFactory r4 = java.security.KeyFactory.getInstance(r4)     // Catch: java.lang.Throwable -> Ld2
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r6 = r5 & 31
            r5 = r5 ^ 31
            r5 = r5 | r6
            r7 = r6 | r5
            int r7 = r7 << r2
            r5 = r5 ^ r6
            int r7 = r7 - r5
            int r5 = r7 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r5
            int r7 = r7 % r1
            if (r7 != 0) goto Lc1
            r13 = 1
        Lc1:
            if (r13 == 0) goto Lcb
            java.security.spec.KeySpec r3 = (java.security.spec.KeySpec) r3     // Catch: java.lang.Throwable -> Ld2
            java.security.PublicKey r13 = r4.generatePublic(r3)     // Catch: java.lang.Throwable -> Ld2
            int r0 = r0.length     // Catch: java.lang.Throwable -> Ld2
            goto Ld1
        Lcb:
            java.security.spec.KeySpec r3 = (java.security.spec.KeySpec) r3     // Catch: java.lang.Throwable -> Ld2
            java.security.PublicKey r13 = r4.generatePublic(r3)     // Catch: java.lang.Throwable -> Ld2
        Ld1:
            r0 = r13
        Ld2:
            int r13 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r3 = r13 ^ 33
            r4 = r13 & 33
            r3 = r3 | r4
            int r3 = r3 << r2
            r4 = r4 ^ (-1)
            r13 = r13 | 33
            r13 = r13 & r4
            int r13 = -r13
            r4 = r3 | r13
            int r2 = r4 << 1
            r13 = r13 ^ r3
            int r2 = r2 - r13
            int r13 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r13
            int r2 = r2 % r1
            return r0
    }

    private static java.security.PublicKey publicKeyFromString(java.lang.String r14) {
            r0 = 0
            r1 = 2
            r2 = 1
            byte[] r14 = android.util.Base64.decode(r14, r1)     // Catch: java.lang.Throwable -> Led
            java.security.spec.X509EncodedKeySpec r3 = new java.security.spec.X509EncodedKeySpec     // Catch: java.lang.Throwable -> Led
            r3.<init>(r14)     // Catch: java.lang.Throwable -> Led
            int r14 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r4 = r14 & 3
            r14 = r14 ^ 3
            r14 = r14 | r4
            int r4 = r4 + r14
            int r14 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r14
            int r4 = r4 % r1
            r14 = 53
            if (r4 == 0) goto L20
            r4 = 53
            goto L22
        L20:
            r4 = 61
        L22:
            r5 = 48
            if (r4 == r14) goto L3c
            char r14 = android.text.AndroidCharacter.getMirror(r5)     // Catch: java.lang.Throwable -> Led
            r4 = r14 ^ (-1)
            r4 = r4 & (-122(0xffffffffffffff86, float:NaN))
            r6 = r14 & 121(0x79, float:1.7E-43)
            r4 = r4 | r6
            r14 = r14 & (-122(0xffffffffffffff86, float:NaN))
            int r14 = r14 << r2
            r6 = r4 & r14
            r14 = r14 | r4
            int r6 = r6 + r14
            short r14 = (short) r6     // Catch: java.lang.Throwable -> Led
            r4 = -149(0xffffffffffffff6b, float:NaN)
            goto L48
        L3c:
            r14 = 122(0x7a, float:1.71E-43)
            r4 = 64
            char r4 = android.text.AndroidCharacter.getMirror(r4)     // Catch: java.lang.Throwable -> Led
            int r14 = r14 % r4
            short r14 = (short) r14     // Catch: java.lang.Throwable -> Led
            r4 = 17156(0x4304, float:2.404E-41)
        L48:
            char r6 = android.text.AndroidCharacter.getMirror(r5)     // Catch: java.lang.Throwable -> Led
            int r6 = -r6
            int r6 = -r6
            r7 = r4 & r6
            r8 = r7 ^ (-1)
            r4 = r4 | r6
            r4 = r4 & r8
            int r6 = r7 << 1
            int r4 = r4 + r6
            r6 = -210(0xffffffffffffff2e, float:NaN)
            int r7 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r8 = r7 & 87
            r7 = r7 | 87
            int r7 = -r7
            int r7 = -r7
            r9 = r8 | r7
            int r9 = r9 << r2
            r7 = r7 ^ r8
            int r9 = r9 - r7
            int r7 = r9 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r7
            int r9 = r9 % r1
            if (r9 != 0) goto L6f
            r7 = 1
            goto L70
        L6f:
            r7 = 0
        L70:
            java.lang.String r8 = ""
            if (r7 == r2) goto L86
            int r7 = android.telephony.PhoneNumberUtils.toaFromString(r8)     // Catch: java.lang.Throwable -> Led
            int r7 = -r7
            int r7 = -r7
            r7 = r7 ^ (-1)
            int r6 = r6 - r7
            int r6 = r6 - r2
            byte r6 = (byte) r6     // Catch: java.lang.Throwable -> Led
            long r9 = android.view.ViewConfiguration.getGlobalActionKeyTimeout()     // Catch: java.lang.Throwable -> Led
            r11 = 0
            goto L92
        L86:
            int r7 = android.telephony.PhoneNumberUtils.toaFromString(r8)     // Catch: java.lang.Throwable -> Led
            int r6 = r6 % r7
            byte r6 = (byte) r6     // Catch: java.lang.Throwable -> Led
            long r9 = android.view.ViewConfiguration.getGlobalActionKeyTimeout()     // Catch: java.lang.Throwable -> Led
            r11 = 1
        L92:
            r7 = -1125762083(0xffffffffbce63bdd, float:-0.028104717)
            int r13 = (r9 > r11 ? 1 : (r9 == r11 ? 0 : -1))
            int r9 = -r13
            r10 = r7 & r9
            r7 = r7 ^ r9
            r7 = r7 | r10
            r9 = r10 ^ r7
            r7 = r7 & r10
            int r7 = r7 << r2
            int r9 = r9 + r7
            r7 = 1364036365(0x514d8b0d, float:5.5175074E10)
            int r10 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r10 = r10 + 63
            int r11 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r11
            int r10 = r10 % r1
            int r5 = android.text.TextUtils.indexOf(r8, r5, r0, r0)     // Catch: java.lang.Throwable -> Led
            int r5 = -r5
            r8 = r5 ^ r7
            r5 = r5 & r7
            r5 = r5 | r8
            int r5 = r5 << r2
            int r5 = r5 - r8
            java.lang.String r14 = m11361c(r14, r4, r6, r9, r5)     // Catch: java.lang.Throwable -> Led
            java.lang.String r14 = r14.intern()     // Catch: java.lang.Throwable -> Led
            java.security.KeyFactory r14 = java.security.KeyFactory.getInstance(r14)     // Catch: java.lang.Throwable -> Led
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r5 = r4 & 7
            r6 = r5 ^ (-1)
            r4 = r4 | 7
            r4 = r4 & r6
            int r5 = r5 << r2
            int r5 = -r5
            int r5 = -r5
            r5 = r5 ^ (-1)
            int r4 = r4 - r5
            int r4 = r4 - r2
            int r5 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r5
            int r4 = r4 % r1
            java.security.spec.KeySpec r3 = (java.security.spec.KeySpec) r3     // Catch: java.lang.Throwable -> Led
            java.security.PublicKey r14 = r14.generatePublic(r3)     // Catch: java.lang.Throwable -> Led
            int r3 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r4 = r3 ^ 123(0x7b, float:1.72E-43)
            r3 = r3 & 123(0x7b, float:1.72E-43)
            int r3 = r3 << r2
            int r4 = r4 + r3
            int r3 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r3
            int r4 = r4 % r1
            goto Lee
        Led:
            r14 = 0
        Lee:
            int r3 = br.com.original.common.cryptography.AsymmetricCryptography.value
            int r3 = r3 + 19
            int r3 = r3 - r2
            int r3 = r3 - r0
            int r3 = r3 - r2
            int r0 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0
            int r3 = r3 % r1
            return r14
    }

    public final java.lang.String decrypt(java.lang.String r12, java.lang.String r13) {
            r11 = this;
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r1 = r0 & 112(0x70, float:1.57E-43)
            r0 = r0 | 112(0x70, float:1.57E-43)
            int r1 = r1 + r0
            r0 = 0
            int r1 = r1 - r0
            r2 = 1
            int r1 = r1 - r2
            int r3 = r1 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r3
            int r1 = r1 % 2
            r3 = 48
            if (r1 != 0) goto L18
            r1 = 48
            goto L1a
        L18:
            r1 = 67
        L1a:
            r4 = 27
            if (r1 == r3) goto L3b
            int r1 = android.view.KeyEvent.getModifierMetaStateMask()
            byte r1 = (byte) r1
            int r1 = -r1
            r5 = r1 | (-116(0xffffffffffffff8c, float:NaN))
            int r5 = r5 << r2
            r1 = r1 ^ (-116(0xffffffffffffff8c, float:NaN))
            int r5 = r5 - r1
            short r1 = (short) r5
            int r5 = android.graphics.Color.blue(r0)
            int r5 = -r5
            int r5 = -r5
            r6 = r5 & (-101(0xffffffffffffff9b, float:NaN))
            r5 = r5 ^ (-101(0xffffffffffffff9b, float:NaN))
            r5 = r5 | r6
            r5 = r5 ^ (-1)
            int r6 = r6 - r5
            int r6 = r6 - r2
            goto L4a
        L3b:
            r1 = 11
            int r5 = android.view.KeyEvent.getModifierMetaStateMask()
            byte r5 = (byte) r5
            int r1 = r1 >> r5
            short r1 = (short) r1
            int r5 = android.graphics.Color.blue(r0)
            int r6 = r4 >> r5
        L4a:
            int r5 = android.graphics.Color.alpha(r0)
            int r5 = -r5
            int r5 = -r5
            r7 = r5 & (-118(0xffffffffffffff8a, float:NaN))
            r5 = r5 ^ (-118(0xffffffffffffff8a, float:NaN))
            r5 = r5 | r7
            r5 = r5 ^ (-1)
            int r7 = r7 - r5
            int r7 = r7 - r2
            byte r5 = (byte) r7
            r7 = -1125762081(0xffffffffbce63bdf, float:-0.02810472)
            r8 = 0
            int r8 = android.widget.ExpandableListView.getPackedPositionType(r8)
            int r8 = -r8
            int r8 = -r8
            r9 = r8 & r7
            r7 = r7 ^ r8
            r7 = r7 | r9
            r7 = r7 ^ (-1)
            int r9 = r9 - r7
            int r9 = r9 - r2
            int r7 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r7 = r7 + 53
            int r7 = r7 - r2
            int r7 = r7 - r2
            int r8 = r7 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r8
            int r7 = r7 % 2
            r7 = 1364036401(0x514d8b31, float:5.517522E10)
            int r8 = android.view.KeyEvent.getModifierMetaStateMask()
            byte r8 = (byte) r8
            int r8 = -r8
            r10 = r8 & 0
            r8 = r8 ^ (-1)
            r8 = r8 & (-1)
            r8 = r8 | r10
            int r8 = -r8
            r10 = r8 | r7
            int r10 = r10 << r2
            r7 = r7 ^ r8
            int r10 = r10 - r7
            r7 = r10 & (-1)
            r8 = r10 | (-1)
            int r7 = r7 + r8
            java.lang.String r1 = m11361c(r1, r6, r5, r9, r7)
            java.lang.String r1 = r1.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r12, r1)
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r5 = r1 ^ 39
            r6 = r1 & 39
            r5 = r5 | r6
            int r5 = r5 << r2
            r6 = r1 & (-40)
            r1 = r1 ^ (-1)
            r1 = r1 & 39
            r1 = r1 | r6
            int r5 = r5 - r1
            int r1 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r1
            int r5 = r5 % 2
            java.lang.String r1 = ""
            int r5 = android.text.TextUtils.getOffsetAfter(r1, r0)
            int r5 = -r5
            r6 = r5 | 82
            int r6 = r6 << r2
            r5 = r5 ^ 82
            int r6 = r6 - r5
            short r5 = (short) r6
            int r6 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r7 = r6 & 113(0x71, float:1.58E-43)
            r6 = r6 ^ 113(0x71, float:1.58E-43)
            r6 = r6 | r7
            int r6 = -r6
            int r6 = -r6
            r6 = r6 ^ (-1)
            int r7 = r7 - r6
            int r7 = r7 - r2
            int r6 = r7 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r6
            int r7 = r7 % 2
            if (r7 != 0) goto Lda
            r6 = 0
            goto Ldb
        Lda:
            r6 = 1
        Ldb:
            if (r6 == r2) goto Lfd
            int r3 = android.text.TextUtils.lastIndexOf(r1, r4)
            int r3 = -r3
            r4 = r3 ^ (-1)
            r4 = r4 & (-102(0xffffffffffffff9a, float:NaN))
            r6 = r3 & 101(0x65, float:1.42E-43)
            r4 = r4 | r6
            r3 = r3 & (-102(0xffffffffffffff9a, float:NaN))
            int r3 = r3 << r2
            int r3 = -r3
            int r3 = -r3
            r6 = r4 ^ r3
            r3 = r3 & r4
            int r3 = r3 << r2
            int r6 = r6 + r3
            r3 = 50
            int r4 = android.view.KeyEvent.getModifierMetaStateMask()
            byte r4 = (byte) r4
            int r3 = r3 / r4
        Lfb:
            byte r3 = (byte) r3
            goto L11b
        Lfd:
            int r3 = android.text.TextUtils.lastIndexOf(r1, r3)
            int r3 = -r3
            r4 = r3 ^ (-102(0xffffffffffffff9a, float:NaN))
            r6 = r3 & (-102(0xffffffffffffff9a, float:NaN))
            r4 = r4 | r6
            int r4 = r4 << r2
            r6 = r6 ^ (-1)
            r3 = r3 | (-102(0xffffffffffffff9a, float:NaN))
            r3 = r3 & r6
            int r3 = -r3
            r3 = r3 ^ (-1)
            int r4 = r4 - r3
            int r6 = r4 + (-1)
            int r3 = android.view.KeyEvent.getModifierMetaStateMask()
            byte r3 = (byte) r3
            int r3 = r3 + (-62)
            goto Lfb
        L11b:
            r4 = -1125762076(0xffffffffbce63be4, float:-0.02810473)
            int r7 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r8 = r7 & 57
            r9 = r8 ^ (-1)
            r7 = r7 | 57
            r7 = r7 & r9
            int r8 = r8 << r2
            r9 = r7 | r8
            int r9 = r9 << r2
            r7 = r7 ^ r8
            int r9 = r9 - r7
            int r7 = r9 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r7
            int r9 = r9 % 2
            if (r9 != 0) goto L137
            r7 = 1
            goto L138
        L137:
            r7 = 0
        L138:
            if (r7 == r2) goto L151
            int r7 = android.view.View.getDefaultSize(r0, r0)
            r8 = r4 & r7
            r9 = r8 ^ (-1)
            r4 = r4 | r7
            r4 = r4 & r9
            int r7 = r8 << 1
            int r7 = -r7
            int r7 = -r7
            r7 = r7 ^ (-1)
            int r4 = r4 - r7
            int r4 = r4 - r2
            int r1 = android.text.TextUtils.indexOf(r1, r1)
            goto L15a
        L151:
            int r7 = android.view.View.getDefaultSize(r0, r0)
            int r4 = r4 << r7
            int r1 = android.text.TextUtils.indexOf(r1, r1)
        L15a:
            r7 = 1364036396(0x514d8b2c, float:5.51752E10)
            int r8 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r9 = r8 ^ 117(0x75, float:1.64E-43)
            r8 = r8 & 117(0x75, float:1.64E-43)
            int r8 = r8 << r2
            int r8 = -r8
            int r8 = -r8
            r8 = r8 ^ (-1)
            int r9 = r9 - r8
            int r9 = r9 - r2
            int r8 = r9 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r8
            int r9 = r9 % 2
            int r1 = -r1
            r8 = r7 ^ r1
            r9 = r7 & r1
            r8 = r8 | r9
            int r8 = r8 << r2
            r9 = r9 ^ (-1)
            r1 = r1 | r7
            r1 = r1 & r9
            int r8 = r8 - r1
            java.lang.String r1 = m11361c(r5, r6, r3, r4, r8)
            java.lang.String r1 = r1.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r13, r1)
            java.security.PrivateKey r13 = privateKeyFromString(r13)
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r3 = r1 ^ 93
            r1 = r1 & 93
            int r1 = r1 << r2
            r4 = r3 ^ r1
            r1 = r1 & r3
            int r1 = r1 << r2
            int r4 = r4 + r1
            int r1 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r1
            int r4 = r4 % 2
            java.lang.String r12 = r11.decrypt(r12, r13)
            int r13 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r1 = r13 & 19
            r3 = r1 ^ (-1)
            r13 = r13 | 19
            r13 = r13 & r3
            int r1 = r1 << r2
            int r13 = r13 + r1
            int r1 = r13 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r1
            int r13 = r13 % 2
            r1 = 38
            if (r13 == 0) goto L1b8
            r13 = 5
            goto L1ba
        L1b8:
            r13 = 38
        L1ba:
            if (r13 == r1) goto L1c2
            r13 = 32
            int r13 = r13 / r0
            return r12
        L1c0:
            r12 = move-exception
            throw r12
        L1c2:
            return r12
    }

    public final java.lang.String decrypt(java.lang.String r13, java.security.PrivateKey r14) {
            r12 = this;
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r1 = r0 & 25
            r0 = r0 ^ 25
            r0 = r0 | r1
            int r0 = -r0
            int r0 = -r0
            r2 = r1 & r0
            r0 = r0 | r1
            int r2 = r2 + r0
            int r0 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0
            r0 = 2
            int r2 = r2 % r0
            r1 = 1
            if (r2 != 0) goto L18
            r2 = 1
            goto L1a
        L18:
            r2 = 18
        L1a:
            r3 = 0
            if (r2 == r1) goto L34
            long r5 = android.os.SystemClock.elapsedRealtimeNanos()
            int r2 = (r5 > r3 ? 1 : (r5 == r3 ? 0 : -1))
            int r2 = -r2
            r3 = r2 & (-114(0xffffffffffffff8e, float:NaN))
            r2 = r2 ^ (-114(0xffffffffffffff8e, float:NaN))
            r2 = r2 | r3
            int r2 = -r2
            int r2 = -r2
            r2 = r2 ^ (-1)
            int r3 = r3 - r2
            int r3 = r3 - r1
            short r2 = (short) r3
            r3 = -100
            goto L40
        L34:
            r2 = 94
            long r5 = android.os.SystemClock.elapsedRealtimeNanos()
            int r7 = (r5 > r3 ? 1 : (r5 == r3 ? 0 : -1))
            int r2 = r2 / r7
            short r2 = (short) r2
            r3 = 99
        L40:
            float r4 = android.media.AudioTrack.getMaxVolume()
            r5 = 0
            int r4 = (r4 > r5 ? 1 : (r4 == r5 ? 0 : -1))
            int r4 = -r4
            r5 = r4 ^ (-1)
            r5 = r5 & r3
            r6 = r3 ^ (-1)
            r6 = r6 & r4
            r5 = r5 | r6
            r3 = r3 & r4
            int r3 = r3 << r1
            r3 = r3 ^ (-1)
            int r5 = r5 - r3
            int r5 = r5 - r1
            int r3 = android.view.ViewConfiguration.getWindowTouchSlop()
            int r3 = r3 >> 8
            int r3 = -r3
            r4 = r3 ^ (-1)
            r4 = r4 & (-118(0xffffffffffffff8a, float:NaN))
            r6 = r3 & 117(0x75, float:1.64E-43)
            r4 = r4 | r6
            r3 = r3 & (-118(0xffffffffffffff8a, float:NaN))
            int r3 = r3 << r1
            r6 = r4 | r3
            int r6 = r6 << r1
            r3 = r3 ^ r4
            int r6 = r6 - r3
            byte r3 = (byte) r6
            r4 = -1125762081(0xffffffffbce63bdf, float:-0.02810472)
            int r6 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r6 = r6 + 38
            int r6 = r6 - r1
            int r7 = r6 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r7
            int r6 = r6 % r0
            java.lang.String r6 = ""
            r7 = 0
            int r8 = android.text.TextUtils.getOffsetAfter(r6, r7)
            int r8 = -r8
            r9 = r8 & 0
            r8 = r8 ^ (-1)
            r8 = r8 & (-1)
            r8 = r8 | r9
            int r8 = -r8
            r8 = r8 ^ (-1)
            int r4 = r4 - r8
            int r4 = r4 - r1
            int r4 = r4 - r1
            r8 = 1364036402(0x514d8b32, float:5.5175225E10)
            int r9 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r10 = r9 ^ 81
            r9 = r9 & 81
            int r9 = r9 << r1
            int r9 = -r9
            int r9 = -r9
            r9 = r9 ^ (-1)
            int r10 = r10 - r9
            int r10 = r10 - r1
            int r9 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r9
            int r10 = r10 % r0
            r9 = 47
            if (r10 == 0) goto Laa
            r10 = 47
            goto Lac
        Laa:
            r10 = 50
        Lac:
            r11 = 0
            if (r10 == r9) goto Lcb
            int r6 = android.text.TextUtils.getOffsetBefore(r6, r7)
            int r6 = -r6
            r6 = r6 ^ (-1)
            int r8 = r8 - r6
            int r8 = r8 - r1
            java.lang.String r2 = m11361c(r2, r5, r3, r4, r8)
            java.lang.String r2 = r2.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r13, r2)
            if (r14 != 0) goto Lc7
            r2 = 1
            goto Lc8
        Lc7:
            r2 = 0
        Lc8:
            if (r2 == 0) goto L110
            goto Lef
        Lcb:
            int r6 = android.text.TextUtils.getOffsetBefore(r6, r7)
            int r6 = -r6
            r9 = r6 & r8
            r6 = r6 ^ r8
            r6 = r6 | r9
            r8 = r9 | r6
            int r8 = r8 << r1
            r6 = r6 ^ r9
            int r8 = r8 - r6
            java.lang.String r2 = m11361c(r2, r5, r3, r4, r8)
            java.lang.String r2 = r2.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r13, r2)
            r2 = 67
            if (r14 != 0) goto Leb
            r3 = 92
            goto Led
        Leb:
            r3 = 67
        Led:
            if (r3 == r2) goto L110
        Lef:
            int r13 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r14 = r13 & 77
            r13 = r13 ^ 77
            r13 = r13 | r14
            r2 = r14 ^ r13
            r13 = r13 & r14
            int r13 = r13 << r1
            int r2 = r2 + r13
            int r13 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r13
            int r2 = r2 % r0
            r13 = 87
            if (r2 == 0) goto L107
            r14 = 87
            goto L109
        L107:
            r14 = 57
        L109:
            if (r14 == r13) goto L10c
            goto L10d
        L10c:
            int r13 = r11.length     // Catch: java.lang.Throwable -> L10e
        L10d:
            return r11
        L10e:
            r13 = move-exception
            throw r13
        L110:
            r2 = 34
            byte[] r2 = new byte[r2]
            r2 = {x01b6: FILL_ARRAY_DATA  , data: [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1} // fill-array
            r3 = 4
            int[] r4 = new int[r3]
            r4 = {x01cc: FILL_ARRAY_DATA  , data: [0, 34, 0, 0} // fill-array
            boolean r5 = android.view.Gravity.isHorizontal(r7)
            r5 = r5 ^ r1
            java.lang.String r2 = m11359d(r2, r4, r5)
            int r4 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r4 = r4 + 77
            int r5 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r5
            int r4 = r4 % r0
            if (r4 == 0) goto L133
            r4 = 0
            goto L134
        L133:
            r4 = 1
        L134:
            if (r4 == 0) goto L142
            java.lang.String r2 = r2.intern()
            javax.crypto.Cipher r2 = javax.crypto.Cipher.getInstance(r2)
            java.security.Key r14 = (java.security.Key) r14
            r4 = 2
            goto L14d
        L142:
            java.lang.String r2 = r2.intern()
            javax.crypto.Cipher r2 = javax.crypto.Cipher.getInstance(r2)
            java.security.Key r14 = (java.security.Key) r14
            r4 = 4
        L14d:
            r2.init(r4, r14)
            byte[] r13 = android.util.Base64.decode(r13, r0)
            byte[] r13 = r2.doFinal(r13)
            int r14 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r2 = r14 & 95
            r14 = r14 ^ 95
            r14 = r14 | r2
            r4 = r2 ^ r14
            r14 = r14 & r2
            int r14 = r14 << r1
            int r4 = r4 + r14
            int r14 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r14
            int r4 = r4 % r0
            if (r4 == 0) goto L16c
            goto L16d
        L16c:
            r7 = 1
        L16d:
            java.lang.String r14 = "https://"
            r2 = 48
            if (r7 == 0) goto L182
            byte[] r2 = new byte[r2]
            r2 = {x01d8: FILL_ARRAY_DATA  , data: [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0} // fill-array
            int[] r3 = new int[r3]
            r3 = {x01f4: FILL_ARRAY_DATA  , data: [34, 48, 102, 0} // fill-array
            boolean r14 = android.webkit.URLUtil.isHttpsUrl(r14)
            goto L193
        L182:
            byte[] r2 = new byte[r2]
            r2 = {x0200: FILL_ARRAY_DATA  , data: [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0} // fill-array
            int[] r3 = new int[r3]
            r3 = {x021c: FILL_ARRAY_DATA  , data: [34, 48, 102, 0} // fill-array
            boolean r14 = android.webkit.URLUtil.isHttpsUrl(r14)
            super.hashCode()     // Catch: java.lang.Throwable -> L1b3
        L193:
            java.lang.String r14 = m11359d(r2, r3, r14)
            java.lang.String r14 = r14.intern()
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r13, r14)
            java.lang.String r14 = new java.lang.String
            java.nio.charset.Charset r2 = kotlin.text.Charsets.extraCallback
            r14.<init>(r13, r2)
            int r13 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r2 = r13 ^ 7
            r13 = r13 & 7
            int r13 = r13 << r1
            int r2 = r2 + r13
            int r13 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r13
            int r2 = r2 % r0
            return r14
        L1b3:
            r13 = move-exception
            throw r13
    }

    public final java.lang.String encrypt(java.lang.String r12, java.lang.String r13) {
            r11 = this;
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r1 = r0 & 19
            r0 = r0 | 19
            int r1 = r1 + r0
            int r0 = r1 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0
            int r1 = r1 % 2
            r0 = 0
            r2 = 1
            if (r1 != 0) goto L13
            r1 = 0
            goto L14
        L13:
            r1 = 1
        L14:
            r3 = 16
            if (r1 == 0) goto L36
            int r1 = android.view.ViewConfiguration.getKeyRepeatDelay()
            int r1 = r1 >> r3
            int r1 = -r1
            r4 = r1 & (-1)
            r4 = r4 ^ (-1)
            r1 = r1 | (-1)
            r1 = r1 & r4
            int r1 = -r1
            r4 = r1 | (-115(0xffffffffffffff8d, float:NaN))
            int r4 = r4 << r2
            r1 = r1 ^ (-115(0xffffffffffffff8d, float:NaN))
            int r4 = r4 - r1
            r1 = r4 ^ (-1)
            r4 = r4 & (-1)
            int r4 = r4 << r2
            int r1 = r1 + r4
            short r1 = (short) r1
            r4 = -101(0xffffffffffffff9b, float:NaN)
            goto L52
        L36:
            int r1 = android.view.ViewConfiguration.getKeyRepeatDelay()
            r4 = 115(0x73, float:1.61E-43)
            r5 = r1 ^ 115(0x73, float:1.61E-43)
            r6 = r1 & 115(0x73, float:1.61E-43)
            r5 = r5 | r6
            int r5 = r5 << r2
            r6 = r1 & (-116(0xffffffffffffff8c, float:NaN))
            r1 = r1 ^ (-1)
            r1 = r1 & r4
            r1 = r1 | r6
            int r1 = -r1
            r4 = r5 & r1
            r1 = r1 | r5
            int r4 = r4 + r1
            int r4 = r4 * 67
            short r1 = (short) r4
            r4 = 108(0x6c, float:1.51E-43)
        L52:
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.value
            int r5 = r5 + 92
            int r5 = r5 - r2
            int r6 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r6
            int r5 = r5 % 2
            int r5 = android.view.KeyEvent.getDeadChar(r0, r0)
            int r5 = -r5
            int r5 = -r5
            r6 = r4 & r5
            r4 = r4 ^ r5
            r4 = r4 | r6
            int r4 = -r4
            int r4 = -r4
            r5 = r6 & r4
            r4 = r4 | r6
            int r5 = r5 + r4
            r4 = -118(0xffffffffffffff8a, float:NaN)
            int r6 = android.os.Process.getThreadPriority(r0)
            int r7 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r7 = r7 + 97
            int r7 = r7 - r2
            r8 = r7 ^ (-1)
            r7 = r7 & (-1)
            int r7 = r7 << r2
            int r8 = r8 + r7
            int r7 = r8 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r7
            int r8 = r8 % 2
            int r6 = r6 + 21
            int r6 = r6 - r2
            int r6 = r6 >> 6
            r7 = r4 & r6
            r4 = r4 ^ r6
            r4 = r4 | r7
            int r4 = -r4
            int r4 = -r4
            r6 = r7 | r4
            int r6 = r6 << r2
            r4 = r4 ^ r7
            int r6 = r6 - r4
            byte r4 = (byte) r6
            r6 = -1125762081(0xffffffffbce63bdf, float:-0.02810472)
            java.lang.String r7 = ""
            int r8 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r9 = r8 ^ 107(0x6b, float:1.5E-43)
            r8 = r8 & 107(0x6b, float:1.5E-43)
            int r8 = r8 << r2
            r10 = r9 ^ r8
            r8 = r8 & r9
            int r8 = r8 << r2
            int r10 = r10 + r8
            int r8 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r8
            int r10 = r10 % 2
            if (r10 != 0) goto Lb0
            r8 = 0
            goto Lb1
        Lb0:
            r8 = 1
        Lb1:
            if (r8 == 0) goto Lc1
            int r7 = android.text.TextUtils.getTrimmedLength(r7)
            int r7 = -r7
            r7 = r7 ^ (-1)
            int r6 = r6 - r7
            int r6 = r6 - r2
            int r7 = android.view.ViewConfiguration.getTapTimeout()
            goto Lcc
        Lc1:
            int r3 = android.text.TextUtils.getTrimmedLength(r7)
            int r6 = r6 << r3
            int r7 = android.view.ViewConfiguration.getTapTimeout()
            r3 = 13
        Lcc:
            r8 = 1364036402(0x514d8b32, float:5.5175225E10)
            int r3 = r7 >> r3
            int r8 = r8 - r3
            java.lang.String r1 = m11361c(r1, r5, r4, r6, r8)
            java.lang.String r1 = r1.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r12, r1)
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r3 = r1 | 89
            int r3 = r3 << r2
            r1 = r1 ^ 89
            int r3 = r3 - r1
            int r1 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r1
            int r3 = r3 % 2
            if (r3 == 0) goto Lee
            r0 = 1
        Lee:
            r1 = 0
            java.lang.String r3 = "data:"
            r4 = 4
            r5 = 9
            if (r0 == 0) goto L10a
            byte[] r0 = new byte[r5]
            r0 = {x015c: FILL_ARRAY_DATA  , data: [1, 0, 0, 1, 0, 1, 1, 1, 0} // fill-array
            int[] r4 = new int[r4]
            r4 = {x0166: FILL_ARRAY_DATA  , data: [82, 9, 0, 7} // fill-array
            boolean r3 = android.webkit.URLUtil.isDataUrl(r3)
            super.hashCode()     // Catch: java.lang.Throwable -> L108
            goto L118
        L108:
            r12 = move-exception
            throw r12
        L10a:
            byte[] r0 = new byte[r5]
            r0 = {x0172: FILL_ARRAY_DATA  , data: [1, 0, 0, 1, 0, 1, 1, 1, 0} // fill-array
            int[] r4 = new int[r4]
            r4 = {x017c: FILL_ARRAY_DATA  , data: [82, 9, 0, 7} // fill-array
            boolean r3 = android.webkit.URLUtil.isDataUrl(r3)
        L118:
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r5 = r5 + 81
            int r6 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r6
            int r5 = r5 % 2
            r6 = 87
            if (r5 == 0) goto L129
            r5 = 87
            goto L12b
        L129:
            r5 = 75
        L12b:
            if (r5 == r6) goto L139
            java.lang.String r0 = m11359d(r0, r4, r3)
            java.lang.String r0 = r0.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r13, r0)
            goto L145
        L139:
            java.lang.String r0 = m11359d(r0, r4, r3)
            java.lang.String r0 = r0.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r13, r0)
            int r0 = r1.length     // Catch: java.lang.Throwable -> L15a
        L145:
            java.security.PublicKey r13 = publicKeyFromString(r13)
            java.lang.String r12 = r11.encrypt(r12, r13)
            int r13 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r0 = r13 & 1
            r13 = r13 | r2
            int r0 = r0 + r13
            int r13 = r0 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r13
            int r0 = r0 % 2
            return r12
        L15a:
            r12 = move-exception
            throw r12
    }

    public final java.lang.String encrypt(java.lang.String r16, java.security.PublicKey r17) {
            r15 = this;
            r0 = r16
            int r1 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r2 = r1 & (-46)
            r3 = r1 ^ (-1)
            r3 = r3 & 45
            r2 = r2 | r3
            r1 = r1 & 45
            r3 = 1
            int r1 = r1 << r3
            r1 = r1 ^ (-1)
            int r2 = r2 - r1
            int r2 = r2 - r3
            int r1 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r1
            r1 = 2
            int r2 = r2 % r1
            long r4 = android.os.SystemClock.uptimeMillis()
            r6 = 0
            int r2 = (r4 > r6 ? 1 : (r4 == r6 ? 0 : -1))
            int r2 = -r2
            r4 = r2 & (-114(0xffffffffffffff8e, float:NaN))
            r2 = r2 ^ (-114(0xffffffffffffff8e, float:NaN))
            r2 = r2 | r4
            int r2 = -r2
            int r2 = -r2
            r5 = r4 & r2
            r2 = r2 | r4
            int r5 = r5 + r2
            short r2 = (short) r5
            r4 = -101(0xffffffffffffff9b, float:NaN)
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r6 = r5 & 95
            r5 = r5 | 95
            r7 = r6 ^ r5
            r5 = r5 & r6
            int r5 = r5 << r3
            int r7 = r7 + r5
            int r5 = r7 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r5
            int r7 = r7 % r1
            r5 = 48
            if (r7 == 0) goto L47
            r6 = 66
            goto L49
        L47:
            r6 = 48
        L49:
            r7 = 53
            java.lang.String r8 = ""
            r9 = 0
            if (r6 == r5) goto L58
            int r6 = android.text.TextUtils.getCapsMode(r8, r3, r3)
            int r4 = r4 % r6
            r6 = 53
            goto L6b
        L58:
            int r6 = android.text.TextUtils.getCapsMode(r8, r9, r9)
            int r6 = -r6
            r10 = r6 & (-101(0xffffffffffffff9b, float:NaN))
            r11 = r10 ^ (-1)
            r4 = r4 | r6
            r4 = r4 & r11
            int r6 = r10 << 1
            r10 = r4 & r6
            r4 = r4 | r6
            int r4 = r4 + r10
            r6 = -117(0xffffffffffffff8b, float:NaN)
        L6b:
            int r10 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r11 = r10 | 40
            int r11 = r11 << r3
            r10 = r10 ^ 40
            int r11 = r11 - r10
            int r11 = r11 - r3
            int r10 = r11 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r10
            int r11 = r11 % r1
            int r5 = android.text.TextUtils.indexOf(r8, r5, r9)
            r10 = r5 & (-1)
            r10 = r10 ^ (-1)
            r5 = r5 | (-1)
            r5 = r5 & r10
            int r5 = -r5
            r10 = r6 | r5
            int r10 = r10 << r3
            r5 = r5 ^ r6
            int r10 = r10 - r5
            int r10 = r10 - r9
            int r10 = r10 - r3
            byte r5 = (byte) r10
            r6 = -1125762081(0xffffffffbce63bdf, float:-0.02810472)
            int r10 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r10 = r10 + 103
            int r10 = r10 - r3
            int r10 = r10 - r3
            int r11 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r11
            int r10 = r10 % r1
            r11 = 12
            r12 = 97
            if (r10 == 0) goto La4
            r10 = 12
            goto La6
        La4:
            r10 = 97
        La6:
            if (r10 == r11) goto Lb3
            int r10 = android.text.TextUtils.indexOf(r8, r8)
            int r10 = -r10
            r11 = r10 ^ r6
            r6 = r6 & r10
            int r6 = r6 << r3
            int r11 = r11 + r6
            goto Lb9
        Lb3:
            int r10 = android.text.TextUtils.indexOf(r8, r8)
            int r11 = r6 % r10
        Lb9:
            int r6 = android.graphics.Color.blue(r9)
            r10 = 1364036402(0x514d8b32, float:5.5175225E10)
            int r6 = -r6
            r13 = r10 ^ r6
            r14 = r10 & r6
            r13 = r13 | r14
            int r13 = r13 << r3
            r14 = r14 ^ (-1)
            r6 = r6 | r10
            r6 = r6 & r14
            int r6 = -r6
            r6 = r6 ^ (-1)
            int r13 = r13 - r6
            int r13 = r13 - r3
            java.lang.String r2 = m11361c(r2, r4, r5, r11, r13)
            java.lang.String r2 = r2.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r0, r2)
            if (r17 != 0) goto Ldf
            r2 = 1
            goto Le0
        Ldf:
            r2 = 0
        Le0:
            r4 = 0
            if (r2 == 0) goto L11d
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r2 = r0 ^ 59
            r5 = r0 & 59
            r2 = r2 | r5
            int r2 = r2 << r3
            r5 = r0 & (-60)
            r0 = r0 ^ (-1)
            r0 = r0 & 59
            r0 = r0 | r5
            int r2 = r2 - r0
            int r0 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0
            int r2 = r2 % r1
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r2 = 21
            r5 = r0 ^ 21
            r6 = r0 & 21
            r5 = r5 | r6
            int r5 = r5 << r3
            r6 = r0 & (-22)
            r0 = r0 ^ (-1)
            r0 = r0 & r2
            r0 = r0 | r6
            int r0 = -r0
            r0 = r0 ^ (-1)
            int r5 = r5 - r0
            int r5 = r5 - r3
            int r0 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r0
            int r5 = r5 % r1
            if (r5 == 0) goto L115
            r9 = 1
        L115:
            if (r9 == r3) goto L118
            return r4
        L118:
            int r0 = r4.length     // Catch: java.lang.Throwable -> L11a
            return r4
        L11a:
            r0 = move-exception
            r1 = r0
            throw r1
        L11d:
            r2 = 34
            byte[] r2 = new byte[r2]
            r2 = {x025e: FILL_ARRAY_DATA  , data: [1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1} // fill-array
            r5 = 4
            int[] r6 = new int[r5]
            r6 = {x0274: FILL_ARRAY_DATA  , data: [0, 34, 0, 0} // fill-array
            boolean r10 = android.view.Gravity.isHorizontal(r9)
            r11 = r10 & 1
            r13 = r11 & (-1)
            r13 = r13 ^ (-1)
            r11 = r11 | (-1)
            r11 = r11 & r13
            r10 = r10 | r3
            r10 = r10 & r11
            java.lang.String r2 = m11359d(r2, r6, r10)
            java.lang.String r2 = r2.intern()
            int r6 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r10 = r6 & 15
            r6 = r6 | 15
            int r10 = r10 + r6
            int r6 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r6
            int r10 = r10 % r1
            r6 = 78
            if (r10 == 0) goto L154
            r10 = 78
            goto L156
        L154:
            r10 = 75
        L156:
            if (r10 == r6) goto L166
            javax.crypto.Cipher r2 = javax.crypto.Cipher.getInstance(r2)
            r6 = r17
            java.security.Key r6 = (java.security.Key) r6
            r2.init(r3, r6)
        L163:
            java.nio.charset.Charset r6 = java.nio.charset.StandardCharsets.UTF_8
            goto L172
        L166:
            javax.crypto.Cipher r2 = javax.crypto.Cipher.getInstance(r2)
            r6 = r17
            java.security.Key r6 = (java.security.Key) r6
            r2.init(r9, r6)
            goto L163
        L172:
            int[] r10 = new int[r5]
            r10 = {x0280: FILL_ARRAY_DATA  , data: [91, 22, 19, 20} // fill-array
            boolean r8 = android.telephony.PhoneNumberUtils.isGlobalPhoneNumber(r8)
            r8 = r8 ^ r3
            java.lang.String r8 = m11359d(r4, r10, r8)
            int r10 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r11 = r10 & 93
            r10 = r10 ^ 93
            r10 = r10 | r11
            int r11 = r11 + r10
            int r10 = r11 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r10
            int r11 = r11 % r1
            if (r11 != 0) goto L192
            r10 = 97
            goto L194
        L192:
            r10 = 91
        L194:
            r11 = 44
            if (r10 == r12) goto L1a9
            java.lang.String r8 = r8.intern()
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r6, r8)
            byte[] r0 = r0.getBytes(r6)
            byte[] r6 = new byte[r11]
            r6 = {x028c: FILL_ARRAY_DATA  , data: [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1} // fill-array
            goto L1bc
        L1a9:
            java.lang.String r8 = r8.intern()
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r6, r8)
            byte[] r0 = r0.getBytes(r6)
            byte[] r6 = new byte[r11]
            r6 = {x02a6: FILL_ARRAY_DATA  , data: [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1} // fill-array
            r8 = 67
            int r8 = r8 / r9
        L1bc:
            int[] r8 = new int[r5]
            r8 = {x02c0: FILL_ARRAY_DATA  , data: [113, 44, 0, 0} // fill-array
            java.lang.String r10 = "data:"
            boolean r10 = android.webkit.URLUtil.isDataUrl(r10)
            r11 = r10 & 1
            r12 = r11 & 0
            r13 = r11 ^ (-1)
            r13 = r13 & (-1)
            r12 = r12 | r13
            r10 = r10 ^ r3
            r10 = r10 | r11
            r10 = r10 & r12
            java.lang.String r6 = m11359d(r6, r8, r10)
            java.lang.String r6 = r6.intern()
            int r8 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r10 = 5
            r11 = r8 & (-6)
            r12 = r8 ^ (-1)
            r12 = r12 & r10
            r11 = r11 | r12
            r8 = r8 & r10
            int r8 = r8 << r3
            r10 = r11 & r8
            r8 = r8 | r11
            int r10 = r10 + r8
            int r8 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r8
            int r10 = r10 % r1
            if (r10 != 0) goto L1f3
            r8 = 0
            goto L1f4
        L1f3:
            r8 = 1
        L1f4:
            r10 = 50
            if (r8 == 0) goto L20a
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r0, r6)
            byte[] r0 = r2.doFinal(r0)
            byte[] r2 = new byte[r10]
            r2 = {x02cc: FILL_ARRAY_DATA  , data: [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0} // fill-array
            int[] r5 = new int[r5]
            r5 = {x02ea: FILL_ARRAY_DATA  , data: [157, 50, 181, 0} // fill-array
            goto L21c
        L20a:
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r0, r6)
            byte[] r0 = r2.doFinal(r0)
            byte[] r2 = new byte[r10]
            r2 = {x02f6: FILL_ARRAY_DATA  , data: [0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0} // fill-array
            int[] r5 = new int[r5]
            r5 = {x0314: FILL_ARRAY_DATA  , data: [157, 50, 181, 0} // fill-array
            int r6 = r4.length     // Catch: java.lang.Throwable -> L256
        L21c:
            java.lang.String r6 = "file:///android_asset/"
            boolean r6 = android.webkit.URLUtil.isAssetUrl(r6)
            java.lang.String r2 = m11359d(r2, r5, r6)
            java.lang.String r2 = r2.intern()
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r0, r2)
            int r2 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r5 = r2 & 53
            r2 = r2 | r7
            int r5 = r5 + r2
            int r2 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r2
            int r5 = r5 % r1
            java.lang.String r0 = android.util.Base64.encodeToString(r0, r1)
            int r2 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r5 = r2 & 85
            r2 = r2 | 85
            int r5 = r5 + r2
            int r2 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r2
            int r5 = r5 % r1
            if (r5 != 0) goto L24b
            goto L24c
        L24b:
            r9 = 1
        L24c:
            if (r9 == r3) goto L255
            super.hashCode()     // Catch: java.lang.Throwable -> L252
            return r0
        L252:
            r0 = move-exception
            r1 = r0
            throw r1
        L255:
            return r0
        L256:
            r0 = move-exception
            r1 = r0
            throw r1
        L259:
            r0 = move-exception
            r1 = r0
            goto L25d
        L25c:
            throw r1
        L25d:
            goto L25c
    }

    public final java.lang.String encrypt(java.lang.String r11, byte[] r12) {
            r10 = this;
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r1 = r0 ^ 121(0x79, float:1.7E-43)
            r0 = r0 & 121(0x79, float:1.7E-43)
            r2 = 1
            int r0 = r0 << r2
            r3 = r1 ^ r0
            r0 = r0 & r1
            int r0 = r0 << r2
            int r3 = r3 + r0
            int r0 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r0
            int r3 = r3 % 2
            r0 = 0
            if (r3 == 0) goto L18
            r1 = 0
            goto L19
        L18:
            r1 = 1
        L19:
            java.lang.String r3 = ""
            if (r1 == 0) goto L39
            r4 = 0
            int r1 = android.widget.ExpandableListView.getPackedPositionGroup(r4)
            int r1 = -r1
            int r1 = -r1
            r4 = r1 & (-115(0xffffffffffffff8d, float:NaN))
            r5 = r4 ^ (-1)
            r1 = r1 | (-115(0xffffffffffffff8d, float:NaN))
            r1 = r1 & r5
            int r4 = r4 << r2
            r4 = r4 ^ (-1)
            int r1 = r1 - r4
            int r1 = r1 - r2
            short r1 = (short) r1
            r4 = -101(0xffffffffffffff9b, float:NaN)
            int r3 = android.text.TextUtils.getOffsetAfter(r3, r0)
            goto L49
        L39:
            r1 = 49
            r4 = 1
            int r4 = android.widget.ExpandableListView.getPackedPositionGroup(r4)
            int r1 = r1 % r4
            short r1 = (short) r1
            r4 = 68
            int r3 = android.text.TextUtils.getOffsetAfter(r3, r2)
        L49:
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r6 = r5 ^ 48
            r7 = 48
            r5 = r5 & r7
            int r5 = r5 << r2
            int r6 = r6 + r5
            int r6 = r6 - r2
            int r5 = r6 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r5
            int r6 = r6 % 2
            int r3 = -r3
            r5 = r4 & r3
            r6 = r5 ^ (-1)
            r3 = r3 | r4
            r3 = r3 & r6
            int r4 = r5 << 1
            int r4 = -r4
            int r4 = -r4
            r5 = r3 & r4
            r3 = r3 | r4
            int r5 = r5 + r3
            r3 = 16777098(0xffff8a, float:2.3509722E-38)
            int r4 = android.graphics.Color.rgb(r0, r0, r0)
            r6 = r4 & r3
            r3 = r3 | r4
            int r3 = -r3
            int r3 = -r3
            r3 = r3 ^ (-1)
            int r6 = r6 - r3
            int r6 = r6 - r2
            byte r3 = (byte) r6
            r4 = -1125762081(0xffffffffbce63bdf, float:-0.02810472)
            int r6 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r8 = r6 & 3
            r6 = r6 ^ 3
            r6 = r6 | r8
            int r6 = -r6
            int r6 = -r6
            r9 = r8 ^ r6
            r6 = r6 & r8
            int r6 = r6 << r2
            int r9 = r9 + r6
            int r6 = r9 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r6
            int r9 = r9 % 2
            int r6 = android.graphics.Color.green(r0)
            int r6 = -r6
            r8 = r4 & r6
            r4 = r4 | r6
            r6 = r8 | r4
            int r6 = r6 << r2
            r4 = r4 ^ r8
            int r6 = r6 - r4
            r4 = 1364036406(0x514d8b36, float:5.517524E10)
            int r7 = android.text.AndroidCharacter.getEastAsianWidth(r7)
            int r7 = -r7
            r8 = r7 & r4
            r4 = r4 ^ r7
            r4 = r4 | r8
            int r4 = -r4
            int r4 = -r4
            r7 = r8 ^ r4
            r4 = r4 & r8
            int r4 = r4 << r2
            int r7 = r7 + r4
            java.lang.String r1 = m11361c(r1, r5, r3, r6, r7)
            int r3 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r4 = r3 & 7
            r3 = r3 ^ 7
            r3 = r3 | r4
            int r4 = r4 + r3
            int r3 = r4 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r3
            int r4 = r4 % 2
            java.lang.String r1 = r1.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r11, r1)
            r1 = 9
            byte[] r1 = new byte[r1]
            r1 = {x0122: FILL_ARRAY_DATA  , data: [1, 0, 0, 1, 0, 1, 1, 1, 0} // fill-array
            r3 = 4
            int[] r3 = new int[r3]
            r3 = {x012c: FILL_ARRAY_DATA  , data: [82, 9, 0, 7} // fill-array
            boolean r4 = android.os.Process.supportsProcesses()
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r6 = r5 ^ 29
            r5 = r5 & 29
            r5 = r5 | r6
            int r5 = r5 << r2
            int r6 = -r6
            r7 = r5 ^ r6
            r5 = r5 & r6
            int r5 = r5 << r2
            int r7 = r7 + r5
            int r5 = r7 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r5
            int r7 = r7 % 2
            if (r7 == 0) goto Lf1
            goto Lf2
        Lf1:
            r2 = 0
        Lf2:
            if (r2 == 0) goto L10e
            java.lang.String r0 = m11359d(r1, r3, r4)
            java.lang.String r0 = r0.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r12, r0)
            java.security.PublicKey r12 = publicKeyFromByteArray(r12)
            java.lang.String r11 = r10.encrypt(r11, r12)
            r12 = 0
            super.hashCode()     // Catch: java.lang.Throwable -> L10c
            goto L121
        L10c:
            r11 = move-exception
            throw r11
        L10e:
            java.lang.String r0 = m11359d(r1, r3, r4)
            java.lang.String r0 = r0.intern()
            kotlin.jvm.internal.Intrinsics.m7114a(r12, r0)
            java.security.PublicKey r12 = publicKeyFromByteArray(r12)
            java.lang.String r11 = r10.encrypt(r11, r12)
        L121:
            return r11
    }

    public final java.security.KeyPair generateKeyPair() {
            r11 = this;
            int r0 = br.com.original.common.cryptography.AsymmetricCryptography.value
            r1 = r0 & 41
            r0 = r0 ^ 41
            r0 = r0 | r1
            r2 = r1 ^ r0
            r0 = r0 & r1
            r1 = 1
            int r0 = r0 << r1
            int r2 = r2 + r0
            int r0 = r2 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r0
            int r2 = r2 % 2
            r0 = 0
            if (r2 != 0) goto L18
            r2 = 0
            goto L19
        L18:
            r2 = 1
        L19:
            java.lang.String r3 = ""
            if (r2 == r1) goto L2f
            int r2 = android.text.TextUtils.getCapsMode(r3, r0, r1)
            r4 = r2 & 32
            r2 = r2 ^ 32
            r2 = r2 | r4
            int r4 = r4 + r2
            short r2 = (short) r4
            r4 = 62
        L2a:
            int r5 = android.view.ViewConfiguration.getTapTimeout()
            goto L3e
        L2f:
            int r2 = android.text.TextUtils.getCapsMode(r3, r0, r0)
            int r2 = -r2
            r4 = r2 & (-74)
            r2 = r2 ^ (-74)
            r2 = r2 | r4
            int r4 = r4 + r2
            short r2 = (short) r4
            r4 = -101(0xffffffffffffff9b, float:NaN)
            goto L2a
        L3e:
            int r5 = r5 >> 16
            int r5 = -r5
            r6 = r4 & r5
            r7 = r6 ^ (-1)
            r4 = r4 | r5
            r4 = r4 & r7
            int r5 = r6 << 1
            int r5 = -r5
            int r5 = -r5
            r6 = r4 ^ r5
            r4 = r4 & r5
            int r4 = r4 << r1
            int r6 = r6 + r4
            r4 = 48
            int r3 = android.text.TextUtils.indexOf(r3, r4, r0)
            int r3 = -r3
            r3 = r3 ^ (-1)
            int r3 = -r3
            r5 = r3 ^ (-82)
            r3 = r3 & (-82)
            int r3 = r3 << r1
            int r5 = r5 + r3
            r3 = r5 & (-1)
            r5 = r5 | (-1)
            int r3 = r3 + r5
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            int r5 = r5 + 65
            int r5 = r5 - r1
            int r5 = r5 - r1
            int r7 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r7
            int r5 = r5 % 2
            byte r3 = (byte) r3
            r5 = -1125762084(0xffffffffbce63bdc, float:-0.028104715)
            int r7 = android.view.ViewConfiguration.getDoubleTapTimeout()
            int r7 = r7 >> 16
            int r7 = -r7
            int r7 = -r7
            r8 = r7 & r5
            r5 = r5 ^ r7
            r5 = r5 | r8
            r7 = r8 ^ r5
            r5 = r5 & r8
            int r5 = r5 << r1
            int r7 = r7 + r5
            r5 = 1364036366(0x514d8b0e, float:5.5175078E10)
            int r8 = android.view.ViewConfiguration.getJumpTapTimeout()
            int r9 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r10 = r9 & 51
            r9 = r9 ^ 51
            r9 = r9 | r10
            int r10 = r10 + r9
            int r9 = r10 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r9
            int r10 = r10 % 2
            int r8 = r8 >> 16
            int r8 = -r8
            int r8 = -r8
            r9 = r5 & r8
            r5 = r5 ^ r8
            r5 = r5 | r9
            int r9 = r9 + r5
            java.lang.String r2 = m11361c(r2, r6, r3, r7, r9)
            java.lang.String r2 = r2.intern()
            java.security.KeyPairGenerator r2 = java.security.KeyPairGenerator.getInstance(r2)
            r3 = 2048(0x800, float:2.87E-42)
            int r5 = br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint
            r6 = r5 & 20
            r5 = r5 | 20
            int r6 = r6 + r5
            r5 = r6 & (-1)
            r6 = r6 | (-1)
            int r5 = r5 + r6
            int r6 = r5 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.value = r6
            int r5 = r5 % 2
            r6 = 40
            if (r5 == 0) goto Lcb
            r5 = 36
            goto Lcd
        Lcb:
            r5 = 40
        Lcd:
            r7 = 4
            r8 = 22
            if (r5 == r6) goto Le9
            r2.initialize(r3)
            java.security.KeyPair r2 = r2.genKeyPair()
            byte[] r3 = new byte[r8]
            r3 = {x012a: FILL_ARRAY_DATA  , data: [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1} // fill-array
            int[] r4 = new int[r7]
            r4 = {x013a: FILL_ARRAY_DATA  , data: [207, 22, 124, 22} // fill-array
            r5 = 105(0x69, float:1.47E-43)
            r5 = r4
            r4 = 105(0x69, float:1.47E-43)
            goto Lfa
        Le9:
            r2.initialize(r3)
            java.security.KeyPair r2 = r2.genKeyPair()
            byte[] r3 = new byte[r8]
            r3 = {x0146: FILL_ARRAY_DATA  , data: [1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1} // fill-array
            int[] r5 = new int[r7]
            r5 = {x0156: FILL_ARRAY_DATA  , data: [207, 22, 124, 22} // fill-array
        Lfa:
            boolean r4 = android.telephony.PhoneNumberUtils.is12Key(r4)
            r6 = r4 & (-2)
            r4 = r4 ^ (-1)
            r4 = r4 & r1
            r7 = r6 ^ r4
            r4 = r4 & r6
            r4 = r4 | r7
            java.lang.String r3 = m11359d(r3, r5, r4)
            java.lang.String r3 = r3.intern()
            kotlin.jvm.internal.Intrinsics.$r8$backportedMethods$utility$Double$1$hashCode(r2, r3)
            int r3 = br.com.original.common.cryptography.AsymmetricCryptography.value
            int r3 = r3 + 6
            int r3 = r3 - r1
            int r4 = r3 % 128
            br.com.original.common.cryptography.AsymmetricCryptography.SuppressLint = r4
            int r3 = r3 % 2
            if (r3 != 0) goto L120
            r0 = 1
        L120:
            if (r0 == r1) goto L123
            return r2
        L123:
            r0 = 0
            int r0 = r0.length     // Catch: java.lang.Throwable -> L126
            return r2
        L126:
            r0 = move-exception
            goto L129
        L128:
            throw r0
        L129:
            goto L128
    }
}
